Sharkbot is back in Google Play
blog.fox-it.com/2022/09/02/sharkbot-is-back-in-google-play/
September 2, 2022

Authored by Alberto Segura (main author) and Mike Stokkel (co-author)

Introduction
After we discovered in February 2022 the SharkBotDropper in Google Play posing as a fake
Android antivirus and cleaner, now we have detected a new version of this dropper active in
the Google Play and dropping a new version of Sharkbot.
This new dropper doesn’t rely Accessibility permissions to automatically perform the
installation of the dropper Sharkbot malware. Instead, this new version ask the victim to
install the malware as a fake update for the antivirus to stay protected against threats.
We have found two SharkbotDopper apps active in Google Play Store, with 10K and 50K
installs each of them.

1/14

The Google Play droppers are downloading the full featured Sharkbot V2, discovered some
time ago by ThreatFabric. On the 16th of August 2022, Fox-IT’s Threat Intelligence team
observed new command-and-control servers (C2s), that were providing a list of targets
including banks outside of United Kingdom and Italy. The new targeted countries in those
C2s were: Spain, Australia, Poland, Germany, United States of America and Austria.
On the 22nd of August 2022, Fox-IT’s Threat Intelligence team found a new Sharkbot
sample with version 2.25; communicating with command-and-control servers mentioned
previously. This Sharkbot version introduced a new feature to steal session cookies from the
victims that logs into their bank account.
2/14

The new SharkbotDropper in Google Play
In the previous versions of SharkbotDropper, the dropper was abusing accessibility
permissions in order to install automatically the dropper malware. To do this, the dropper
made a request to its command-and-control server, which provided an URL to download the
full featured Sharkbot malware and a list of steps to automatically install the malware, as we
can see in the following image.

Abusing the accessibility permissions, the dropper was able to automatically click all the
buttons shown in the UI to install Sharkbot. But this not the case in this new version of the
dropper for Sharkbot. The dropper instead will make a request to the C2 server to directly
receive the APK file of Sharkbot. It won’t receive a download link alongside the steps to
install the malware using the ‘Automatic Transfer Systems’ (ATS) features, which it normally
did.

In order to make this request, the dropper uses the following code, in which it prepares the
POST request body with a JSON object containing information about the infection. The body
of the request is encrypted using RC4 and a hard coded key.

3/14

In order to complete the installation on the infected device, the dropper will ask the user to
install this APK as an update for the fake antivirus. Which results in the malware starting an
Android Intent to install the fake update.

This way, the new version of the Sharkbot dropper is now installing the payload in a non
automatic way, which makes it more difficult to get installed – since it depends on the user
interaction to be installed -, but it is now more difficult to detect before being published in
4/14

Google Play Store, since it doesn’t need the accessibility permissions which are always
suspicious.
Besides this, the dropper has also removed the ‘Direct Reply’ feature, used to automatically
reply to the received notifications on the infected device. This is another feature which needs
suspicious permissions, and which once removed makes it more difficult to detect.
To make detection of the dropper by Google’s review team even harder, the malware
contains a basic configuration hard coded and encrypted using RC4, as we can see in the
following image.

The decrypted configuration, as we can see in the following image, contains the list of
targeted applications, the C2 domain and the countries targeted by the campaign (in this
example UK and Italy).

If we look carefully at the code used to check the installed apps against the targeted apps,
we can realize that it first makes another check in the first lines:

5/14

String lowerCase = ((TelephonyManager)
App.f7282a.getSystemService("phone")).getSimCountryIso().toLowerCase();
if (!lowerCase.isEmpty() && this.f.getString(0).contains(lowerCase))

Besides having at least one of the targeted apps installed in the device, the SharkbotDropper
is checking if the SIM provider’s country code is one of the ones included in the configuration
– in this campaign it must be GB or IT. If it matches and the device has installed any of the
targeted apps, then the dropper can request the full malware download from the C2 server.
This way, it is much more difficult to check if the app is dropping something malicious. But
this is not the only way to make sure only targeted users are infected, the app published in
Google Play is only available to install in United Kingdom and Italy.

After the dropper installs the actual Sharkbot v2 malware, it’s time for the malware to ask for
accessibility permissions to start stealing victim’s information.

Sharkbot 2.25-2.26: New features to steal cookies
The Sharkbot malware keeps the usual information stealing features we introduced in our
first post about Sharkbot:
Injections (overlay attacks): this feature allows Sharkbot to steal credentials by showing
a fake website (phishing) inside a WebView. It is shown as soon as the malware
detects one of the banking application has been opened.

6/14

Keylogging: this feature allows Sharkbot to receive every accessibility event produced
in the infected device, this way, it can log events such as button clicks, changes in
TextFields, etc, and finally send them to the C2.

7/14

SMS intercept: this feature allows Sharkbot to receive every text message received in
the device, and send it to the C2.

8/14

Remote control/ATS: this feature allows Sharkbot to simulate accessibility events such
as button clicks, physical button presses, TextField changes, etc. It is used to
automatically make financial transactions using the victim’s device, this way the threat
actors don’t need to log in to the stolen bank account, bypassing a lot of the security
measures.

Those features were present in Sharkbot 1, but also in Sharkbot 2, which didn’t change too
much related to the implemented features to steal information. As ThreatFabric pointed out in
their tweet, Sharkbot 2, which was detected in May 2022, is a code refactor of the malware
and introduces a few changes related to the C2 Domain Generation Algorithm (DGA) and the
protocol used to communicate with the server.
Version 2 introduced a new DGA, with new TLDs and new code, since it now uses MD5 to
generate the domain name instead of Base64.

We have not observed any big changes until version 2.25, in which the developers of
Sharkbot have introduced a new and interesting feature: Cookie Stealing or Cookie logger.
This new feature allows Sharkbot to receive an URL and an User-Agent value – using a new
command ‘logsCookie’ -, these will be used to open a WebView loading this URL – using the
received User-Agent as header – as we can see in the following images of the code.

9/14

Once the victim logged in to his bank account, the malware will receive the PageFinished
event and will get the cookies of the website loaded inside the malicious WebView, to finally
send them to the C2.

10/14

New campaigns in new countries
During our research, we observed that the newer C2 servers are providing new targeted
applications in Sharkbot’s configuration. The list of targeted countries has grown including
Spain, Australia, Poland, Germany, United States of America and Austria. But the
interesting thing is the new targeted applications are not targeted using the typical
webinjections, instead, they are targeted using the keylogging – grabber – features. This
way, the malware is stealing information from the text showed inside the official app. As we
can see in the following image, the focus seems to be getting the account balance and, in
some cases, the password, by reading the content of specific TextFields.

11/14

Also, for some of the targeted applications, the malware is providing within the configuration
a list of ATS configurations used to avoid the log in based on fingerprint, which should allow
to show the usual username and password form. This allows the malware to steal the
credentials using the previously mentioned ‘keylogging’ features, since log in via fingerprint
should ask for credentials.
12/14

Conclusion
Since we published our first blog post about Sharkbot in March 2022, in which we detected
the SharkbotDropper campaigns within Google Play Store, the developers have been
working hard to improve their malware and the dropper. In May, ThreatFabric found a new
version of Sharkbot, the version 2.0 of Sharkbot that was a refactor of the source code,
included some changes in the communication protocol and in the DGA.
Until now, Sharkbot’s developers seem to have been focusing on the dropper in order to
keep using Google Play Store to distribute their malware in the latest campaigns. These
latest campaigns still use fake antivirus and Android cleaners to install the dropper from the
Google Play.
With all these the changes and new features, we are expecting to see more campaigns,
targeted applications, targeted countries and changes in Sharkbot this year.

Indicators of compromise
SharkbotDropper samples published in Google Play:
hxxps://play.google[.]com/store/apps/details?id=com.kylhavy.antivirus
hxxps://play.google[.]com/store/apps/details?id=com.mbkristine8.cleanmaster
Dropper Command-and-control (C2):
hxxp://mefika[.]me/
Sharkbot 2.25 (introducing new Cookie stealing features):
Hash: 7f2248f5de8a74b3d1c48be0db574b1c6558d6edae347592b29dc5234337a5ff
C2: hxxp://browntrawler[.]store/ (185.212.47[.]113)

13/14

Sharkbot v2.26 sample:
Hash: 870747141b1a2afcd76b4c6482ce0c3c21480ae3700d9cb9dd318aed0f963c58
C2: hxxp://browntrawler[.]store/ (185.212.47[.]113)
DGA Active C2s:
23080420d0d93913[.]live (185.212.47[.]113)
7f3e61be7bb7363d[.]live (185.212.47[.]113)

14/14