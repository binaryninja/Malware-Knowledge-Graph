Catching the silent whisper: Understanding the
Derusbi family tree
Micky Pun, Eric Leung, Neo Tan
Virus Bulletin 2015

© Copyright Fortinet Inc. All rights reserved.

Agenda
 What is Derusbi
 Background

 Variants of Derusbi
 Technical Analysis

2

What is Derusbi

What is Derusbi
 DLL
 Remote Access Trojan

 Relies on other malware to load or plant on a system
 Resides on a system by imitating legitimate software DLLs
(OfficeUt32.dll, Office32.dll, Update.dll…etc) during static file
header scanning

 Limited amount of samples (The number of samples since 2008
till today are still in the hundreds)

4

Background

Background
 Timeline
 2008 – Earliest sample with compile time Aug 3, 2008
» (md5: 338e4deb0be7769ef2c9d7080fb56154)

 2011 – Mitsubishi Heavy Industries hack (discovered Oct, 2011)
» (md5: 1cd7835b9ac253a72f8cd94405100d62) (Ref: ixoxiブログ)( compile time Apr 15,2011 )

 2014 – CareFirst BlueCross BlueShield hack (by the work of Sakula)
»Revealed In May 2015
»1.1 millions customer information breached
»Actual took place at June 2014 (Ref: CareFirstAnswers)

 2015 – Anthem hack (by the work of Sakula)
»Revealed in Mar 2015
»78.8 million people information breached (Ref : AnthemFacts )
»Data is stolen around Dec 2014 (Ref: AnthemFacts )
»Part of the Deep Panda Campaign
6

Possible Infection Routine

Collected from Deep Panda(2014) and
Anthem Breach (2014)

Sakula

1. Attachment in
spear-phishing email
or drive-by download

Remote
Administration Tool

Shyape

TXPFProxy.dll
Derusbi DLL
Collected from Mitsubishi
Hack(2011) and ShellCrew
Campaign(2013)

Sample with
compilation dated
at 2012

7

Possible Infection Routine

Collected from Deep Panda(2014) and
Anthem Breach (2014)

Sakula

2. Sakula unpacks
Shyape (downloader)

Remote
Administration Tool

Shyape

TXPFProxy.dll
Derusbi DLL
Collected from Mitsubishi
Hack(2011) and ShellCrew
Campaign(2013)

Sample with
compilation dated
at 2012

8

Possible Infection Routine

Collected from Deep Panda(2014) and
Anthem Breach (2014)

Sakula

3a. Derusbi DLL is
downloaded and ran
as service

Remote
Administration Tool

Shyape

TXPFProxy.dll
Derusbi DLL
Collected from Mitsubishi
Hack(2011) and ShellCrew
Campaign(2013)

Sample with
compilation dated
at 2012

9

Possible Infection Routine

Collected from Deep Panda(2014) and
Anthem Breach (2014)

Sakula

3b. Infoadmin.dll
and sqlsrv32.dll

Remote
Administration Tool

Shyape

TXPFProxy.dll
Derusbi DLL
Collected from Mitsubishi
Hack(2011) and ShellCrew
Campaign(2013)

Sample with
compilation dated
at 2012

10

Possible Infection Routine

Collected from Deep Panda(2014) and
Anthem Breach (2014)

Sakula

Remote
Administration Tool

3c. TXPFProxy.dll
(possible relative
of infoadmin.dll
and sqlsrv32.dll)

Shyape

TXPFProxy.dll
Derusbi DLL
Collected from Mitsubishi
Hack(2011) and ShellCrew
Campaign(2013)

Sample with
compilation dated
at 2012

11

Similarities

Collected from Deep Panda(2014) and
Anthem Breach (2014)

Sakula

Remote
Administration Tool

Sakula, Shyape,
Derusbi shares
the same stolen
Digital Signature
DTOPTOOLZ
Co.

Shyape

TXPFProxy.dll
Derusbi DLL
Collected from Mitsubishi
Hack(2011) and ShellCrew
Campaign(2013)

Sample with
compilation dated
at 2012

12

Similarities

Collected from Deep Panda(2014) and
Anthem Breach (2014)

Sakula

Shyape and Derusbi
both uses similar traffic
pattern to say covert

Remote
Administration Tool

Shyape

TXPFProxy.dll
Derusbi DLL
Collected from Mitsubishi
Hack(2011) and ShellCrew
Campaign(2013)

Sample with
compilation dated
at 2012

13

Similarities

14

Similarities

Collected from Deep Panda(2014) and
Anthem Breach (2014)

Sakula

Share the similar
constructing
method for
identifier

Remote
Administration Tool

Shyape

TXPFProxy.dll
Derusbi DLL
Collected from Mitsubishi
Hack(2011) and ShellCrew
Campaign(2013)

Sample with
compilation dated
at 2012

15

Similarities

16

Variants of Derusbi

Variants of Derusbi

18

Variants of Derusbi

19

Variants of Derusbi

20

Variants of Derusbi

21

Variants of Derusbi

22

Variants of Derusbi
 Some notes:
»64-bit version first seen in 2011 – somewhat rare
»Newer samples don’t necessarily use the newest version of a specific
class
»Much more features in samples from 2013/2014 versus 2008

23

Technical Analysis

DLL Export Functions
 DllEntryPoint
»Initialization
»Calls regsvr32.exe
»If sample is packed, unpack the export functions

 DllRegisterServer
»Persistence Management

 DllUnregisterServer
»Invoke Payload/BDSocket Thread

 ServiceMain
»Main code
»Contains the Payload/BDSocket Thread

25

Technical Analysis
Persistence Management

Derusbi Loading Sequence
DLLEntryPoint
Invoke by sysprep.exe

Invoke via regsvr32.exe

Invoke by starting a
service via svchost.exe

DllRegisterServer
Invoke via regsvr32.exe /s /u

Service control
dispatcher creates a
new thread to execute

DllUnRegisterServer

ServiceMain
Directly calls
Payload

27

Persistence Management - DllRegisterServer
 Decrypt and store built-in configuration at
»Key: HK_Local_Machine\Software\Microsoft\RPC
»Subkey: Security
»Data: xor(not(one-byte key))[Decrypted Configuration]

 Backup the current file to %SystemFolder% with filename
»[hardcoded-prefix]{randomstring}.[hardcoded-extension]

 Store the persistent DLL path in
»Key: HK_LOCAL_MACHINE\System\CurrentControlSet\Service\
{Persistent Service Name}\Parameter
»Subkey: ServiceDLL

28

Built-in Configuration

Persistent service name

Beacon URL

File path where the
Derusbi client is stored on
the computer under a
different name

29

Built-in Configuration

30

Persistence Management - DllRegisterServer
 If McAfee's anti-virus service is detected, it would not use
regsvr32.exe to invoke the DllUnregisterServer export function
 It will copy of regsvr32.exe to update.exe, run update.exe and
then invoke the DllUnregisterServer export function

31

Persistence Management – Registry Setup

Key: HK_LM\Software\Microsoft\RPC
Sub Key: Security

Key: HK_LM\Software\Microsoft\Windows
NT\Current Version\Svchost\
Sub Key: netsvcs

xor(not(one-byte key))[Decrypted Configuration]

Persistent Service
Name

Identifier

Service
Name

Persistent
Service
Name

Key: HK_LM\System\CurrentControlSet\Service\Persistent
Service Name\Parameter
Sub Key: ServiceDll

Service
Name

Service
Name

Path to Derusbi DLL
at %systemRoot%

32

Technical Analysis
Payload

Inside ServiceMain
 Main Thread
Load
Config

Elevate
Privileges

•
•
•
•

Decrypt
and Load
Driver

Start 2nd
Thread

Run
Original
Service

SeDebugPrivilege
SeLoadDriverPrivilege
SeShutdownPrivilege
SeTcbPrivilege

34

Optional Embedded Driver
 Main Thread
Load
Config

Elevate
Privileges

Decrypt
and Load
Driver

Start 2nd
Thread

Run
Original
Service

 Not all samples contain an embedded driver
 XOR-encrypted, with 4-byte key
 Conditions for decrypting and loading driver
»360’s ZhuDongFangYu.exe must not be running (optional)
»The username of the current process must be “system”

35

Embedded Driver
 Main Thread
Load
Config

Elevate
Privileges

Decrypt
and Load
Driver

Start 2nd
Thread

Run
Original
Service

 Example Drivers:
»Keylogger
»USB/Disk infector
»Network hooking driver

36

Embedded Driver – USB/Disk Infector
 Derusbi Sample (MD5: 92d18d1ca7e66539873be7f5366b04d1)

 Iterate all directories on the disk
 Drop Derusbi when service DLLs found
 Create autorun.inf to auto-register Derusbi when the infected
drive is connected to a computer

37

Inside ServiceMain
 Main Thread
Load
Config

Elevate
Privileges

Decrypt
and Load
Driver

Start 2nd
Thread

Run
Original
Service

 Second Thread
Load Config

Setup Connection to
C&C

Wait and Process
C&C Commands until
Shutdown

38

Technical Analysis
Built-in modules

Built-in Classes
 Written in C++
 RTTI information!
»Thanks to IDA ClassInformer plugin

 Unfortunately, some 2014 samples uses updated classes

41

Some Built-in Class Names
 INTERNAL_CMD
 PCC_BASEMOD

 PCC_CMD
 PCC_FILE
 PCC_MISC
 PCC_PROXY
 PCC_SYS

42

Built-in Class Hierarchy
 All command classes are child classes of abstract class
PCC_BASEMOD

43

Built-in Command Class Functions
 PCC_BASEMOD

 INTERNAL_CMD

 Novetta, 2014 describes some of these functions for an older
Derusbi sample
44

Built-in Command Class Functions – Con’t
 There is also a default handler
»packet_type/class_id: 100h

 Some of its functions:
»Terminate current connection (deprecated)
»Cleanup data stored in the different modules
»Backup configuration to registry, set current file to be deleted on
reboot, terminate current process immediately
»Terminate after current jobs
»Install a new DLL

45

Built-in Command Class Examples
 INTERNAL_CMD (supersedes PCC_CMD class)
»2011 – Present
 Some samples from 2012 do not have this class though

»Class ID: 5
»Interactive shell commands
»Has help/? functions!!!
»Common OS operations (v1.1)
 cd, dir, md, rd, del, copy, ren, type, start

»Additional commands in v1.2
 runas
 reboot [-f]
 shutdown [-f]
 clearlog
 wget [httpurl]

46

Built-in Command Class Examples – Con’t
 PCC_MISC
»2011 – Present
»Most samples have this class
»Class ID: 10
»Mixture of numerical and text commands
»Command IDs:
 ID=1: save attached file to temp dir and load as DLL. Can remember up to
16 files.
 ID=2: delete temp file. Attached filename must correspond to one of the 16
saved from command ID 1

47

Built-in Command Class Examples – Con’t
 PCC_MISC
»2011 – Present
»Most samples have this class
»Class ID: 10
»Mixture of numerical and text commands
»Text commands:
 “pstore”: steals password information from IE and firefox and send to C2
 “keylog": send keylog info to C2
 “info”: gathers system information and send to C2
» OS name and build number
» Network adapter info
» IE version
» Proxy server info
» AV info (Norton, 360, Kaspersky, Trend Micro, ESET, Avira)

48

Built-in Command Class Examples – Con’t
 PCC_SYS
»2008 – Present
»Almost all samples have this class
»Class ID: 4 (80h in older samples)
»4 types of numerical commands
 Processes-related: enumerate and kill processes
 Services-related: enumerate, start, stop, delete services
 Registry-related: enumerate, create/delete keys, set/delete/replace values
 Screenshot command

»Each type contains its own command IDs

49

Built-in Command Class Functions
 PCC_FILE
»2008 – Present
»Almost all samples have this class
»Class ID: 8 (84h in older samples)
»Numerical commands
 Cleanup
 Enumerate all drives
 Find/rename/delete/copy/move file
 Save a file to system
 Recursively enumerate directory
 Start new process
 Recursively enumerate all drives

50

Current generation (2014 – Present)
 Old code, just packed
»Class structure and functions from 2011/2012
»Compatibility/on-going attack?

 New version
»Same payload delivery
»Updated built-in classes

51

Updated Built-in Classes
 Still written in C++
 No RTTI information

 Updated/rewritten classes
»Custom code for creating new() objects
»New is_this_data_for_me() virtual function
»Dynamically decrypt embedded helper DLL during class initialization
 Inject helper DLL into explorer.exe in class command handler function
 Communicate with helper DLL using pipes

»Removed duplicate functionality in modules

52

Updated Built-in Classes – Con’t
 Command IDs changed
 No more verbose commands

 No interactive shell
 PCC_SYS, PCC_FILE, default_handler functionality still there
 Identify newer OS like Win8 (but no Win 8.1 or 10)
 Processor architecture detection(x86, x64, IA64, ARM)

53

Conclusion

Challenges and Remediation
 Samples circulating between vendors
»Limited number of samples
»Delayed discovery
»Corrupt files

 To improve detection
»Class/modular structure
»IPS
»Sakula/Shyape

55

Summary
 Modular
 Fully-featured for stealth and espionage

 Targeted attacks
 Operations could take up to 2 years

56

Any questions?
{mpun, ericleung, ntan}@fortinet.com