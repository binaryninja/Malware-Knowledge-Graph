Analyzing PIPEDREAM:
Challenges in testing
an ICS attack toolkit
Speaker
Jimmy Wylie Principal Malware Analyst II, @mayahustle

Agenda
‚Ä¢ Background
‚Ä¢ PIPEDREAM Capabilities
‚Ä¢ Hardware & Lab Setup
‚Ä¢ Assessing the Impact
‚Ä¢ Results from Lab Testing
‚Ä¢ Real World Usage
‚Ä¢ Conclusion

It‚Äôs a Group Effort
Carolyn Ahlers
Logan Carpenter
Sam Hanson
Reid Wightman
Kate Vajda
Kyle O‚ÄôMeara
Casey Brooks
Conor McLaren
Kevin Woolf
Maritza Dubec
Cathy Clarke
Matt Pahl

Austin Scott
Raahul Mareddy
Michael Logoyda
Jess O‚ÄôBryan
Brian Warehime
Sergio Caltagirone
Thomas Winston
Gus Serino
John Burns
Gregory Pollman
Julian Gutmanis
Rob Lee

Marissa Costa
Grant Freter
Andrue Coombes
Camille Stauffer
Monserrat Thomason
Danielle Gauthier
Avril Adams
Megan Pingatore
Mark Urban
Peter Vescuso
Gloria Cedillo
Mike Hoffman

Where‚Äôd you find it?
Required Legalese
Dragos identified and analyzed
PIPEDREAM‚Äôs capabilities
through our normal business,
independent research, and
collaboration with various
partners in early 2022.

PIPEDREAM Components

EVILSCHOLAR

Designed to discover, access,
manipulate, and disable Schneider
Electric PLCs. Can target additional
hardware through CODESYS library.
Designed to scan, identify,
interact, and manipulate
Omron PLCs

Windows Components
Remote operational implant to
perform host reconnaissance
and command-and-control.
DUSTTUNNEL

BADOMEN

MOUSEHOLE

Tool for interacting with OPC UA
servers. Designed to read and write
node attribute data, enumerate the
Server Namespace and associated
NodeIds, and brute force credentials.

LAZYCARGO

User-mode Windows executable
that drops and exploits a
vulnerable ASRock driver
to load an unsigned driver.

Impacted Devices, Abused Protocols & Vulns
ICS Protocols
NX1P2 Compact Machine Controller
NX-SL3300 Safety Controller
NJ501-1300 Automation Controller
NX-ECC EtherCAT Coupler
NX-EIC202 Ethernet/IP Coupler
NX-ECC203 EtherCAT Coupler
S8VK Power Supply
1S-series Servo Drives

Vulnerabilities,
Exposures, and
Susceptibilities

TM251 PLC
TM241 PLC
TM221 PLC
TM258 PLC
TM238 PLC
LMC058 Motion Controller
LMC078 Motion Controller

CVE-2020-15368 ‚Äì
LAZYCARGO utilizes this CVE
to load an unsigned driver.

CODESYS
Schneider Discovery (NetManage)
Modbus
Omron FINS
OPC UA

Undisclosed
Vulnerabilities in
Schneider Electric.

CVE-2022-34151 Hardcoded Creds in
Omron devices.

Lab Set-up

Omron Devices
NX1P2 Controller

R88D-1SN10F-ECT Servo Drive

NX-EIC202 Ethernet IP Coupler

R88D-1SN01L-ECT Servo Drive

NX-ECC201 EtherCat Coupler

R88M-1M10030S-S2 AC
Servo Motor

SL3300 Safety Controller

Schneider Electric Devices
Modicon TM241 PLC (4.0.X firmware)
Modicon TM251 PLC (5.0 firmware)

OPC UA (not shown)
Kepware OPC UA server
Various Rockwell devices controlling
a small pipeline process.

Other hardware
Phoenix Contact power supply
Sixnet Industrial ethernet switch
Stack light, buttons

Device Acquisition is a Pain
TM251 running 5.0, need 4.0.X
‚Ä¢ Downgrading == bricked PLC L

Ask the vendor
‚Ä¢ Company attitude
‚Ä¢ CYA, NDAs, reporting deadlines

eBay or ask a friend
Easy to purchase,
stay independent

Analysis Approach
Looking at 5 malware samples in parallel
‚Ä¢

Focus on PLCs and malware RE.

‚Ä¢

Test on representative devices.

Analysis Process & Goals
1.

Static analysis while waiting for hardware.

2.

Release of initial details and mitigation advice.

3.

Runtime analysis with PCAP collection.

4.

Which techniques work, and on what device.

5.

Release updated details and specific mitigation advice.

6.

Hypothesize and test what next versions could look like.

Analysis Questions
IMPACT OF
CURRENT
CAPABILITY

‚Ä¢ Does it work?
‚Ä¢ Is the CODESYS implementation specific to Schneider or
applicable to all CODESYSv3 devices?
‚Ä¢ Does BADOMEN‚Äôs Servo module work on other servos?
‚Ä¢ More generally: can these tools manipulate PLC logic?

ASSESSMENT OF
FUTURE CAPABILITY

VICTIMOLOGY

‚Ä¢ How easy is it to automate an attack?
‚Ä¢ What functionality could be added with minimal
research? What will it look like in 6 months?
‚Ä¢ Can we narrow down a likely target?

‚Ä¢

Scan for OPC UA Servers on a
local network (default: TCP/4840).
‚Ä¢ Port can be changed and can
scan for OPC UA Servers anywhere.

MOUSEHOLE

‚Ä¢
Multiplatform toolkit
to interact with
OPC UA servers.

Brute force OPC UA server based on
password list supplied by operator.
‚Ä¢ Can use a default password
or compromised passwords.

FORMAT:
Python framework

‚Ä¢

Read OPC UA structure from the server
and change specific attributes.

TARGETS:
OPC-UA servers

‚Ä¢

Better implementation of
CRASHOVERRIDE OPC-DA
attack methodology.

MOUSEHOLE: Remote Interaction to Attack
‚Ä¢ MOUSEHOLE works primarily due to the
open-source OPC UA library it runs on.
‚Ä¢ Easy to get it to work and manipulate a process.
‚Ä¢ We tested on a Kepware OPC server connected to
Rockwell PLCs controlling a mock pipeline process.
‚Ä¢ After verifying it worked, we automated an attack using
MOUSEHOLE to produce a more real-world attack scenario.

MOUSEHOLE: Attack scenario
Nodes are addressed via 3-tuple
Namespace

Type of Identifier

Identifier

ns=2;s=MyTemperature
‚Ä¢ Run MOUSEHOLE via CLI to gather Server and Node information for a process.
‚Ä¢ ns=2;s=Channel1.Device2.high pressure setpoint
‚Ä¢ ns=2;s=Channel1.Device2.Level_PID
‚Ä¢ ns=2;s=Channel1.Device2.solenoid energize

‚Ä¢ Remove MOUSEHOLE and deploy an automated utility to manipulate those values.
‚Ä¢ High pressure setpoint 15 psi -> 100 psi
‚Ä¢ Level_PID: 80 -> 100 (pump speed)
‚Ä¢ Solenoid energize: True -> False (closes the valve)

MOUSEHOLE: Potential Repercussions
Deadheading is when a pump operates
with no flow through the pump due to
a closed or blocked discharge valve.

‚Ä¢

A modification to the PLC logic
incorrectly allowed the pump to
keep running outside of designated
start/stop sequence with the suction
and discharge valves closed.

‚Ä¢

Slurry inside the pump became
superheated.

‚Ä¢

This resulted in pump explosion.

EVILSCHOLAR

Framework to interact with
Schneider Electric controllers via
CODESYS and Modbus libraries
FORMAT:
Python + Linux ELF Library
TARGETS:
Schneider Electric Controllers

‚Ä¢ Rapid scan that identifies all Schneider
PLCs on the local network from a device
that has already been compromised via
User Datagram Protocol (UDP) multicast
with a destination port of 27127.
‚Ä¢ Brute force Schneider Electric PLC
passwords using UDP port 1740.
‚Ä¢ CODESYS denial-of-service attack to
prevent network communications
from reaching the PLC.
‚Ä¢ Sever CODESYS connections, likely to
facilitate either credential capture or
to prep for DOS.
‚Ä¢ ‚ÄòPacket of death‚Äô attack.
‚Ä¢ Proxy Modbus traffic through a target PLC.
‚Ä¢ ‚ÄùMaintenance‚Äù actions like logging in/out,
uploading/downloading files, etc.

EVILSCHOLAR: CODESYS
‚Ä¢ CODESYS is a device management
protocol used by 100s of vendors.
‚Ä¢ Wide usage == natural target.
‚Ä¢ Layered protocol: Services, Channel,
Datagram, Block Driver layer.
‚Ä¢ Essentially a custom TCP implementation on
top of UDP with Application layer support.

EVILSCHOLAR: Lab Set Up Issues
Devices Tested: TM241, TM251
Custom CODESYS implementation
is a nightmare to deal with.
CODESYS is pseudo-routable
Setting up lab connections == No VM
with NAT or you won‚Äôt receive packets
‚Ä¢

We had a hell of a time
connecting to the devices.

‚Ä¢

In one lab, we couldn‚Äôt
establish any connections.

‚Ä¢

In another lab, connecting to these
devices wasn‚Äôt an issue. (?!? üò°)

‚Ä¢

We thought it was a firmware issue.
(We were wrong.)

EVILSCHOLAR: Bad Assumptions
‚Ä¢ Multiple Parts of EVILSCHOLAR‚Äôs
CODESYS implementation were
broken, due to the developer‚Äôs
invalid assumptions.
‚Ä¢ Could connect to the TM241/TM251
with no fixes if the devices were on
a network of the right size.
‚Ä¢ Once fixed, we could connect to
the TM241, TM251, Raspberry Pi,
and Hitachi EHV+, and start testing
plugins without worrying about
network sizing. (no big endian)

EVILSCHOLAR: PLCProxy Results
PLANT
NETWORK
PLC ENUMERATION
(CODESYS )

2

1

PROXIED ROUTE
INSERTION TO
PROTECTED
GATEWAY VIA PLC

INDUSTRIAL
FIREWALL
CONTROLLER
NETWORK

3
PROXIED ENUMERATION OF PROTECTED
CONTROLLERS (MODBUS/TCP)

Originally, we thought
PLCProxy worked like this.

AFTER DYNAMIC ANALYSIS
‚Ä¢ Original finding that it creates a
route to gateway IP was incorrect.
1.

What it does is create a route to the
internal network where gateway is located.

2.

The target network cannot be on
the same network as the malware.

‚Ä¢ While the proxy plugin only uses
Modbus, it turns out that the TM251
will route any protocol it receives
(SSH, HTTP, etc.).

EVILSCHOLAR: Logic Corruption
‚Ä¢ EVILSCHOLAR allows an operator to
transfer files to the device.
‚Ä¢ Pull logic, modify it, and put it back
on the controller.
‚Ä¢ This should be trivial provided the logic
compiles to native assembly, and not an
unknown bytecode.

SE Logic Corruption Result

SE Logic Corruption Takeaways
‚Ä¢ We can crash and manipulate logic on the
controller, creating various error and output states.
‚Ä¢ In both cases, comms to the controller from
the EWS are not possible without a power cycle.
‚Ä¢ If you connect to the PLC before the crash, or
before the code starts, the PLC won‚Äôt let you
retrieve the logic, only let you overwrite it.
(EVILSCHOLAR can though!)
‚Ä¢ Outputs are not asserted to ‚ÄòFAIL SAFE‚Äô values
if the crash is triggered on the first execution cycle.

Wait where are the deets?
‚Ä¢ Reported the vulnerabilities to Schneider
Electric and CODESYS Group on June 22.
‚Ä¢ Following responsible disclosure process.
‚Ä¢ Waiting on CVEs.

‚Ä¢ Log into a PLC with a variety of methods.
BADOMEN

‚Ä¢ Exploit telnet connections to the PLC to
load a malware implant.
‚Ä¢ List directories of the PLC.

Remote shell to interact with
Omron controllers via Omron
HTTP API and FINS protocol
FORMAT:
Python framework
TARGETS:
Omron equipment

‚Ä¢ Upload, download, delete and execute
files on the PLC.
‚Ä¢ Denial-of-service (DoS) attack against a PLC.
‚Ä¢ Terminate active PLC connections.
‚Ä¢ Scan and identify Omron devices using FINS
(Factory Interface Network Service) protocol.
‚Ä¢ Interpret Omron device responses.
‚Ä¢ Collect PCAP on the OT network via uploaded
TCPDUMP.
‚Ä¢ Manipulate Servos via EtherCat.
‚Ä¢ Creating, restoring, and decoding of system process
and configuration files (possible ladder logic theft).
‚Ä¢ Change Operating Mode (Program -> Run).
‚Ä¢ Wipe the controller‚Äôs memory.

BADOMEN: Console
‚Ä¢

Console takes advantage of CVE-2022-34151(Hard-coded
Credentials) to interact with an HTTP Server on the NX1P2
and other NJ-series devices

‚Ä¢

The server has various CGI endpoints (also used by SYSMAC
studio) to manipulate and administer the device: ‚Äúcpu.fcgi‚Äù
and ‚Äúecat.fcgi‚Äù

SYSMAC logic transfer

BADOMEN: Logic Corruption
Backup & Transfer modules allow for
retrieving & repackaging new logic.
Test:
1. Use the Backup Module to retrieve logic.
2. Identify binary shared object and disassemble.
3. Change entrypoint function code with a branch to a bad address.
4. Repackage code.
5. Use Transfer Module to replace files on the controller.

Results ‚Äì Major Fault

Program Upload Fails

This also prevents the
engineer from enabling
Program Mode

BADOMEN: Logic Corruption Confirmed
‚Ä¢ Recovery?
‚Ä¢ Restore from SD Card fails, but allows
you to enable Program mode
‚Ä¢ Then, factory reset.
‚Ä¢ Finally, you can restore logic to controller.

‚Ä¢ Still under investigation:
‚Ä¢ Other methods of recovery.
‚Ä¢ What our code modification did to the controller.

BADOMEN: Servo Module Testing
Devices Tested: NX1P2, R88D-1SN10F-ECT & R88D-1SN01L-ECT
Servo Drives, & R88M-1M10030S-S2 AC Servo Motor
‚Ä¢ BADOMEN has a Servo Module for reading
and writing Servo Drive parameters via EtherCat.
‚Ä¢ Servo Motor spins a shaft.
‚Ä¢ Servo Drive powers the motor, controls the
motor, handles comms to the master PLC.
‚Ä¢ 1SN10F is a 380VAC to 480VAC drive.
1SN01L is a 100-120VAC Drive.
‚Ä¢ Verified that comms worked with the
large drive, then switched to the small one.
‚Ä¢ No access to reliable source of three phase 480VAC
‚Ä¢ Using 120VAC greatly reduces risk of accidental electrocutions or arcing

BADOMEN

ETHERCAT SETUP

BADOMEN: Troublesome Parameters
We disabled the following parameters:
Excessive Velocity Deviation Detection (3B60.05)
Warning Mask 1 selection (4020.01)
Warning Mask 3 selection (4020.03)
Position Detection Function -Following Error (3B50.05)

We manipulated these:
Excessive Speed Detection (3B60.04)
Set Vibration Detection (3B70.01)

Set to 1 stops the servo
Set to max means 1.2x max speed
Set this to max 500%

BADOMEN: Servo Logic Manipulation
‚Ä¢ Manipulating Parameters is interesting and
likely more of a precursor to an attack.
‚Ä¢

Although spamming Excessive Speed Detection
would be a bad day.

‚Ä¢ The NX1P2 stores the program that
controls the servo drive.
‚Ä¢ We already know we can modify code on the device.
‚Ä¢ Can we modify code that controls the Servo‚Äôs RPM?

Step 1: Download Logic to the Device
Step 0: Watch YouTube video on setting up Servo

Step 2: Grab Backup and Decompile
Step 3: Patch args
Step 4: Transfer to PLC

BADOMEN: Safety System Corruption
‚Ä¢ Even from the UI, it was clear that safety
programming was a very separate process:
‚Ä¢

Doesn‚Äôt transfer logic the same way.

‚Ä¢

Put the controller in program mode,
then debug stop. This transfers logic.

‚Ä¢

Then transition to Debug Run, followed by a Safety Validation.

‚Ä¢

Finally, the safety controller can enter run mode.

BADOMEN: Safety Program Download

SYSMAC Safety Program Download

Safety Function

BADOMEN: No support for Safety Programs
‚Ä¢ BADOMEN only supports the CPU and ECAT endpoints.
‚Ä¢ Safety Programming uses the NxBus endpoint.
‚Ä¢ There are no references to this endpoint in BADOMEN.
‚Ä¢ This is likely the next step development-wise
for a full-fledged attack against a Servo.
‚Ä¢ (Unless the network is poorly configured.)

Real World Usage
‚Ä¢ These utilities can cause problems now.
‚Ä¢ But in our judgement, usage would look
a lot like our MOUSEHOLE demo
‚Ä¢ IT intrusion to steal important process documentation
‚Ä¢ Use PIPEDREAM to recon plant network and find important
PLCs that control key aspects of the target process
‚Ä¢ Use this knowledge to develop automated attack
utilities to achieve a disruptive/destructive effect.

PIPEDREAM is a new escalation in mal dev
‚Ä¢ First time we‚Äôve seen
malware devs attempt
a plugin framework for
specific PLCs/Protocols.
‚Ä¢

ICSsploit and Metasploit
‚ÄúSCADA‚Äù aren‚Äôt quite the same.

‚Ä¢ ICS process agnostic.
‚Ä¢ Enables an operator
to conduct recon
and disruption.

Industry Improvements
‚Ä¢ Open up Protocols and Operating Systems.
‚Ä¢ We‚Äôre so behind vs IT Software and Internet Protocols.

‚Ä¢ EWS or separate vendor distributed utilities need
to support forensics for IR and post-mortems.
‚Ä¢ The fact that SoMachine and Sysmac can‚Äôt pull
a bad project file is an issue.
‚Ä¢ Vendors aren‚Äôt the only experts anymore.

‚Ä¢ Implement better integrity checking for running code.
Don‚Äôt assume code always comes from the EWS!

For mitigations:
dragos.com/pipedream
Jimmy Wylie
jimmy@dragos.com
@mayahustle