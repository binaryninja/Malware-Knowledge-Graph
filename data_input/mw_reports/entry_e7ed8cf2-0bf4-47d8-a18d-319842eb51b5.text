Tracking Bumblebee’s
Development
Suweera De Souza
Senior Security Researcher at
TAC eCrime CrowdStrike

Presentation Outline

●

Bumblebee’s development timeline

●

Endpoint Detection and Response
(EDR) Evasion Techniques

●

Assessment about the developers

●

CrowdStrike Name: Shindig

Bumblebee Chronology
17 March 2022
15 September 2021

Reporting on
CVE-2021-40444
attacks1

First reporting
of Bumblebee2

Activity

Hiatus

10 August 2022
19 January 2023

Back from
hiatus

Back from
hiatus

31 January 2022

9 October 2022

First build as a
bot

SmokeBot
Distribution

3 Major Affiliates

BatLoader
Distribution

1 Major Affiliate

March 2022

24 October 2022

February 2023

1 Major Affiliate

1

https://www.microsoft.com/en-us/security/blog/2021/09/15/analyzing-attacks-that-exploit-themshtml-cve-2021-40444-vulnerability/
2

https://blog.google/threat-analysis-group/exposing-initial-access-broker-ties-conti/

1 Major Affiliate
October 2022

January 2023

Bumblebee Overview

Loader / Main DLL Development

Note: Bumblebee’s Main DLL and plugins use the
Boost C++ library in many of its implementations.

Loader Start
Bot Start

●

●

If EDR hook is present on
RtlExitUserProcess , ensure
Bumblebee’s thread finished execution
to prevent EDR from accessing the
thread
Technique gets swapped for Thread
execution hijacking

Loader introduced with remote library injection
Two loader variations of a loader are used

Hiatus

Execution

Evasion

1

Build

https://github.com/LordNoteworthy/al-khaser

Remote Library Injection
●
●

Masquerades Bumblebee’s main DLL as a legitimate DLL
Hooks APIs used by NTDLL for mapping and loading DLLs
○

●
●

1
2

Emulates their operations against a memory region

POC released in 20041
Observed used by Ramnit2

http://www.hick.org/code/skape/papers/remote-library-injection.pdf
https://securityintelligence.com/posts/from-ramnit-to-bumblebee-via-neverquest/

Thread Execution Hijacking (Variation)
●

Masquerades Bumblebee under a decoy start routine
○

●
●
●

1
2

Start routine is hidden under RtlNewSecurityObjectWithMultipleInheritance

Swaps the start routine in the suspended thread’s context
Typically used for process injection1
Observed used by COZY BEAR C2-Client Dropbox Loader2

https://attack.mitre.org/techniques/T1055/003/
https://github.com/Dump-GUY/Malware-analysis-and-Reverse-engineering/blob/main/APT29_C2-Client_Dropbox_Loader/APT29-DropboxLoader_analysis.md

C2 Communication
●
●
●

WebSocket protocol
Message is stored as JSON
Message is RC4 encrypted

●

The hit message is crafted
from the Al-Khaser techniques

Request

Response
Ping

Beaconing-style
communication messages are sent
in a loop

Hit
binary_db contains

browsing history
from Chrome and
MSEdge

Task Result Request

Task

C2 Communication Development
Unencrypted Task
request/response
Bot start
Encrypted Task
request/response

Loader
introduced

Updates grouped by:
●
Protocol
●
User-Agent string
●
URL endpoint string
●
Client version
●
JSON Messages

Ping + Task
request/response

Ping + Hit + Task
request/response

Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv

Hiatus

Tasks

Tasks Development

Switch from using Windows API to WMI

Loader
introduced

Bot start

Persistence is different based on the loader used:
●
PowerSploit
○
DPAPI for system encryption1
○
Schedule task executes a script that
uses DPAPI to decrypt the PS file
●
Packed DLL
○
Scheduled task uses LOLBin
odbcconf to execute the DLL

Initially a simple implementation of gdt was being tested2
Remote Procedure Call (RPC) with
named pipes is used to
communicate with the plugins3

1

https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.protecteddata?view=windowsdesktop-6.0

2

https://learn.microsoft.com/en-us/windows/win32/procthread/creating-a-child-process-with-redirected-input-and-output

3

https://learn.microsoft.com/en-us/windows/win32/rpc/asynchronous-rpc-over-the-named-pipe-protocol

Hiatus

Asynchronous Procedure Call (APC) Queue Code
Injection (with WMI)
●

●

Injected code is added to the target process
thread’s APC queue which gets executed
when the thread enters an alterable state1
Bumblebee injects its payloads into
processes created with WMI

Shellcode Injection
1

https://attack.mitre.org/techniques/T1055/004/

DLL Injection

Hook Module
●

Removes EDR hooks on APIs
○
○
○

●

Uses Remote Library Injection to load the payload DLL as a
legitimate DLL

●

Implementation matches libsplice1
○

1

Compares the API’s instructions in memory to that of the physical file
Compares instructions with a Length disassembler
Copy API’s instructions from physical file to memory

Commonly observed:
■ Ramnit, TrickBot, BokBot
■ Game cheats

https://github.com/vol4ok/libsplice

Conclusion
●

Mapping activity to the software development lifecycle
○

○

●

Stepping out of the norm
○

●

Agile methodology
■ First release is a minimal viable product (MVP) - 31 January 2022 - 31 March
2022
■ Phase 2 introduced more EDR evasion - 31 March 2022 onwards
C2 infrastructure worked on during “hiatus”
No API hashing or string obfuscation
■ Likely a result of using EDR evasion during execution

Mature dev practices:
■

■

Boost
● C2 communication
● Command execution
libsplice - for Splicing

Thank You!