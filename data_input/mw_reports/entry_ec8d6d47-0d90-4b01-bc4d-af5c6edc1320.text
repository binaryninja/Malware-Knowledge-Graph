POCKET-SIZED
BADNESS

Why Ransomware Comes as a Plot Twist
in the Cat-Mouse Game
Federico 'phretor' Maggi
Stefano 'raistlin' Zanero

$ whoami
● Forward-Looking Threat (FTR) researcher @ Trend Micro
○
○

Research on upcoming/future threats and risks
Cybercrime investigation

● Interested in too many things
● Formerly Assistant Professor @ POLIMI
○
○
○

~50 papers published
~25 invited talks & lectures
~100 students supervised

● PC/board member of various conferences/workshops
○
○
○
○
○

ACSAC (first week of December, Hollywood)
AsiaCCS
DIMVA
OWASP AppSecEU
EuroSec

AGENDA
● Quick retrospective on ransomware
● The humble beginning of mobile ransomware
● Case studies of mobile ransomware
● Typical technical features of mobile ransomware
○

And how to automatically detect them

● Tool!
○

How it works
■

○

Does it work?

How to get it!

● Conclusions: An economics perspective on ransomware

FROM CRYPTOVIROLOGY
TO MOBILE RANSOMWARE

1996 → 2012
Petya
TeslaCrypt 4.0
Linux Encoder
Cryptovirology
theorized

1996

CryptoLocker

2000

2004

One_half
GPCode

2013

DirtyDecrypt
Filecoder

-

CryptoWall

2014

CryptoDefense
CBTLocker
TorrentLocker
CoinVault

TeslaCrypt

2015

Cryptvault
DMALock
Tox

50+ distinct families (190+ if we count the variants)
state of the art encryption
hundreds of millions $ of revenue (in H1 2016)

Locky
PadCrypt
CryptXXX

2016

Jigsaw ?!@#$ ?
Radamant
Hydracrypt
Cerber

THE "LITTLE" WORLD
OF MOBILE RANSOMWARE

MOBILE TARGETS
Cryptovirology
theorized

1996

15x increase
(Apr '15–Apr '16)

CryptoLocker

2000

2004

One_half
GPCode

2013

DirtyDecrypt
Filecoder

CryptoWall

2014

CryptoDefense
CBTLocker
TorrentLocker
CoinVault

Simplocker (May '14)
Koler (May '14)
TkLocker (Jun '14)
Pletora (Jun '14)
Svpeng/Scarepackage (Jun-Oct '14)

10–25% of all malware
in certain areas
(e.g., Australia, Singapore)
2015

Cryptvault
DMALock
Tox

2016

Jigsaw
Radamant
Hydracrypt
Cerber
Fusob (Jan'15-Apr' 16)
Small (Mid '14-Apr' 16)
Lockscreen (Sep '16)

New Simplocker (Jan '15)
New PornDroid (May' 15)
Lockerpin (Dec '15)

CASE STUDIES
OF MOBILE RANSOMWARE

SLocker (a.k.a. Simplocker, or Simple Locker)
● First Android ransomware family
● ~15,600 samples analyzed
● No "real" encryption:
○
○
○

Hides files
Contains and uses AES routines only a in ~50 samples
2015 variant does use encryption with per-device key

● Uses SMS (sometimes Tor) for C&C communication

● Screen locking via soft button event hijacking

DEVICE
LOCKING

SCREEN LOCKING: BASIC TECHNIQUE

DEVICE
LOCKING

https://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyDown(int, android.view.KeyEvent)

Koler: POLICE-THEMED RANSOMWARE
● ~5,000 samples analyzed
● <0.05% use encryption
○ The rest just threatens victims
● Interesting and quite complex distribution network

● Well-localized police-themed locking screen
○ 60 languages
○ Country-specific LEA and gov-related lingo
○ Key names and photos used

THREATENING
TEXT

Screenshots courtesy of Kaffeine.

THREATENING
TEXT

Svpeng: Real encryption
● ~2,000 samples analyzed
● Used to be a banking trojan used to steal ~$1M in frauds
● Ransomware features were added later. We found:
○ Encryption
○ Screen locking
■ As illustrated earlier
■ Via Device Admin API abuse
○ Threatening text

● A good summary of all mobile ransomware techniques

DATA
ENCRYPTION

DATA
ENCRYPTION

Device Admin API Abuse (in the manifest)

ADMIN API
ABUSE

Lockdroid.E & Google's Prompt Patch in Nougat
● Newest family: Sep 2016
● Uses
○ resetPassword(pseudo-random passcode)
○ lockNow()

● In Nougat, resetPassword() is "one use"
○ If password is set already
■ resetPassword() can't be called
● No backward compatibility
● No (benign) apps can automatically change/reset the password
○ User interaction will always be required

ADMIN API
ABUSE

DETECTION TECHNIQUES

http://www.wikihow.com/Draw-Cheshire-from-Alice-in-Wonderland

Analysis & Detection Approach
New APK file

THREATENING
TEXT

DEVICE
LOCKING

DATA
ENCRYPTION

Ransomware?
Simply scareware?
Non ransomware?

ADMIN API
ABUSE

THREATENING
TEXT

DEVICE
LOCKING

DATA
ENCRYPTION

ADMIN API
ABUSE

Threatening Text: Details

THREATENING
TEXT

● must be clear, understandable and

convincing

● coercion techniques

○ refer to law codes
○ various accusations
■ copyright violation
■ illegal content found
■ prohibited sites visited

● detailed payment instructions

Threatening Text: Payment Instructions

THREATENING
TEXT

→ NLP + ML pipeline

THREATENING
TEXT

● Statically allocated strings & XML resources
○

Parse disassembled code & resources for string variables

● Transmitted via network from the C&C
○

Network trace → ASCII strings

● Rendered on screen (e.g., image, text)
○

Screenshots → OCR → ASCII strings

C&C

Natural Language Processing Pipeline → ML
1. Language detection
○

frequency-based analysis (e.g., English, French)

○
○

"This device has been locked for safety reasons"
"All actions performed are fixed"

○
○

"This device has been locked for safety reasons"
"All actions performed are fixed"

○
○

"device locked safety reasons"
"actions performed fixed"

2. Segmentation = Split into sentences
3. Stop-words removal
4. Stemming

1

0

0

1

1

0

0

1

0

1

0

1

1

0

0

0 ...

action

…

…

device

fixed

…

…

lock

…

perform

…

reason

safe

…

…

…

5. Stem vector

THREATENING
TEXT

Machine Learning Classification: Training Set
1 0 0 0 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 1 0

T

THREATENING
TEXT

Training Set Labelling
T

THREATENING
TEXT

Tmoney
Taccusation

Tlaw

Scoring

new text: x = {c1, c2, ..., cn }

score: m(x) = max{ cos-sim(c, t) }

T
t

THREATENING
TEXT

Tmoney
c

c t
c
t

Tlaw

Taccusation

Scoring and Decision

THREATENING
TEXT

decision thresholds: minimum to detect known ransomware
if (best score in "money")
likely ransomware

if (best score in "accusation" or "law" & ~"money")
likely scareware

THREATENING
TEXT

DEVICE
LOCKING

DATA
ENCRYPTION

ADMIN API
ABUSE

Device Locking

DEVICE
LOCKING

(1) Immortal dialogs
● (A) Fill screen with an activity/dialog/window
● (B) Inhibit navigation
○
○

Hijack onKeyUp()/onKeyDown()
Cover or hide soft keys by using SYSTEM_ALERT_WINDOW → draw overlays
■

Fix in Android M makes it more difficult for an attacker, fortunately

● (C) Create non-cancelable dialog
○

Use setCancelable(false)

(2) Device admin API abuse
● Call resetPassword() and lockNow()
○

Upcoming fix in Android N (yay!)
ADMIN API
ABUSE

Hijack onKeyUp()/onKeyDown()
● Search code for all android.app.Activity (subclasses)
○

that declare onKeyUp/onKeyDown

● Custom Smali simulator
○
○
○

"Execute" all statements
Within the scope of onKeyUp/onKeyDown methods
Follow function calls

DEVICE
LOCKING

Hijack onKeyUp()/onKeyDown()
● Search code for all android.app.Activity (subclasses)
○

that declare onKeyUp/onKeyDown

● Custom Smali simulator
○
○

Find whether home (0x3) or back (0x4) is targeted
Find all possible return values

DEVICE
LOCKING

THREATENING
TEXT

DEVICE
LOCKING

DATA
ENCRYPTION

ADMIN API
ABUSE

Device Admin API Abuse

ADMIN API
ABUSE

Look at: a6dedc5f639b2e1f7101d18c08afc66d

Looking at the Code

Detection? We start from the manifest

ADMIN API
ABUSE

Manifest → Receiver → CFG → Reachability
● Start from the Receiver found in the manifest
● Obtain app's CFG (via FlowDroid)
○

soot.jimple.infoflow.cfg.SharedCfg.waitForCfg()

● Calculate all entry points (via FlowDroid)
● Visit CFG breadth first to find calls to lockNow() & friends

● If nothing is found, "resolve" reflective calls
○

...at least, we try to…

○

We "connect" CFG nodes by materializing calls to
java.lang.reflect.Method.invoke(method)

ADMIN API
ABUSE

Dealing with Obfuscated Method Names

ADMIN API
ABUSE

"koOpqUTbcVRhwomXlASpvutejuWHJnQxxaoinoermf"

How do we Deal With This?
6: reflection

5: find decl.

4
2: find method
3

1: find call

THREATENING
TEXT

DEVICE
LOCKING

DATA
ENCRYPTION

ADMIN API
ABUSE

Recap: Encryption

DATA
ENCRYPTION

● Sources:
○ java.io.File: listFiles() or list()
○ java.lang.Runtime: exec()
● Sinks:
○ javax.crypto.Cipher: doFinal()
○ javax.crypto.CipherOutputStream()
Ah, of course, no UI initiated!

Find Static Encryption Flows → FlowDroid

file pointer → byte[]
byte[] → cipher's update
Not propagated by default, but very
efficient to do

DATA
ENCRYPTION

Great! We Have a Pipeline!
New APK file

THREATENING
TEXT

DEVICE
LOCKING

DATA
ENCRYPTION

Ransomware?
Simply scareware?
Non ransomware?

ADMIN API
ABUSE

But it Takes Time

12 secs. vs. manual RE is OK. But...
● 12 secs per thousands of samples/day is not fast
○

Remember, we want to run this at the app-store scale

malware

● Pre-filtering to the rescue!
ransomware

● Design principles
○
○
○

Very fast but very precise
Confuse a benign app as a suspicious one? Fine.
Confuse a malicious app as a benign one. Hell...no!

goodware

Machine Learning Classification Approach
● Design principle → Cost-sensitive classifiers
Cost(False negatives) << Cost(False positives)
Cost(benign confused as malicious) << Cost(malicious confused as benign)

ime
t
5
1
bout

a

s

● Ensemble classifier with majority voting between
○
○
○

J48 decision tree
Random forest
Decision table

Features
● Lot's of research on that
● We borrow some features, not the way to use them
○

Permissions (boolean)
■

○

File Statistics (numeric, novel)
■
■
■

○

File size
Number of permissions
Number of services, activities, receivers, avg. class size, number of packages

Lightweight behavioral features (boolean, novel)
■
■
■

○

yes/no array of requested Android permissions

Send SMS or reads phone info onStartup()
Calls native utils (e.g., ls, grep, root, chmod)
...

Other features (boolean, novel)
■
■

is package name composed by a single part?
does the reversed package name match a real domain name?

Time (seconds)

Fast and Precise!

~12 secs → ~1.25 secs

Sample: 39780965255168083534b596c9b28c4e3e99e85decc3ed1f091f11d92eb7159d

EXPERIMENTS

Datasets
SOURCE

SIZE

AndRadar

172,174

AndroTotal.org

12,842

USE

Malware + Goodware (false positive eval.)

Malware Genome

1,260

Generic

1,239

Known ransomware

207

Text-analysis training (manually vetted)

Unseen ransomware

443

Detection evaluation

Ransomware daily feed

~38,425 (and counting)

Results
● False positives (~0.07%)
○
○
○

Corner case: large portions of law- or copyright-related text (EULA)
6 benign apps used to extensively modify the UI
1 adware app

● Detection rate (~99%)
○
○
○

49 samples turned out to be mislabeled
4 were actually ransomware, but somewhat disarmed/not working
11 language unsupported (Spanish, Russian)
■

○

Extended the language classifier right away (30 minutes manual work)

All the rest was correctly classified

WAIT WAIT…
THE TOOL, THE TOOL!

HelDroid: Source Code Release!

● [new!] http://github.com/necst/heldroid
● REST API http://ransom.mobi
● Run daily on VT feed of Android ransomware samples
○
○
○

About ~38,500 samples so far
Filterable/sortable tables by detected feature
Downloadable reports

http://ransom.mobi/scans/

overall id

ea + imp
lementat

pre-filter +

ion

enhancements

PDFs @ http://maggi.cc/publications or https://github.com/phretor/publications

Mobile Ransomware → My Personal Take:
An "Economics" Perspective on Ransomware

FROM A SURVEY (run by Trend Micro in UK)

Before infection

Upon infection

Recovery

(source)

FROM A SURVEY (run by Trend Micro in UK)
Before infection

Upon infection

Recovery

~74%
won't
pay

(source)

FROM A SURVEY (run by Trend Micro in UK)
Before infection

Upon infection

Recovery

~74%
won't
pay
~65%
paid
(source)

FROM A SURVEY (run by Trend Micro in UK)
Before infection

Upon infection

Recovery

~74%
won't
pay
~65%

~35%
no data

paid
(source)

WHY RANSOMWARE IS DIFFERENT
● 1: It is destructive - Changes everything
○
○

It has to be!
No show → No gold

● 2: "Pure profit" business (very modest costs)
○

More profit than 68.7% of the businesses in the Forbes top 2000

● 3: Business model backed by honesty
○
○

Honest attacker → successful business
Non negligible fraction of unhonest attackers

MORE SURRENDERS → MORE PAYMENTS
→ Vicious circle
● Victims pay → Attackers expectation increases
● Attackers gain confidence in the business → Prices increase

Secret sauce = how much can the victim afford?

VICIOUS CIRCLE AMPLIFIERS: INSURANCES
"[...] we’ll reimburse [...] up to $1000 per endpoint, or $1,000,000 in
protection overall for the company. Guaranteed."
(source: easy to find)

● Thanks! The crooks are super happy now!
● All they need to do is target all customers of this vendor, and get to
~1000 endpoints, asking $1,000,000 overall

VICIOUS CIRCLE AMPLIFIERS: INSURANCES
"It’s time for security companies to back their technology and
provide users with the financial assurance they deserve against
ransomware attacks."

No seriously? Think for a minute about the global, long-term effect of this idea...

THANK YOU

Why Ransomware Comes as a Plot Twist
in the Cat-Mouse Game
Federico 'phretor' Maggi
~
@phretor - http://maggi.cc
&&
Stefano 'raistlin' Zanero
Nicolò Andronio
Nicola della Rocca
Chengyu Zheng

EXTRA SLIDES

(source)