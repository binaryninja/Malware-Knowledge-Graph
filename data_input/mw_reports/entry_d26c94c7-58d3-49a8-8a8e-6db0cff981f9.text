Behind a Malware Lifecycle and Infection Chain
Linking Asprox, Zemot, Rovix and Rerdom Malware Families

Table of Contents
Overview.................................................................................................................................................... 3
Phase Two: Zemot.................................................................................................................................... 4
The Monetization Mission: Web Click Fraud and Advertising Impression Fraud.................... 16

Behind Malware Infection

2

Overview
Malware infection chains and lifecycles are often talked about in the advanced threat discussions in
a generic way, addressing droppers, payloads, command-and-control communications, and missions
without any specific details of the different players in the lifecycle, their roles or the specific functions
they serve. While looking into the Rerdom malware, we had a unique opportunity to link different
malware families and an operator, following the infection chain back to its origin. In doing so, we’re able
to illuminate the process, which we hope will inform others about the intricacies of advanced threats.

The Rerdom Malware
While investigating some click-fraud activity, Damballa found that there is a connection between Asprox,
Zemot, Rovnix and Rerdom. Though this connection is complicated, we were able to decrypt sensitive
command and control (C&C) data thus exposing one of the least understood aspects of this infection chain.
Now that we have a good understanding of what the relationship looks like and how the process works
we decided it was time to share the information with the community. This leads us to the discussion of
how this infection chain ties in the different malware families listed; more importantly, this exposes the
obfuscated operations of the last stage of the infection process involving Rerdom and the details behind
its confounding circuit of click-fraud communications.
To start the infection process, we commonly see Asprox payloads downloading updates from the Asprox
C&C servers. These same Asprox controlled servers also pass Zemot payloads with statically programmed
Zemot domains. The Zemot domains serve the Rovnix bootkit and then Rerdom, usually in that order. The
Zemot / Rerdom group is likely the same group of threat actors or multiple groups coordinating closely
together. We will delve into that connection later in this post. With that brief description of a connection
hierarchy, let’s go into the first phase of the infection chain (Asprox.)

Phase One: Asprox
Asprox is generally spread via e-mail with malicious attachments that attempt to trick the user. These
attachments usually contain icons that mask the true purpose of the file in order to fool the victim. In this
case we’ve seen the main Asprox infector using a Microsoft Word icon to mask the fact that it’s actually
a portable executable. If a windows user downloads this main infector binary and has the file extensions
hidden it is difficult to tell that this is not truly a Microsoft Word document before they attempt to open
the file. Once the main infector is executed a Windows message box will appear in an attempt to make the
user believe the file did not correctly open.

Behind Malware Infection

3

ASPROX MESSAGE BOX
As the message box appears, the main infector spawns a background process in user space called svchost.
Svchost.exe contains the Asprox binary that communicates with the command-and-control (C&C) servers.

ASPROX SVCHOST PROCESS
Now that this version of the binary is running successfully in memory, it contacts the Asprox C&C servers to
get an update of the current Asprox client. The initial client update can vary between the versions of Asprox
depending on how they are programmed. The update binary is passed to the victim inside encrypted
network traffic.

Phase Two: Zemot
At this point, the Zemot payload is also passed with the new Asprox update. The client needs to
communicate with the C&C server using a formatted request / response. The text for the initial request is
normally a slight variation of the following string:
“<knock><id>REDACTED</id><group>0110s</group><src>3</src><transport>0</transport><time>REDACTED</time><version>2049</version><status>0</status><debug>none none none</debug></
knock>”
We’ve captured the decrypted response in memory (depicted in the screen shot below).

Behind Malware Infection

4

ASPROX DECRYPTED KNOCK DATA
Once the response comes from the C&C server, the Asprox client will update itself if needed and set up
persistence using the “HKCU\Software\Microsoft\Windows\CurrentVersion\Run” registry key.
The run registry key is set to execute the Asprox main infector on startup as well as any updated Asprox
loaders that may have been downloaded during the C&C task request/response.

ASPROX STARTUP KEYS
The Asprox client contains several “maintenance commands” in order to give the botnet controllers the
ability to do things for the upkeep of their botnet. These built in Asprox commands consist of things like
the ability to update or sleep, the ability to install or remove modules along with the option of adding
persistence to a new module through startup registry keys. The Asprox client commands usually consist of
three letter abbreviations for the task at hand.

Behind Malware Infection

5

Notice we can see these commands in the memory displayed in the screen shot below:
Asprox commands: idl, run, rem, ear, rdl, red and upd

ASPROX COMMANDS
Next, Zemot is installed by the Asprox client which serves as a downloader for the Rovnix bootkit and then
Rerdom. Zemot executes and runs in user space under the explorer.exe process. The first network traffic
Zemot sends is a check-in to a statically programmed C&C server. This check-in was always noticeable in
the past because it contained the string /b/shoe in the GET request. Along with the GET request an integer is
passed in the traffic which is written in the registry value “License” under HKCU\Software\<random string>.
It seems this value may indicate an affiliate/group ID

Behind Malware Infection

6

B/SHOE REQUEST
We found during our analysis that the Zemot downloader usually has domains that resolve for anywhere
from two days up to one week. Our passive DNS data shows that it is possible that some Zemot domains
might resolve longer than a week but none of the samples we analyzed would resolve after one week.
In our case a new Zemot binary had to be obtained by running the Asprox main infector again to get a fresh
update from the Asprox C&C server.

ZEMOT CHECK-IN
Behind Malware Infection

7

As of October 14th 2014 the Zemot authors changed the traffic pattern associated with the check-in and the
Zemot downloader no longer uses /b/shoe. Based on our analysis the change now uses /catalog/ in place of
/b/shoe. The passed value in the network traffic after /b/shoe remained the same.

Phase Three: Rovnix Bootkit and Rerdom Agent
Once the Zemot check-in occurs, Zemot proceeds to download the Rovnix bootkit from the Zemot
C&C server. The part of the network path which often identifies Rovnix is being downloaded is “/mod_
smartslider2/”

ROVNIX DOWNLOAD

After the bootkit is downloaded it will be saved to the local disk under temporary internet files as “exe[1].
exe” Then it will be moved to
“C:\Documents and Settings\user\Local Settings\Temp\UpdateFlashPlayer_<random string>.exe” and the
computer will be rebooted so the bootkit can install the kernel driver.

ROVNIX MD5 LOCATION #1

Behind Malware Infection

8

Now from running within the explorer.exe process, Zemot will run the downloaded copy of Rovnix and the
computer will reboot.

ROVNIX MD5 LOCATION #2
Immediately after the computer is rebooted Zemot reaches out to the Zemot C&C servers to download and
install Rerdom. The path will often include soft32.dll or soft64.dll in the actual network request. Using soft32
or soft64 will be based on the architecture of the victim CPU.

RERDOM ENCRYPTED DOWNLOAD SAMPLE 1

Behind Malware Infection

9

The exact path can vary depending on which C&C server the binary is using to download Rerdom.

RERDOM ENCRYPTED DOWNLOAD SAMPLE 2
After Rerdom runs it will also execute under explorer.exe however, it will execute its own child explorer.exe
process:

RERDOM EXPLORER.EXE PROCESS
Once Rerdom is executed it initializes by running a series of commands to establish a new list of Rerdom
C&C servers, obtain a download url to install flash, and requests its click fraud tasking along with the
search servers.

Behind Malware Infection

10

Rerdom has four main C&C communication stages:
•
EVE: check-in to the Rerdom C&C server
•
OPT - request task configuration settings along with a url to download flash
•
LETR - request updated list of Rerdom C&C servers
•
REQ - request search and click url addresses
After Rerdom runs it will initiate an initial communication using EVE. The C&C server simply returns “hi!”

EVE REQUEST / RESPONSE
After Rerdom gets a response from the server it continues to go through the rest of the communication
phases with the ultimate goal of executing the click fraud activities. The next request we observed Rerdom
making is the OPT request to get the configuration settings and the flash url. Encrypted OPT data showing
the network traffic capture matching bytes in our debugger:

ENCRYPTED OPT DATA

Behind Malware Infection

11

The same data shown previously except now in the debugger the data is decrypted:

DECRYPTED OPT DATA
A text sample of the OPT data (pulled from memory):
•
01554CEC {“status”:”OK”,”data”:{“normal_delay”:20,”error_delay”:20,”soft_
•
01554D2C start”:18,”task_start”:18,”task_finish”:550,”task_request”:18,”t
•
01554D6C hread_count”:18,”flash_url”:”http://download.macromedia.com/pub/
•
01554DAC flashplayer/current/support/install_flash_player_ax.
The next step for Rerdom is to obtain a list of C&C servers using LETR. Shown in Encrypted LETR data are
the encrypted bytes being passed over the network and those same bytes are shown in our debugger. In the
decrypted LETR data screen shot we see that the bytes being passed over the network are now decrypted in
memory.

Behind Malware Infection

12

ENCRYPTED LETR DATA

DECRYPTED LETR DATA

Behind Malware Infection

13

Text sample of LETR data (the malicious urls have been made “click proof”):
•
hxxp://lowbalance[.]su/
•
hxxp://oldfirefox[.]su/
•
hxxp://irishjuice[.]su/
•
hxxp://everydaypp[.]ru/
•
hxxp://nitmurmansk[.]su/
•
hxxp://brokenpiano[.]ru/
•
hxxp://198[.]154[.]224[.]48:8080/
•
hxxp://65[.]254[.]49[.]118:8080/
•
hxxp://212[.]81[.]134[.]56:1080/
•
hxxp://212[.]81[.]134[.]57:1080/
•
hxxp://174[.]127[.]103[.]45:443/
•
hxxp://198[.]58[.]102[.]172:8080/
•
hxxp://74[.]117[.]158[.]3:443/
•
hxxp://70[.]32[.]94[.]46:8080/
•
hxxp://178[.]207[.]18[.]188:443/
•
hxxp://173[.]255[.]241[.]19:8080/
•
hxxp://194[.]38[.]104[.]218:443/
•
hxxp://162[.]248[.]167[.]184:443/
•
hxxp://65[.]254[.]49[.]116:8080/
•
hxxp://178[.]18[.]18[.]30:443/
•
hxxp://122[.]155[.]167[.]122:8080/
•
hxxp://61[.]90[.]197[.]150:8080/
•
hxxp://27[.]254[.]40[.]105:8080/
•
hxxp://69[.]164[.]221[.]7:443/
•
hxxp://209[.]160[.]65[.]96:8080/
•
hxxp://166[.]78[.]145[.]146:443/
•
hxxp://46[.]28[.]68[.]144:8080/
•
hxxp://162[.]144[.]37[.]28:8080/
•
hxxp://198[.]154[.]216[.]149:8080/
•
hxxp://178[.]21[.]117[.]34:8080/
•
hxxp://162[.]213[.]250[.]124:8080/
•
hxxp://203[.]151[.]23[.]69:8080/
•
hxxp://70[.]32[.]85[.]69:8080/
Next, with the updated list of C&C servers in hand, Rerdom will start the requests for getting the click fraud
tasking and search urls using the REQ request.
Behind Malware Infection

14

DECRYPTED REQ DATA

Text sample of REQ data (pulled from memory):
•
•
•
•
•
•
•
•
•
•
•

01554CEC {“status”:”OK”,”data”:{“tasks”:[{“clickurl”:”http://192.162.19.1
01554D2C 22/b/pkg/T5030REDACTED”,”searchurl”:”http://state-registration
01554D6C s.com/”},{“clickurl”:”http://192.162.19.122/b/pkg/T5030REDACTED
01554DAC “,”searchurl”:”http://declaration-customsunion.com/”},{“clickur
01554DEC l”:”http://192.162.19.122/b/pkg/T5030REDACTED”,”searchurl”:”ht
01554E2C tp://accreditations-shop.com/”},{“clickurl”:”http://192.162.19.1
01554E6C 22/b/pkg/T5030REDACTED”,”searchurl”:”http://new-certification.
01554EAC com/”},{“clickurl”:”http://192.162.19.122/b/pkg/T5030REDACTED”
01554EEC ,”searchurl”:”http://operation-manual.com/”},{“clickurl”:”http:/
01554F2C /192.162.19.122/b/pkg/T5030REDACTED”,”searchurl”:”http://apple
01554F6C icon.com/”},{“clickurl”:”http://192.162.19.122/b/pkg/T5030REDACTED 01554FAC
“,”searchurl”:”http://accreditation-laboratories.com/”}]}}.

Behind Malware Infection

15

The Monetization Mission: Web Click Fraud and Advertising
Impression Fraud
Let’s take a detailed look at the actual click-fraud and ad impression traffic in action.

STEP 1
In step 1 here we have the Rerdom infected host calling out to the Rerdom C&C server. The server returns
encrypted data that when decrypted shows the click and search urls below. This tells the bot what actions
to take to monetize the botnet.
•
{“status”:”OK”,”data”:
•
{“tasks”:[
•
{“clickurl”:”http://46.161.41.219/b/pkg/T5030REDACTED”,”searchurl”:”http://catalog-equipment.com/”},
•
{“clickurl”:”http://46.161.41.219/b/pkg/T5030REDACTED”,”searchurl”:”http://controller-best.com/”},
•
{“clickurl”:”http://46.161.41.219/b/pkg/T5030REDACTED”,”searchurl”:”http://seo-pronew.com/”},
•
{“clickurl”:”http://46.161.41.219/b/pkg/T5030REDACTED”,”searchurl”:”http://controller-best.com/”},
•
{“clickurl”:”http://46.161.41.219/b/pkg/T5030REDACTED”,”searchurl”:”http://simple-connector.
com/”}]}}.

Behind Malware Infection

16

STEP 2
Here you can see a GET request to contoller-best[.]com that was listed above in the decrypted C&C response.
The domain is listed as a searchurl and is used by the criminal group to facilitate click-fraud and ad
impression fraud. This is important because the searchurl domains are used as the referrer so that when
the bot finally lands on the final page, the media company in question that is displaying the ads to the bot
knows who to pay.
Notice here that the referrer is Google and that was inserted into the HTTP header by the bot.

STEP 3

Behind Malware Infection

17

This GET request is a check-in to the Clickurl server, 46[.]161[.]41[.]219, to get the appropriate 302 response
that will direct the bot to the next destination. The referrer is controller-best[.]com from step 2.

STEP 4
Here we have another 302 redirect. The referrer once again is controller-best[.]com. The GET request is
coded so that the server knows to respond with an appropriate domain and url for the bot to go to for
click-fraud or ad impressions.

STEP 5

Behind Malware Infection

18

Here is the final landing page where the criminal group behind this botnet make money. The referrer is
controller-best[.]com from step 2 and is used to help the criminal group monetize their botnet.
The bot lands on the site techtickletv.com which is an advertising landing page without any original
content. It contains 4-5 display ads and a video ad. With a single bot page visit, the criminals can get paid
for generating impressions for each of the 4-5 display ads as well as the video ad impression, which will
typically pay more. The site is owned by a company named Hutch Media LLC.
Hutch Media has been mentioned before on another blog that discusses click-fraud [1].
In this particular blog post the author uses the term impression laundering in regards to what the bot is
doing. Impression laundering is where an advertiser buys ads from a publisher to only have those ads
actually displayed on websites that don’t have anything to do with the advertiser’s brand. The ads are in
essence laundered through redirects and iframes so that the advertiser does not see the real sites where the
ad is displayed [2].
You can see in that blog post [1] that there are other sites that are being used to monetize this impression
laundering that are owned by Hutch Media LLC. These other sites are like techtickletv.com in that they don’t
really display any original content but are mostly ad landing pages.
Most of the traffic that Damballa has observed from the Rerdom malware has been impression laundering,
not so much the traditional click-fraud. Damballa believes this is because of how advertising works and how
it can be linked to legitimate traffic or not. With click-fraud there is a click-through of when a user clicks on
the ad, it is recognized, and the traffic is driven to the advertiser’s site. This gives the advertiser visibility into
where their traffic is coming from and they can then determine the quality of the traffic as well as how it got
there.
There is less accountability in this form of ad-fraud and therefore there is also less risk taken on by the
criminal groups that choose to commit ad-fraud in this manner. Damballa believes that there will be more
criminal groups that choose to adopt this form of making money because there is less risk involved.
Over the past two years we here at Damballa have seen an increase in the number of infected bots and
groups that are performing click-fraud and impression laundering. We expect this trend to continue.
Our Zemot/Rerdom operator is RuthlessTreeMafia MD5 hashes:
Asprox spam infector d38a9b4d0c17c954080b86bb79a25272 Zemot 54b5c261ecbd63118f1a135cb4f091d6
Rovnix 7166665cf5d69422fb710009161faf64 Rerdom 44994d7d75e6c6f215d239bba5d8f411

Behind Malware Infection

19