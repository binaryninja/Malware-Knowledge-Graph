Lead Author:

Maarten van Dantzig

Co-Authors:

Danny Heppener, Frank Ruiz,
Yonathan Klijnsma, Yun Zheng Hu,
Erik de Jong, Krijn de Mik,
Lennart Haagsma

Ponmocup
A giant hiding in the shadows

Version 1.1
November 30, 2015

Executive Summary
Ponmocup, first discovered in 2006 as Vundo or Virtumonde, is one
of the most successful botnets of the past decade, in terms of spread
and persistence. Furthermore, the reasons why this botnet is considered
highly interesting are that it is sophisticated, underestimated and is
currently largest in size and aimed at financial gain.
This underestimated botnet is still in active use and under continuous development.
Having established that Ponmocup’s primary goal is likely financial gain, it is interesting
to look at its size. Fox-IT has determined that it has infected a cumulative total of
more than 15 million unique victims since 2009. At its peak, in July 2011, the botnet
consisted of 2.4 million infected systems, which as far as botnets go, is huge. Since
then, the botnet has shrunk in size and is currently stable at around 500,000 active
infections, as shown in Figure 1.
Compared to other botnets, Ponmocup is one of the largest currently active and, with
9 consecutive years, also one of the longest running. Ponmocup is rarely noticed though,
as the operators take care to keep it operating under the radar.
Ponmocup’s operators are technically sophisticated, their techniques suggest a deeper
than regular knowledge of the Windows operating system. On top of that, the operators
have close to 10 years of experience with malware development. Their framework was
developed over time, quality tested and then improved in order to increase robustness
and reduce the likelihood of discovery.
The operators are most likely Russian speaking and possibly of Russian origin. This is based
on the fact that instructions to business partners and affiliates are written in Russian,
and that historically, Ponmocup would not infect systems in some post-Soviet States.

2 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Timeline, statistics, sophistication, financial goal

Active Ponmocup Bots

9314

Sinkholing Abuse.CH

2,500,000

2,000,000

147.20

Release of improved Ponmocup
& delivery method

1,500,000

1,000,000

500,000
Ponmocup
is believed to be aimed at financial gain. Although it is difficult to quantify

the exact amount of money earned with the Ponmocup
botnet,
it is likely that it has
Development
of Ponmocup
already 0been a multi-million dollar business for years now. There are multiple reasons to
2009 – AUG

SEPT
OCT
NOV
DEC
2010 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV
DEC
2011 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV
DEC
2012 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV
DEC
2013 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV
DEC
2014 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV

assume this is the case. Firstly, their infrastructure is complex, distributed and extensive,
with servers for dedicated tasks. Secondly, they operate, maintain and monitor their

comprehensive infrastructure with a group of operators and are quickly able to mitigate
potential risks that are discovered. Thirdly, the malware itself is sophisticated and aimed
at avoiding detection and analysis. Fox-IT believes, based on the earlier mentioned
reasons, that they are protecting a very well run organization and infrastructure, for
their main goal: financial gain.

Active Ponmocup Bots
Sinkholing Abuse.CH

2,500,000

2,000,000

Release of improved Ponmocup
& delivery method

1,500,000

1,000,000

500,000
Development of Ponmocup

2014

2013

2012

2011

2010

2009

0

Figure 1: Number of active Ponmocup bots over time

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 3

Table of contents
1

Introduction

5

2 Behind Ponmocup

6

2.1 Attribution

6

2.2 Goals and impact

6

2.3 Size

7

3	Overview of the technical framework

8

3.1 Framework components

8

3.2 Typical Ponmocup infrastructure

8

4 Delivery methods
4.1 Delivery through ZIP file

10
11

4.2 Delivery through a signed Java applet

11

4.3 Delivery through a JAR loader

14

5	Installation, persistence
and functionality

16

5.1 The Ponmocup installer

16

5.2 Core functionality

17

5.3 Specific functionality through plug-ins

19

5.3.1 Plug-ins #14xx range – decide: finding interesting targets

22

5.3.2 Plug-in #2600 – SIP scanner: collecting information
on SIP gateways

26

5.3.4 Plug-in for MS10-061 vulnerability: lateral movement

27

6 Command and control traffic

7

23

5.3.3 Plug-in #2610 – router scan: collecting router information

28

6.1 Installer communication

29

6.2 Main module communication

30

6.3 Plug-in communication

30

Anti-analysis techniques

32

7.1 Checks for signs of analysis

32

7.2 Delivery of fake payload

32

Appendix i – Targeted keywords

34

Appendix ii – Network based indicators of compromise

36

Appendix iii – Host based indicators of compromise

38

4 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

1 Introduction
Ponmocup, first
discovered in 2006 as
Vundo or Virtumonde,
is one of the most
successful botnets
of the past decade,
in terms of spread and
persistence.
Fox-IT believes this is an underestimated botnet currently still in active use and under
continuous development. Though Ponmocup has received only minimal attention
from the security community and is often described as low risk, it is in fact a technically
sophisticated malware framework with extensive functionality. The result of our
research provides a complete time-line and unique insight into the modus operandi of
the operation around Ponmocup and describes all the important details of the malware.
Furthermore, this report includes currently not publicly known indicators of compromise,
both on host and network level, where previous research only scratched the surface.

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 5

2 Behind Ponmocup
This chapter discusses non-technical aspects of the Ponmocup botnet:
attribution, goals, impact and size.
2.1 Attribution

releases of various components, in order to increase

This section describes a number of aspects related to

robustness and reduce the likelihood of discovery. This

the operators of the Ponmocup botnet.

includes the fact that everything in the framework (APIs,
strings, etc) is obfuscated. Furthermore, the infrastructure

Based on the size of the command and control infrastruc-

is well thought out and load balances victims between

ture, it is thought that the infrastructure is maintained,

domains and proxies as an anti-sinkhole measure. Finally,

monitored and protected by a well-organized group of

the framework uses a number of anti-analysis methods,

operators. This is amongst others based on the domains

such as the fake payload and blacklisting of IP addresses

in use, number of proxies in use, estimated number of

and system fingerprints once an analyst or researcher

back-end systems, used delivery methods and limited

is found. Some of these techniques will be discussed in

affiliate schemes.

more detail further on in this paper.

It was also observed that in certain cases, the operators
reacted quickly to events which could impact the botnet’s

2.2 Goals and impact

infrastructure, suggesting that the operators closely

As with any modern malware, the Ponmocup framework is

monitor their back-end infrastructure.

capable of supporting any objective, be it criminal or espi-

In addition, some operators were observed as active

onage-oriented in nature. These theoretical capabilities,

members in underground advertisement fraud forum or

however, aren’t very useful in order to determine the oper-

signed up for underground advertisement fraud schemes.

ator’s actual goals. Ponmocup’s real goals have remained
somewhat elusive over the years, primarily because Fox-IT

It is believed that the operators are most likely Russian

has only rarely seen any sustained activities taking place.

speaking and possibly of Russian origin. This is based

Based on what is known now, Ponmocup’s operators

on the fact that instructions to business partners and

are believed to be primarily interested in financial gain.

affiliates are written in Russian, and that in the early days,

However, they are currently either applying extreme

Ponmocup would not infect systems in the post-Soviet

restraint or carrying out their activities outside of

States of Ukraine, Russia and Belarus. However, this

Fox-IT’s sphere of knowledge. Either way, they cherish

specific block was later removed, for unknown reasons.

their botnet and handle it with care. This can be supported
by the following observations.

As for technical capabilities, it can be said that the operators are fairly sophisticated. The successful combination

As shown in paragraph 2.3, Ponmocup is a large botnet,

of various components to execute a stealthy malware

supporting a large amount of victims. This is a direct

framework, in addition to the usage of undocumented

result of its design:

Windows APIs to reset system restore points, suggests

1

It is difficult for traditional anti-virus solutions to

deeper than regular knowledge of the Windows operating

reliably detect because it uses unique encryption per

system. On top of that, it is certain that the operators have

infected system and locates its core components in

close to 10 years of experience with malware development,

a unique location per infected system.

as the first variant of Ponmocop (Vundo) was discovered

2

It uses one-time domains for installation, which means

in 2006. This translates into features of the framework

that these domains cannot be used as indicators of

that were developed over time, quality tested with debug

compromise over time or across organization.

6 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Graphs of most impacted countries

15,000,000+

It is believed that
the operators are
most likely Russian
speaking and/or
possibly of Russian
origin.

Unique infections

500,000+

Currently infected

2,400,000

Peak size infections

Infections
Non-infections

Figure 2: Ponmocup key figures

3

It supports theft of FTP and Facebook credentials

cated AV evasion techniques, trying to stay under the

out of the box, which Fox-IT believes may be used to

radar as much as possible, in order to avoid detection.

support further spreading the botnet if needed.

Fox-IT believes, based on the earlier mentioned reasons,
that they are protecting a very well run organization

Finally, Ponmocup is believed to be aimed at financial

and infrastructure, for their main motivation: earning

Figure 1: Typical infrastructure from
victim to operators
tons of money.

gain for the following reasons:
1

2

The plug-in that support advertisement fraud (ppc,
abbreviation for ‘pay-per-click’) is the most actively

2.3 Size

developed plug-in.
The framework appears to target mainly wealthy

Having established that Ponmocup’s primary goal is

and larger English speaking nations for banking, Proxy
investment and trading websites that store sensitive
Proxy

Fox-IT has determined that Ponmocup has infected a

3

Proxy

Back-end server
since 2009. At its peak, in July 2011,
the botnet consisted

fraud. Its targets originally comprised mainly EU

of 2.4 million infected systems, which as far as botnets go,

and larger English speaking countries, which later

is huge. The botnet has since then shrunk in size as a result

narrowed down to English speaking countries only,

of a coordinated sinkhole action and natural rotation of

narrowing down even further to United Kingdom and

bots. Currently, there are still more than 500,000 victims

United States only in 2012.

checking in to command and control servers each month.

It supports theft ofVictim
Bitcoin wallets.

For distribution purposes, more than 5000 websites have

Monitoring

been compromised since 2009, using FTP credentials

Proxy
at financial gain. Although it is hard to quantify the exact
Proxy

amount of money earned with the Ponmocup botnet, it

Proxy

stolen by Ponmocup components, in order to further
Firewall

As already outlined, Ponmocup is believed to be aimed Proxy

1

cumulative total of more than 15 million unique victims
Firewall

personal information which could help in committing
Proxy

likely financial gain, it is interesting to look at its size.

spread the malware.

Plug-in
Back-end server

is likely that it is already a multi-million dollar business

Compared to other botnets, Ponmocup is one of the

for years now. There are multiple reasons to assume

largest currently active and, with 9 consecutive years, also

http://www.bbc.com/

this is the case. Firstly, their infrastructure is complex,

one of the longest running. Ponmocup is rarely noticed

news/technology-18547935

distributed and extensive, with servers for dedicated

though, as the operators take care to keep it operating

and http://www.gizmodo.

tasks. Secondly, they operate, maintain and monitor

under the radar. An update that included a failed printer

co.uk/2012/06/printer-virus-

their comprehensive infrastructure with a group of

exploit, in 2012, provided a rare moment in the lime lights:

on-the-loose-good-day-for-

operators and are quickly able to mitigate potential risks

it caused printers worldwide to start printing garbage

paper-companies-bad-day-

that are discovered. Thirdly, the malware itself is very

data until they ran out of paper or ink1 .

for-trees/

sophisticated using a multi staged loader and sophisti-

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 7

3	Overview of the technical
framework
Ponmocup is a malware framework, written in C++, designed to infect
and remain persistent on a large number of victim machines. This
chapter describes the components that comprise the framework.
3.1 Framework components

3.2 Typical Ponmocup infrastructure

The Ponmocup framework employs a number of

The infrastructure used to control the botnet is designed

components to deliver, install, execute and control

to be resilient to disruption attempts, using a separate

the malware, as listed in Table 1. Each component uses

infrastructure per component. This requires an extensive

different anti-analysis methods to prevent the framework

server set-up which is constantly monitored for perfor-

from being discovered.

mance issues and disruption attempts by external parties.

Reverse engineering the functionalities can be a labor-

Ponmocup communicates to back-end servers over several

intensive process, as the malware executes over

proxy layers and each victim can use a specific group of

various stages, where each string is decrypted in-line

proxies to communicate. Using proxy groups means that

using various algorithms. Components that are integral

the botnet is spread over several domains, a technique

to the functioning of the framework are often encrypted

that makes taking down the entire botnet difficult.

or stored using information specific to a victim’s system.

Component

Purpose

Delivery

Delivery methods used to infect victims with Ponmocup

Installer

Installs Ponmocup persistently, thoroughly checks the target machine for analysis capabilities

Initiator

DLL stored on disk, starts the loader in memory and hands over control to the loader

Loader

Finds the location of the registry key containing the encrypted main module and plug-ins,
decrypts the content, starts and hands over control to the main module

Main module

Communicates with command and control server and retrieves and executes plug-ins

Plug-ins

Provide functionalities for specific tasks

Back-end infrastructure

Infrastructure used to control compromised systems

Table 1: Overview of Ponmocup components and their purpose

The operators have gone out of their way to try and defeat

Plug-ins carrying out specific tasks or exfiltrating specific

detection by anti-virus software, automated analysis, as

data make use of separate proxies as well as separate

well as manual analysis. Their attempts have proven very

back-end servers.

successful: over the last five years only a few analyses
of Ponmocup have been published, of which none have

A simplified overview of the infrastructure between the

managed to uncover the full truth of the framework.

operators and a victim is shown in Figure 3.

8 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

15,000,000+

500,000+

Unique infections

Infections
Non-infections

Currently infected

2,400,000

Peak size infections

The operators have gone out of their way
to try and defeat detection by anti-virus
software, automated analysis, as well as
manual analysis.

Figure 1: Typical infrastructure from victim to operators

Proxy
Proxy

Firewall

Proxy
Proxy

Back-end server

Monitoring

Operators

Victim
Proxy
Proxy

Proxy

Firewall

Proxy

Plug-in
Back-end server

Figure 3: Typical infrastructure including victim and operators

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 9

4 Delivery methods
This chapter describes historic and current delivery methods used to
distribute the Ponmocup malware
From 2009 to 2011 the two main methods used to

via a search engine, social media network or webmail

distribute Ponmocup were fake codec packs and fake

application. This reduces the number of potential victims,

Flash Player updates. However, after a sinkhole attempt

but often filters out potential victims that would more

in 2011 2 the authors developed their own distribution

easily notice a website behaving out of the ordinary,

method, publicly known as Zuponcic 3 , named after

such as the owner of the website or frequent visitors.

the first website that was compromised for distri­bution

A snippet from the .htaccess file checking for valid

purposes using this method. Although Zuponcic is

referrers:

RewriteCond %{HTTP_REFERER} ^(http\:\/\/)?([^\/\?]*\.)?(tweet|twit|linkedin|instagram|facebook\.
|myspace\.|bebo\.).*$ [NC,OR]
RewriteCond %{HTTP_REFERER} ^(http\:\/\/)?([^\/\?]*\.)?(hi5\.|blogspot\.|friendfeed\.|friendster\.
|google\.).*$ [NC,OR]
RewriteCond %{HTTP_REFERER}^(http\:\/\/)?([^\/\?]*\.)?(yahoo\.|bing\.|msn\.|ask\.|excite\.|altavista\.
|netscape\.).*$ [NC,OR]
RewriteCond %{HTTP_REFERER}^(http\:\/\/)?([^\/\?]*\.)?(aol\.|hotbot\.|goto\.|infoseek\.|mamma\.
|alltheweb\.).*$ [NC,OR]
RewriteCond %{HTTP_REFERER}^(http\:\/\/)?([^\/\?]*\.)?(lycos\.|metacrawler\.|mail\.|PINterest
|instagram).*$

[NC]

RewriteCond %{HTTP_REFERER}!^.*(imgres).*$

[NC]

commonly described as an exploit kit, that actually isn’t

Once a visitor is attacked by Zuponcic, their IP-address is

an accurate description because it doesn’t use exploits.

blacklisted and will no longer be targeted until the IP-address

Instead, it uses three distinct infection vectors, which

is cleared from the blacklist, regardless of whether the attack

in most cases depend on interaction with the victim.

was successful or not. Additionally a cookie is placed on the
machine to make sure that not only the IP-address, but also the

Websites affected by Zuponcic are typically compromised

actual machine itself is blacklisted. Potential victims redirected

using FTP credentials, stolen from machines infected by

by the .htaccess file are first taken to an intermediate website

Ponmocup. This allows the operators behind Ponmocup

(typically hijacked GoDaddy domains) using one out of 60

to upload a carefully crafted .htaccess file to every acces-

listed URI patterns. The conditions that a potential victim

sible folder. It redirects visitors from the compromised

has to meet in order to be attacked are visualized in Figure 5.

website to the Zuponcic delivery mechanism. The
code in the .htaccess file responsible for this redirect

Because Zuponcic requires a valid referrer chain and blacklists

is placed between 500 blank lines to make it seem as

an IP-address after a single hit and most URL analysis tools fail

if the file is empty. This code itself makes sure that not

to perform dynamic analysis on these compromised websites,

just anyone gets redirected to the malicious website;

most of these websites are falsely classified as ‘safe’ and

the visitor must have visited the compromised website

remain compromised for relatively longer periods.

10 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Once a visitor is actually redirected to the Zuponcic
landing page he or she is targeted based on the used
browser and presence of the Java browser plug-in. The
decision chart in Figure 6 depicts the various methods
used to infect visitors with the Ponmocup payload. The
next paragraphs describe each method in more detail.
4.1 Delivery through ZIP file
Using a browser other than Internet Explorer 8/10 or

Figure 4: Using victim’s own keywords for payload filename

not having Java installed, a victim will receive a ZIP file
containing the payload. The name of the ZIP and embedded

Because the certificates used by Zuponcic are stolen from

payload is derived from the previously used search terms,

victims that have been infected by Ponmocup, it typically

as shown inFigure 4.

does not take long for a revoked certificate to be replaced
by a new one. In most cases revoked certificates were

Compared to the attack vectors abusing Java, described

replaced with a newly stolen certificate within 1–3 weeks.

in paragraphs 4.2 and 4.3, this attack method puts in very
little effort to hide the payload. Perhaps the operators felt

The file doing all the work, FlashPlayer.class, is heavily

safe enough to introduce this method to their arsenal of

obfuscated using control flow obfuscation. Additionally,

infection vectors at the cost of slightly more attention.

all strings are encoded using an encoding key which
consists of dynamic values from the process stack. This

4.2 Delivery through a signed Java applet

works if the class and calling method names are static,

This infection vector relies on social engineering or out-

which has always been the case for Zuponcic; the class

dated Java software in order to execute a Java applet.

name is ‘FlashPlayer’ and calling method is ‘init’, which

These applets are typically run in a sandbox, in order to

results in ‘FlashPlayerinit’ as the decoding key.

prevent them from touching the file system, so to drop
the Ponmocup installer on a victim’s machine this Java

final StackTraceElement

applet has to escape the sandbox. Ponmocup success-

stackTraceElement = new Exception().

fully does so because the Java applet is signed with a

getStackTrace()[1];

valid certificate, stolen from a legitimate organization.

final String string = new

Older versions of Java (pre-dating Java 7 Update 21 to

StringBuffer(stackTraceElement.

be specific) which blindly trust certificates issued by

getMethodName()).insert(0,

authorities, will run this applet outside of the sandbox

stackTraceElement.getClassName()).

without even asking for the user’s permission.

toString();

Recent versions of Java always prompt for user approval
before running applets, though in this case the applet

FlashPlayer.class will create an empty .tmp file with a

might still appear legitimate to potential victims, as the

random short name (2–5 characters) in the TEMP directory.

applet is still signed with a valid certificate and claims to

It then HTTP POSTs to the Zuponcic host, using a token

2	How Big is Big? Some Botnet

be executing an application with the name ‘FlashPlayer’.

which is unique per victim, to retrieve an RC4 encrypted

Statistics - https://www.

The certificates listed in Table 2 have all been used by

payload. This payload is then stored in the .tmp file and

abuse.ch/?p=3294

Zuponcic to infect victims with Ponmocup.

decrypted with a key also uniquely generated per victim

3

http://blog.Fox-IT.com/2013/

(taken from the landing page). If the applet is allowed

12/19/not-quite-the-average-

to run, it will execute the payload, once executed the

exploit-kit-zuponcic/

browser redirects the victim to the actual website that

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 11

Land on compromised
landingspage

Is referer:

12 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Figure 5: Zuponcic redirection flow

YES

TDS URL?

the look-a-like

Is referer

Zoponcic base url

redirect to

302

YES

compromised website?

Referer known

TDS URL

redirect via look-a-like

302

NO

by cookie

Returning visitor?

YES

Social media

Search engine / Webmail /

NO

NO

YES

NO

REDIRECT
TO GOOGLE

BLANK
PAGE

NORMAL
WEBSITE

Zuponcic flow

Figure 6: Zuponcic attack flow

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 13

Download social engineered
keyword(s) used in search query

payload where name is based on

NO

encrypted payload

based on IP of victim

PAYLOAD
EXECUTION

retrieve RC4

JAVA applet

Run signed

IE8

where RC4 hash is

IE10

What browser?

POST back to

OTHER

YES

Embedded payload

keyword(s) used in search query

payload where name is based on

Download social engineered

JAVA
enabled?

ZUPONCIC
LANDING
PAGE

Subject

Fingerprint (SHA1)

Issuer

Year

Kurz Instruments, Inc.

8A:DC:2D:8B:B5:3C:DC:93:C9:80:C4:F6:C0:80:59:73:8B:88:19:16

GlobalSign

2012

R P InfosystemsPvt Ltd

BB:48:74:0F:01:E6:7F:EE:A6:06:96:4B:D5:81:A7:30:BF:D0:54:D7

VeriSign

2012–2013

iLoqOy

76:90:09:5B:C3:FC:9F:9D:74:98:56:F6:E1:DD:22:C0:89:44:F7:F9

VeriSign

2013–2014

AUZSOLUTIONS.com.au

F1: 3 9 :8E:5 3 :D 1:F8:FC :0 6: 3 4 :F5 : 4E: 68: 7 2 :8 8:5F: 31:CC :0 9 : 35 : 23

COMODO

2014

Queen’s University

7 3:E8:D 6:F3:91: 7 7: 2 A : 7F: AE:81:C3:81: 7 3: 14 : 2E:C8:F6: 28: 2 A :E 4

UserTrust

2015

Table 2: Stolen certificates used in the delivery of Ponmocup

was visited, whether the execution is successful or

engineering, Zuponcic tricks many victims into running

not, leaving to believe nothing strange has happened,

its malicious payload. This is done by using the search

a process outlined in Figure 7.

terms used in the redirecting search engine in the payload

If execution of the payload fails, FlashPlayer.class ensures

name, as shown in the example in Figure 4.

that the created .tmp file is deleted from disk. This clean-up

This JAR file contains an RC4 encrypted payload. The key is

routine prevents any evidence from being left around.

based on the target’s IP address. This means the key and
the embedded encrypted binary are unique per target.

4.3 Delivery through a JAR loader

Once the JAR is executed, the code below recovers the

A target using IE10 will receive a JAR file which has to be

RC4 key used for decryption:

manually downloaded and executed. It may seem unlikely
for anyone to run this manually, but through clever social

final URLConnection openConnection;
(openConnection = new URL("http://checkip.dyndns.com").openConnection()).
setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)");
final BufferedReader bufferedReader = new BufferedReader(new
InputStreamReader(openConnection.getInputStream()));
final String readLine = bufferedReader.readLine();
String group = "";
bufferedReader.close();
final Matcher matcher;
if ((matcher = Pattern.compile("([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})").
matcher(readLine)).find())
{
group = matcher.group();
}
final byte[] digest = MessageDigest.getInstance("MD5").digest(group.getBytes());

14 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Figure 5: Java Applet retrieving and executing payload
using per connection specific information

Compromised
website

User
Redirecting
website

Signed Java Applet

Victim

Decrypt &
execute

Payload request
Zuponcic

Encrypted payload

Figure 7: Java Applet retrieving and executing payload using per connection specific information

Figure 6: Overview of the process of loading Ponmocup
Memory engineering, Registry
Through clever social
Zuponcic tricks many victims into
running its malicious payload.

Disk

System information

Loader

Scheduled task

VolumeSerialNumber,

Modified UPX

System directory and root

compressed dll

Initiator
Packed DLL,
stored on disk

directory creation times

Decrypt and load

Encrypted main

main module and plug-ins

module and plug-ins

Information storage
Check-sums
Allocate memory

Main module

Allocate and transfer control

Runs

to new binary in memory

persistently

Plug-ins
Execute

Configs

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 15

specific tasks

Counters

5	Installation, persistence
and functionality
This chapter describes the core components of Ponmocup, its method
of installation, achieving persistence and its modular system of plug-ins
aimed at providing a wide variety of functions on compromised systems.
5.1 The Ponmocup installer

If stored in the system directory the file will have the R

The installer is responsible for persistently installing

(Read-only), S (System) and H (Hidden) attributes set. The

various Ponmocup components on a system. This para-

installer adds a scheduled task to start the initiator during

graph focuses on components installed directly on disk.

system boot, with the privileges of NT AUTHORITY\

All other core components are stored and encrypted in

SYSTEM:

the registry. Without these, the initiator described in this
chapter cannot function.

<Principals>
<Principal id="Author">

Depending on the privileges available to the installer,

<UserId>System</UserId>

the initiator can either be installed in the system direc-

<RunLevel>HighestAvailable</RunLevel>

tory or in the Application Data directory. When run with

<LogonType>InteractiveTokenOrPassword

administrative privileges, the initiator will be named after

</LogonType>

an existing file in the system directory, with 1–2 random

</Principal>

characters appended. For example, a randomly selected

</Principals>

legitimate file could be:

<Actions Context="Author">
<Exec>

C:\Windows\System32\msg711.acm

<Command>C:\Windows\system32\
runDLL32.exe</Command>
<Arguments>"C:\Windows\system32\

And the Ponmocup initiator would be named:

msg711A.DLL",ZBADQX</Arguments>
</Exec>

C:\Windows\System32\msg711A.DLL

</Actions>

Without administrative privileges the initiator is stored
in the Application Data directory with a random name

This effectively means
that the core functionalities of Ponmocup
are uniquely encrypted
and stored in a unique
location for every victim.

(6–10 characters) and initiated during system boot via
a run-key in the registry.
During installation some additional tasks are carried out
by the installer to ensure persistence. One of these tasks,
not often seen, is to delete all system restore points and
to disable the system restore option itself. To achieve this
Ponmocup makes use of two APIs from the srclient.DLL
library; srclient.ResetSR and srclient.DisableSR. These
APIs are not documented by Microsoft, which is one of

16 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Victim

Decrypt &

Payload request

execute

Zuponcic

Encrypted payload

Figure 6: Overview of the process of loading Ponmocup
Disk

Memory

Registry
System information

Loader
Scheduled task

VolumeSerialNumber,

Modified UPX

System directory and root

compressed dll

Operators

Initiator
Packed DLL,
stored on disk

directory creation times

Decrypt and load

Encrypted main

main module and plug-ins

module and plug-ins

Information storage
Check-sums
Allocate memory

Main module

Plug-ins

Allocate and transfer control

Runs

Execute

to new binary in memory

persistently

specific tasks

Configs
Counters

Figure 8: Overview of the process of loading Ponmocup

the indicators that the operators have a thorough under-

Starting the Ponmocup core is a three part process

standing of windows internals, which displays a certain

consisting of the DLL on disk (initiator), a custom UPX

level of sophistication which is seen throughout the entire

compressed DLL in memory (loader) and the payloads

framework. One of these particular APIs (ResetSR) was

in registry (main module and plug-ins):

also used by the Conficker worm 4 .

1

The initiator is started by the scheduled task or run key;

2
5.2 Core functionality
The core of Ponmocup are the components installed on
a victim’s machine by default. These mainly include the

Once loaded into memory the initiator transfers
control to a (modified) UPX compressed DLL;

3

This DLL acts as a loader for the main module and
plug-ins.

components responsible for starting the main module,

4

https://isc.sans.edu/
forums/diary/Some+tricks+

but also include persistent plug-ins providing specific

The loader has the most important responsibilities in this

tasks for persistence purposes.

process, as it has to find the main module and plug-ins,

As shown in Figure 8, loading Ponmocup is a multi-step

which are all encrypted and only stored in registry; both

process which is best broken down into three categories:

the encryption key and location are based on unique

files on disk, activity in memory and the usage of stored

aspects of a victim’s machine. This effectively means

information in the Windows registry.

that the core functionalities of Ponmocup are uniquely
encrypted and stored in a unique location for every victim.

from+Confickers+bag/5830/

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 17

The following unique information about the victim’s

Using this machine specific information the loader

machine is used to base the encryption on:

can find the location of the encrypted main module

•

Date and time of the system directory creation

and plug-ins in the Windows Registry, decrypt their

•

Volume serial number of the root directory of the

contents and execute the payloads. Before decrypting,

volume Ponmocup is installing on, retrieved through

these machine-specific values are verified against the

the GetVolumeInformation API

checksums, which were stored in the registry during

Date and time of the System Volume Information

installation, to check if none of these values have changed.

directory creation

If these checks succeed, the decryption routine is started.

•

As can be seen in the code snippet below, these unique

After decryption the loader verifies the integrity of the

values are each XOR’d with their combined value, forming

decrypted content by comparing the CRC32 checksum

a 16 bytes key which is used to encrypt the main module.

of the result with the checksum of the content before it

For encryption a slightly modified version of the RC4

was stored in registry during installation. Once this final

algorithm is used.

check succeeds, plug-ins stored in registry are executed
and control is given to the main module, which can then

These values are used to uniquely generate the location

initiate command and control traffic. If at any stage during

of the main module and plug-ins in the Windows Registry.

this process, a verification or integrity check fails, the

An example of what the registry keys might look like:

Ponmocup execution process halts.
The main module and plug-ins can interact with each

HKEY_CURRENT_USER\Software\wkcxjxlv\

other using shared memory. This functionality is mainly

Wjtnpgzc

used by plug-ins that only run if the main module is indeed
actively running.

In this case the ‘Wjtnpgzc’ key stores the Ponmocup main

Both the main module and plug-ins use the registry to

module, and persistent plug-ins. Once decrypted using

store configs, checksums or other relevant information

the unique key, the value of this registry key is typically

storage such as counters or IDs. Information storage that

outlined as follows:

may be helpful during a forensic investigation could, for

•

Total size of decrypted content (first 4 bytes);

example, be:

•

Main module;

•

•

Persistent plug-in(s).

Main PIN 5 ID
-

A PIN indicates a group of plug-ins which will be
run on a victim’s machine at some point in time.

/* setup keys */
key_1[0] = tsys32dir.dwLowDateTime ^ tsys32dir. dwHighDateTime;
key_1[1] = dwVolumeSerial;
key_1[2] = tsysvolinfodir.dwLowDateTime ^ tsysvolinfodir.dwHighDateTime;
key_1[3] = key_1[2] + key_1[0] + key_1[1] - 0x6F6F6F70;
/* xor */
key_1[0] ^= key_1[3];
key_1[1] ^= key_1[3];
key_1[2] ^= key_1[3];

18 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

-

Some of these plug-ins that belong to the PIN

share more than 4000 different versions, indicating this

can be persistent, but some plug-ins might only

framework is under continuous development.

be executed once. Knowing the PIN ID could

The following paragraphs describe some of the more

help identify what type of tasks may have been

prominent plug-ins used in the Ponmocup framework.

executed on a victim’s machine.
-

If, for example, this value stores 0x4A39, the

Plug-ins can either be present in memory only, or remain

PIN ID is 19001. Please see the next paragraph

persistent by being stored and encrypted in the same

for more detailed information.

registry key as the main module. Whether or not a plug-in

Run counter

remains persistent is dependent on the type of functional-

-

The main module increases a counter in registry

ities the plug-in provides. Once retrieved, a plug-in can make

for every minute it’s been active.
If, for example, this value stores 0x0F, the main

itself persistent by using the machine specific information,

-

module has been active for 15 minutes.

the registry key which stores the main module and the other

Basic information storage can be found in separate

plug-ins. The quality of the plug-ins are thoroughly tested

registry keys in the following location:

using specifically developed debug versions.

•

mentioned in chapter 5.2, to encrypt and append itself to

HKEY_CURRENT_USER\Software\Microsoft\

Identifying plug-ins is possible by analyzing their PE

Multimedia

headers: at offset 0x20 a standard PE header contains a
reserved word (WORD e_res[4]), of which e_res[3] is used
by Ponmocup to store the ID of the corresponding plug-in.

These values can also be stored in other locations for

The version of the plug-in ID can be found 3 bytes further

redundancy purposes.

at WORD e_oemid.

5.3 Specific functionality through plug-ins

In the example below, the PE header stores the value

The main module of Ponmocup is primarily designed

0x044C (little-endian) in WORD e_res[3] and 0x0BBB

to achieve persistence on a victim’s machine. Plug-ins,

(little-endian) in WORD e_oemid, resulting in plug-in ID ‘1100’

in contrast, are used to provide functionalities for specific

and version ‘3003’ (typically written as plug-in 1100.3003).

tasks. These tasks vary from the exfiltration of credentials

5	The PIN number – a term
used by the operators and of

and browser history, to identification of VoIP agents

Table 2 provides an overview of the most important

on the network of victims. In total Fox-IT has identified

plug-ins, which are basically all DLLs given a unique iden-

25 plug-ins with unique identifiers, among them they

tifier, version number and name by the operators.

00000000

4d 5a 90 00 03 00 00 00

04 00 00 00 ff ff 00 00		 |M Z..............|

00000010

b8 00 00 00 00 00 00 00

40 00 00 00 00 0a 01 00		 |........@.......|

00000020

4c 04 00 00 bb 0b 00 00

00 00 00 00 00 00 00 00		 |L...............|

00000030

00 00 00 00 00 00 00 00

00 00 00 00 80 00 00 00		 |................|

00000040
00000050

0e 1f ba 0e 00 b4 09 cd
69 73 20 70 72 6f 67 72

21 b8 01 4c cd 21 54 68		 |........!..L.!T h|
61 6d 20 63 61 6e 6e 6f		 |is program canno|

00000060

74 20 62 65 20 72 75 6e

20 69 6e 20 44 4f 53 20		 |t be run in DOS |

00000070

6d 6f 64 65 2e 0d 0d 0a

24 00 00 00 00 00 00 00		 |m o de....$.......|

00000080

50 45 00 00 4c 01 04 00

00 00 00 00 00 00 00 00		 |PE..L...........|

unknown origin – is one of the
values stored in the registry.

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 19

Identifier

Name

Purpose

Versions

1100

new

This plug-in is known as the main module of the Ponmocup framework. Retrieves and

downloader

executes additional plug-ins.

1300

history tool

Collects and exfiltrates browser history from all popular browsers. This plug-in is

1350

avkill

Disables anti-virus related services that could potentially stop Ponmocup from functioning.

104

1400

decide

Retrieves browser history for all popular browsers, and checks if any URLs of interest to

135

3003
6

deprecated and it’s functionality are currently implemented in the 14XX plug-in range.

the operators were visited by the victim (only checked using a checksum). If this is the
case these URLs are exfiltrated to a back-end server where this information is logged.
This plug-in is only retrieved if the target is in one of the following countries of interest:
• 	Australia, Belgium, Canada, Switzerland, Germany, Denmark, Estonia, France, United
Kingdom, Mexico, Netherlands, Norway, New Zealand, Portugal, Sweden, United States
1402

decide_

		

vkusnota

Retrieves browser history for all popular browsers, and checks if any URLs of interest to
6

1

the operators were visited by the victim (only checked using a checksum). If this is the
case these URLs are exfiltrated to a back-end server where this information is logged.
This plug-in is only retrieved if the target is in one of the following countries of interest:
•

1403

decide

Australia, Canada, New Zealand, United States, United Kingdom

Retrieves browser history for all popular browsers, and checks if any URLs of interest to

85

the operators were visited by the victim (only checked using a checksum). If this is the
case these URLs are exfiltrated to a back-end server where this information is logged.
This plug-in is only retrieved if the target is in one of the following countries of interest:
•
1507

ppc

7

United States, United Kingdom

Advertisement fraud plug-in. Plug-in can inject code into the processes of Chrome,

587

Firefox and Internet Explorer. When certain keywords are detected, a victim can be
redirected to an alternative page (taken from an encrypted config in the registry).
8

This plug-in is specifically used for the PIN 3xx, 160xx and 170xx ranges.
1511

ppc

Advertisement fraud plug-in. Plug-in can inject code into the processes of Chrome,

1

Firefox and Internet Explorer. When certain keywords are detected, a victim can be
redirected to an alternative page (taken from an encrypted config in the registry).
This plug-in is specifically used for the PIN 150xx range.
1512

ppc

Advertisement fraud plug-in. Plug-in can inject code into the processes of Chrome,

26

Firefox and Internet Explorer. When certain keywords are detected, a victim can be
redirected to an alternative page (taken from an encrypted config in the registry).
This plug-in is specifically used for the PIN 190xx range.
16XX

socks

Precursor of the 18XX plug-in range, allowing the operators to connect to a victim directly,

10

this connection is typically set-up to a specific port opened in the Windows firewall.
18XX

socks 2

Precursor of the 25XX plug-in range, allowing the operators to connect to a victim directly,

24

this connection is typically set-up to a specific port opened in the Windows firewall.
2500

proxy

Used to directly connect to infected machines. To make sure machines behind a device

9

providing network address translation (NAT) can still be reached individually, UPnP
is used, and ports 1900 (UDP) and 2869 (TCP) are opened in the Windows firewall.
2550

proxy 2

Similar to the other plug-ins in the 2500 range, this plug-in can be used to directly
connect to infected machines.

20 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

1

Identifier

Name

Purpose

2600

SIP scanner

Scans devices on the local subnet of the target for SIP (Sessions Initiation Protocol) agents
and, if a SIP agent is present, exfiltrates information returned by the agent.

7

2610

router

Scans gateway IP address of the target for common ports used by routers, and exfiltrates

3

scanner

basic information returned by the services running on these ports.

FTPg

1 	Grabs and exfiltrates FTP and Bitcoin credentials and attempts to do so for every local

2700

Versions

3

user on the infected machine by bruteforcing the passwords of these accounts (using
a list of commonly used passwords).
2	The specifically targeted FTP clients and Bitcoin wallets are similar to the list used by
9

the infamous Pony Loader (2.0) Trojan .
3 	Stolen FTP credentials are mainly used to spread Ponmocup, with the delivery method
described in chapter 4.
2701

FTPg_spec

1	Grabs and exfiltrates FTP and Bitcoin credentials and attempts to do so for every

1

local user on the infected machine by bruteforcing the passwords of these accounts
(using a list of commonly used passwords).
2	The specifically targeted FTP clients and Bitcoin wallets are similar to the list used by
the infamous Pony Loader (2.0) Trojan.
3	Stolen FTP credentials are primarily used to further spread Ponmocup, using the
delivery method discussed in chapter
4 	The functionalities of this plug-in appear to be similar to plug-in #2700, but the
operators are likely using this plug-in for special (spec) occasions.
2750

fbcookie

Grabs and exfiltrates stored Facebook credentials and cookies and attempts to do so for

16

every local user on the infected machine by attempting to bruteforce these accounts
using a list of commonly used passwords. Fox-IT has not yet observed abuse of these
credentials on a large scale. It is therefore suspected that they may be used in the event
of a significant loss in the number of victims, necessitating the introduction of a new
spreading mechanism by the Ponmocup operators.
2760

sysinfo

Gathers extensive information about an infected machine, also scans for a long and

5

diverse list of analysis and monitoring software.
2810

btcg

Grabs and exfiltrates generic and specific Bitcoin wallet data. Specifically targeted

2

Bitcoin wallets:
6	vkusnota is a Russian term
to describe something tasty
(though typically associated

3101

ppc

-

Multibit

-

Electrum

Most recently developed advertisement fraud plug-in, generates ad-fraud traffic to

34

websites stored in a separate configs file in registry.

with food)
7

ppc is short for pay-per-click

Table 3: Overview of Ponmocup’s most important plug-ins

8	For a description of the
concept of PINs,
see paragraph 5.2.
9	
https://www.damballa.
com/pony-loader-2-0-stealscredentials-bitcoin-walletssource-code-sale/

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 21

To efficiently distribute certain functionalities to a
victim, plug-ins can be grouped into a so called ‘PIN’

Identifying
plug-ins is possible
by analyzing their
PE headers.

as earlier mentioned. For example, the PIN that has
been most actively used since June 2012 is identified
as PIN 19001 and contains 10 unique plug-ins. The table
below contains an overview of the most frequently
used PINs and what plug-ins they are comprised of:
PIN

Plug-ins

15001

1511, 1600, 2500, 2700, 2810

16002

1507, 1600, 2500, 2700, 2810

17001

1507, 1600, 2500, 2700, 2810

17002

1507, 1600, 2500, 2700, 2810

investment websites, accounting websites and websites

19001

1350, 1403, 1512, 2500, 2600, 2610, 2700, 2701,

used to store personal information, which are used for

2750, 2810

intelligence purposes (for example law enforcement

19002

1350, 1403, 1512, 2550, 2610, 2700, 2760, 2810

software or online insurance websites). An example

19010

1350, 1403, 1512, 2500, 2610, 2700, 2810

of such keywords recovered by Fox-IT, is shown in the
snippet below.

Table 4: Overview of Ponmocup’s most commonly used PINs

In total Fox-IT has identified 214 unique keywords,
APPENDIX I contains the full list of recovered keywords.
5.3.1 Plug-ins #14xx range – decide: finding interesting
targets

The goal of this plug-in is clear: identifying targets of
interest based on their browsing behavior.

Through this type of plug-in, operators can retrieve the
browser history for all major browsers. Not only will such

Through analysis of three specific versions of the decide

a plug-in parse the history from, for example, the SQLite

plug-in, Fox-IT has identified what countries were

database of Google Chrome, but it will also retrieve the

targeted by this plug-in at certain moments in time,

hostnames of the cookies stored on the target’s machine.

shown in Figure 9:
•

2009–2010: Australia, Belgium, Canada, Switzerland,

This browser history is collected for the plug-in to check

Germany, Denmark, Estonia, France, United Kingdom,

its content against specific keywords of interest to the

Mexico, Netherlands, Norway, New Zealand,

Ponmocup operators. To prevent the interests of the
operators from becoming known, these keywords are

Portugal, Sweden, United States
•

only checked in the form of CRC32 checksums. These
keywords can be divided into 4 categories: online banking,

2010–2011: Australia, Canada, New Zealand, United
States, United Kingdom

•

2012–2015: United States, United Kingdom

<crc_index=00 pos=00 length=13 checksum=0x03098019 keyword=us.etrade.com>
<crc_index=01 pos=06 length=01 checksum=0x01d405fc keyword=dmv.org>
<crc_index=19 pos=16 length=02 checksum=0x0167da70 keyword=drivingrecords.com>
<crc_index=02 pos=07 length=02 checksum=0x023605bb keyword=geico.com>
<crc_index=08 pos=11 length=01 checksum=0x00fe800a keyword=lppolice.com>
<crc_index=38 pos=29 length=01 checksum=0x058533bc keyword=businessonline.huntington.com/>
<crc_index=01 pos=06 length=01 checksum=0x02247d64 keyword=bbva.es>

22 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

5.3.2 Plug-in #2600 – SIP scanner: collecting
information on SIP gateways

calls. In the example below the plug-in identifies that
the gateway IP 10.0.0.1 is running an Asterisk server;

This plug-in attempts to identify SIP gateways on the local

a software implementation of a telephone private

subnet of a victim. SIP, the Sessions Initiation Protocol,

branch exchange (PBX) which can be used to set-up VoIP

is a communications protocol used to setup and connect

connections.

communications sessions, typically for voice and video
00:00:00.000 ---if---flags=[UP,BROADCAST,,,MULTICAST]---addr=[10.0.0.13]---mask=[255.255.255.0]--bcast=[255.255.255.255]--00:00:05.000 ---range---start=[10.0.0.0]---end=[10.0.0.254]---self=[0]--00:00:05.000 ---ip_count=[254]---d_avr_ms=[78]---d_min_ms=[3]---d_max_ms=[153]--t_est_sec=[178]--00:02:11.562 ---send_error---code=[10049]---to=[10.0.0.0:5060]--00:02:17.281 ---known---src=[10.0.0.13]---dst=[10.0.0.1:5060]--00:02:17.281 ---pre---begin---from=[10.0.0.1:5060]---len=[502]---crc=[4d2d01bc]--SIP/2.0 404 Not Found
Via: SIP/2.0/UDP 10.0.0.13:5060;branch=z9hG4bK4eb9c9fb;received=10.0.0.13;rport=5060
From: "Unknown" <SIP:100@10.0.0.13>;tag=e6eaecf352f8f49ab25dcec3eba0461664bc3d70f6
To: "Unknown" <SIP:100@10.0.0.1>;tag=as7afdf3b5
Call-ID: df356de4463be948e998593728fd0d69@10.0.0.13
CSeq: 102 OPTIONS
Server: Asterisk PBX
Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, SUBSCRIBE, NOTIFY, INFO, PUBLISH, MESSAGE
Supported: replaces, timer
Accept: application/sdp
Content-Length: 0
00:02:17.281 ---pre---end---

This browser history is collected for the
plug-into check its content against specific
keywords of interest to the Ponmocup
operators.

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 23

The plug-in then attempts to retrieve more information on the type of SIP gateway running on this IP address, by sending
an OPTIONS and REGISTER, an example of an OPTIONS request:
00:03:15.750 ---SIP_scan_id---idx=[0]---scan_idx=[0]---pkt_type=[0]---sock_type=[0]--src=[10.0.0.13]--dst=[10.0.0.1:5060]--00:03:15.750 ---send-begin---len=[556]--OPTIONS SIP:109@10.0.0.1:5060 SIP/2.0
Via: SIP/2.0/UDP 10.0.0.13:5060;branch=z9hG4bKcac70ed4
Max-Forwards: 70
From: “Unknown” <SIP:Unknown@10.0.0.13>;tag=b899892894cb3bdc261a57219952fb0a26dea3e1cc
To: <SIP:109@10.0.0.1:5060>
Contact: <SIP:Unknown@10.0.0.13:5060>
Call-ID: 6d070c9e641bff4fb90c47f66806d6d6@10.0.0.13:5060
CSeq: 102 OPTIONS
User-Agent: Zoiper for Windows rev.1812
Date: Sat, 06 Jun 2015 12:13:12 GMT
Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, SUBSCRIBE, NOTIFY, INFO, PUBLISH
Supported: replaces, timer
Content-Length: 0
00:03:15.750 ---send-end----

The responses are summarized at the end of the log file and a CRC32 checksum is calculated over the content. In the example
below the summary indicates that the response to request ID 3021 returned a 401 response:
00:07:27.859 ------type=[1]---code=[401]---stamp=[fbd1e9ad]---count=[155]-id=[3021,3002,300,4017,4026,4004,303,3001,2021,1019,103,3004,2019,3015,3014,2007,107,2010,106,4
021,4030,104,2027,4011,3030,3027,1009,4019,3006,205,2001,1007,2022,301,3005,4020,1025,309,3003,1
000,3010,3012,4008,4027,4003,2025,3029,1014,1030,2016,4022,2030,2028,207,1006,2018,4010,1011,102
1,3028,4029,1002,210,2002,3024,4014,4025,2006,108,4005,307,3026,304,3025,105,1004,2013,3018,109,
204,4023,102,1001,3019,4001,1022,2023,4012,310,4007,3011,1027,4028,1012,1010,1028,4009,1018,4015
,2026,4006,2003,1008,1015,4000,2015,308,3013,1017,202,2029,209,110,1005,1024,4002,1003,2009,1016
,4024,2000,2012,200,206,1029,3017,306,2011,1026,3016,2008,4016,201,302,4013,2005,3008,4018,2004,
3022,1020,2024,3023,2017,2020,3009,2014,1023,1013,208,3000,3007,3020,305,203]--00:07:27.859 ---crc=[424761fc]---

24 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Figure 8: Overview of the process of loading Ponmocup

2009 – 2010
2010 – 2011
2012 – 2015

Figure 9: Overview of countries targeted by Ponmocup’s decide plug-in

All the discovered information is then encrypted and exfiltrated to a dedicated plug-in proxy, and stored in the back-end,
where the operators can query the data for information of interest.
Because the processing of this data happens on back-end servers, Fox-IT does not know the exact purpose of harvesting this
type of information. Having access to SIP gateways could be useful for VoIP fraud, but would also allow for the interception
of voice/video communication.

In total Fox-IT has identified 25 plug-ins
with unique identifiers, among them they
share more than 4000 different versions,
indicating this framework is under continuous
development.

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 25

5.3.3 Plug-in #2610 – router scan: collecting router
information
This plug-in identifies what gateway IP the victim’s
machine uses (for example 10.0.0.1) and then attempts
to identify if, on that gateway, any services respond on
the following ports:
•

22 (SSH)

•

23 (Telnet)

•

80 (HTTP)

•

443 (HTTPS)

• 8080 (Alternative HTTP port, often used by proxies)
Using an example of a typical router with an example

Figure 10: Ponmocup payload turning into print jobs

page on the gateway IP, this plug-in would exfiltrate the

on patched systems

11

following information:
00:00:26.485 ---scan_start--00:00:26.485 ---adapter_start--00:00:26.485 ---name=[{4AEE80EB-8420-4950-ACDF-9C04A9D530D1}]--00:00:26.485 ---descr=[AMD PCNET Family PCI Ethernet-adapter]--00:00:26.485 ---addr=[0a00000d]--00:00:26.485 ---index=[2]--00:00:26.485 ---type=[6]--00:00:26.485 ---dhcpenabled=[1]--00:00:26.485 ---havewins=[0]--00:00:26.485 ---leaseobt=[1445466127]--00:00:26.485 ---leaseexp=[1445469727]--00:00:26.485 ---IpAddressList(1)---ipaddr=[10.0.0.13]---ipmask=[255.255.255.0]---ctx=[2]--00:00:26.485 ---GatewayList(1)---ipaddr=[10.0.0.1]---ipmask=[0.0.0.0]---ctx=[0]--00:00:26.485 ---DhcpServer(1)---ipaddr=[10.0.0.1]---ipmask=[]---ctx=[0]--00:00:26.485 ---PrimaryWinsServer(1)---ipaddr=[0.0.0.0]---ipmask=[0.0.0.0]---ctx=[0]--00:00:26.485 ---SecondaryWinsServer(1)---ipaddr=[0.0.0.0]---ipmask=[0.0.0.0]---ctx=[0]--00:00:26.485 ---adapter_end--00:00:26.485 ---myhttp_start---server=[10.0.0.1]---url=[/]--00:00:41.641 ---connect_error=[14]--00:00:41.641 ---myhttp_end--00:00:41.641 ---http_start---server=[10.0.0.1]---url=[/]--00:00:43.063 ---reply=[1]---reply_code=[200]---reply_len=[113]--00:00:43.063 ---reply_data_start---len=[113]--<!DOCTYPE HTML PUBLIC “-//W3C//DTD HTML 4.01 Transitional//EN”>
<html>
<title>Example Router Page</title>
</html>
00:00:43.063 ---http_end---

26 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Additionally the plug-in will attempt to access the webserver on port 80 via the /admin URL, and exfiltrates
the server’s response. In the example below the /admin
does not exist:
00:00:43.063 ---myhttp_start--server=[10.0.0.1]---url=[/admin]--00:00:58.063 ---connect_error=[14]--00:00:58.063 ---myhttp_end--00:00:58.063 ---telnet_start--addr=[10.0.0.1:23]--00:01:13.063 ---connect_error=[14]---

A plug-in containing
an exploit for the
vulnerability in the
Microsoft print spooler
service, first used as
a zero-day by Stuxnet
two years earlier.

00:01:13.063 ---telnet_end--00:01:19.172 ---discover_ok--00:01:19.172 ---devcount=[1]---

execute it with system privileges on unpatched Windows

00:01:19.188 ---valid_igd=

machines. This effectively made Ponmocup a worm and

[http://10.0.0.1:80/

the amount of infected machines increased significantly.

WANIPConnection]--00:01:19.188 ---addr=[10.0.0.19]---

However when a Windows system was patched for the

00:01:19.188 ---ext_ip=[0.0.0.0]---

vulnerability, the payload would not be written to the

00:01:19.188 ---time1=[1445467515]---

system directory, but instead, to the default print spooler

00:01:19.188 ---gtc1=[1573203]---

folder; the directory used by Windows to queue printer

00:01:19.188 ---scan_end---

jobs. The print spooler service then saw the Ponmocup

00:01:53.000 ---crc=[3aea52f2]---

binary as a print job, and continued to send it to the
printer, which then carried on to print the binary. Because
the exploit is attempted multiple times, the printers

Because the processing of this data happens on

usually just kept on printing, until they ran out of either

back-end servers, Fox-IT does not know the exact purpose

paper or ink.

of harvesting this type of information. Storing information on router devices could help in further propagating

Once companies all over the world started complaining

Ponmocup through the local network, but could also aid

about their printers printing, what was presumably,

in identifying interesting targets.

‘garbage data’, the story was soon picked up by the media,
something the Ponmocup operators picked up on as well,

5.3.4 Plug-in for MS10-061 vulnerability: lateral
movement

as the plug-in was removed the very next day. To avoid
even more attention the plug-in was removed from the

12 June 2012, the day of the renewed Ponmocup release:

default plug-in list and was never re-used as a separate

a plug-in containing an exploit for the vulnerability in the

plug-in again.

Microsoft print spooler service 10 , first used as a zero-day
by Stuxnet two years earlier, is added to the group of
10

11

https://support.microsoft.

plug-ins that are pushed to every newly infected machine,

com/en-us/kb/2347290

a move the operators would soon come to regret.

http://www.symantec.com/
connect/blogs/printer-

By impersonating the print spooler service Ponmocup

madness-w32printlove-video

could move its payload into the system directory and

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 27

6 Command and control traffic
All Ponmocup components that can communicate with command and
control servers contain hardcoded domains. These domains are not
command and control servers and are not used to send data to, but are
merely used to calculate the IP addresses of the actual command and
control servers.
To achieve this, Ponmocup resolves the hardcoded

commonly used by legitimate websites.

domain and converts the returned IP into a hex value. It

•

then takes the CRC32 checksum of the domain and XORs

A command and control server typically returns a
“404 Not Found” HTTP response to make it seem as if

these two values with each other, recovering the real

the page does not exist and isn’t accepting any data.

command and control IP address.

•

This is visualized in Figure 11. In the example above the

Data is RC4 encrypted but the key is generated
differently per component.

main module contains the hardcoded domain ‘claims­

•

reference.net’. As this domain has no direct relation to any

The encrypted data is stored in the ‘Cookie’ header.
-

Data is serialized into multiple fields, each Cookie

actual Ponmocup infrastructure, this is a clever method

name is randomly chosen out of a list of 177 key-

of hiding the real command and control servers from

words which are commonly used by legitimate

any prying eyes.

websites.
-

Storing data in the Cookie header using popular

Additionally, to avoid detection by intrusion detection and

cookie keywords is a technique that Fox-IT also

prevention systems, the operators behind Ponmocup have

observed in the highly sophisticated Regin

put in a lot of effort to hide its command and control traffic:

framework.

• Figure
Command
control traffic
occurs once to
• Domains used to calculate command and control IP
10: and
Conversion
ofonly
a hardcoded
domain to an
•

twice every two days and occurs at random times.
actual
command and control address

only use common TLD’s (.net, .com, .org).

URLs are randomly structured from a combination of

•

two lists, both containing 50+ unique paths which are

claimsreference.net

Plug-ins use separate proxies and back-ends to which
they log exfiltrated data.

Reverse

XOR

2E6C9314

CRC32
4078723B

Resolve domain

110.20.225.47

6E14E12F

HEX

Figure 11: Conversion of a hardcoded domain to an actual command and control address

28 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

46.108.147.20

6.1 Installer communication

Data is RC4 encrypted using a random 16 bytes key and

The installer makes use of one hardcoded domain which is

encoded with a custom base64 table.

only used during installation. By using a domain for installation

Before base64 encoding, Ponmocup first places the RC4

purposes only, the other domains used for command and

key on top of the data, calculates the CRC32 of the data

control traffic won’t be discovered as easily. This also means

and places this value at the end of data. After decryption,

that taking down this domain would not impact the current

every block of data has the CRC32 value of that block at

botnet size, but only cause a minor hiccup in new infected

the end (last 4 bytes)15 .

machines being able to talk back to the Ponmocup backend.
This one time has only been changed a couple of times; ‘faster-

A typical Ponmocup check-in would look something

nation.net’ has been the static installation domain since 2012.

like this:

Cookie: uid=referringpath=0tMNPEubad4AlBaw4aZNqYj-PphJ-NCN5PRz4F_zJTxwoqhGOhK; clogid=
mKteiILceVXJAwJ88VdDXdzjTq2zhM2HZ5kR_c_3i111MXafapXw-DLKkNvxeOqHmjfhdz4opTIoVT410xANfSER58Th1CP; ARSiteUser=server=UiZgtrfSoQ5zfIjHnd88G_iU4NwOFtRMT-y0m; _
thepoint=czAc0MvfrFF3sVd2vehRHAo1ZASIGD3a1PCoidT0IKjiPkjNYPB_b2lr1ntEDYk88NS1Cpc4ffDckKGtsAIiZ6XAkSGH0O4oXStZfojpjcSR-46IJja-cK7N9meCk1im6xTB1ocayDmZQ_yV3LKgjxK54s8EB38AQdddE6RsLx-5_
oTv8KAVlOQ0o7IWRx2ffWe6shtDPjYhYUwgTRHtFTN5_yF0T72wfLj7dflSDLUBuSKgABWqVuu0luXDwJII50zxKxbWYJ
D3n1mOOCD6u-VZbjxr0USzySQjVPEIj6CxfGcvD1nzwvX2I8r6id5EAnukW3ckSmojFCYgxdmWe_Iij7KhghqIzZmMfZ
Vmw9wrRGPrsYgkvvrn-PW_7JyEqfp7h7WjlgSuYmciCO43vKuL9VR84BS19KR5hLGntvsd5dIZQsD

Decrypting Ponmocup cookies, such as the one above, typically result into the following fields:
Field

Meaning

PIN

A PIN is a group of plug-ins installed on the machine. At least one PIN is pushed to

User ID

A uniquely generated ID per system

System language

Language of operating system

Sent plug-ins

Plug-ins that have been ran on the victim machine thus far

Plug-in count

Amount of plug-ins installed on top of the default PIN

Operating system

Operating system version

Service pack build

Service pack version

Administrator privileges

Is Ponmocup running with administrative privileges?

Service

Is Ponmocup installed as a service?

Virtual Machine information

Fingerprint which consists out of the anti-virtualization checks

Connection information

Fingerprint with connection information such as the usage of a proxy

UPnP

Is Universal Plug and Play enabled?

CRC32 creation date system directory

CRC32 checksum of the creation date of the system directory

CRC32 creation date System Volume Information

CRC32 checksum of the creation date of the System Volume Information directory

CRC32 of System Volume Number volume hash

CRC32 checksum of the System Volume Number

Q2 resolving information

The domains the bot has used to calculate a proxy IP, including their CRC32 checksums

every client per default.

Table 5: Common fields stored in the Cookie header during command and control traffic

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 29

Figure 10: Conversion of a hardcoded domain to an
actual command and control address

claimsreference.net

Reverse

XOR

2E6C9314

CRC32
4078723B

Resolve domain

6E14E12F

6.2 Main module communication

110.20.225.47

6.3 Plug-in communication

For continuous communication four hardcoded domains

Plug-ins capable of communicating with command and

are, again, used to calculate the IP of the command and

control servers use dedicated domains which calculate

control server. Ponmocup
resolves two domains at a time,
HEX

IP addresses for proxies that log to separate back-end

the first calculated IP is used to send data to, the second

46.108.147.20

servers.

is resolved as a back-up in case the first IP cannot be
reached. To prevent the botnet from being taken down,

Although all plug-ins RC4 encrypt (exfiltrated) data,

two of the four hardcoded domains are changed every

the RC4 key can differ. The cookie header is still used by

periodically12 by updating the main module, as shown in

plug-ins to exfiltrate basic information such as counters

Figure 12. By regularly rotating these domains for the past

or checksums, but the exfiltration of larger data is done

4 years, all the Ponmocup bots are now load balanced

via (encrypted) POST requests.

between more than 10 domains.
To take down the botnet, one would had to have analyzed
every Ponmocup payload, in intervals of 2–6 months,
for 4 years straight; a time consuming task given the
complexity of the malware.
The encryption routine used by the main module for
command and control traffic is identical to the installer.

Figure 11: Separation of domains per payload

Payload B
branean.com

claimsreference.net

claimsreference.net

citiesorders.com

directlyvast.com

directlyvast.com

directiculture.com

directiculture.com

hydroelection.net

enckfeld.net

enckfeld.net

continuatu.com

Payload A

Figure 12: Separation of domains per payload

30 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Payload C

Timeline, statistics, sophistication, financial goal

Active Ponmocup Bots
Sinkholing Abuse.CH

2,500,000

2,000,000

Release of improved Ponmocup
& delivery method

1,500,000

1,000,000

500,000
Development of Ponmocup

2009 – AUG

SEPT
OCT
NOV
DEC
2010 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV
DEC
2011 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV
DEC
2012 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV
DEC
2013 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV
DEC
2014 – JAN
FEB
MAR
APR
MAY
JUNE
JULY
AUG
SEPT
OCT
NOV

0

Active Ponmocup Bots
Sinkholing Abuse.CH

2,500,000

2,000,000

Release of improved Ponmocup
& delivery method

1,500,000

1,000,000

500,000
Development of Ponmocup

2014

2013

2012

2011

2009

domains rotating in inter-

2010

0
12	In most cases we’ve observed

vals of 3–6 months

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 31

7 Anti-analysis techniques
One of the reasons Ponmocup has been able to stay under the radar,
for as long as it has, is related to the different methods the malware
uses to thwart analysis attempts.
By specifically and heuristically checking for network

7.2 Delivery of fake payload

and host based analysis tools, debuggers and virtualized

If one of the anti-analysis checks triggers, implying

environments, and then delivering a fake payload, the

an attempt to analyze the malware, a flag is set and

operators aim to prevent their malware from being

Ponmocup goes on to use one of its most clever tricks;

detected by the security industry.

delivery of a fake payload, as explained in Figure 13.

7.1 Checks for signs of analysis

Where typical malware employing anti-analysis imme-

Ponmocup’s anti-analysis checks are performed during

diately exits if being analyzed, Ponmocup installs

installation, but most Ponmocup components perform

SanctionedMedia; a pay per install software bundle,

anti-analysis checks separately. The main module, for

which merely injects advertisements into webpages,

example, performs anti-analysis checks every time a

commonly classified as adware. Because an analyst

victim’s machine is rebooted, and plug-ins perform similar

still observes an actual payload being dropped, the fake

checks individually when they are executed. The table

malware sample will often be analyzed. As this fake

below lists a number of anti-analysis checks, some of

payload does nothing more than inject advertisements

which are less common:

and is relatively easy to remove, it will generally not be
of much interest to analysts or anti-virus companies.
This fake payload is a simple, yet highly effective, disguise
for a payload that poses a far more serious threat.
The fake payload is also installed onto a system in a far
more obvious manner than the real payload, appearing in
the process list as an exe, of which the name is derived
from a random file in the system directory with 2–3
random characters appended, with the file description
‘RecSave’, product name ‘MyPCProtect’ and original
file name ‘Smad.exe’. This payload is written in .NET,
as opposed to the traditional C++ used in the actual
Ponmocup framework.

Figure 13: How the analysis flag decides between
the installation of the real or fake malware

32 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

This fake payload is
a simple, yet highly
effective, disguise
for a payload that
poses a far more
serious threat.
Figure 14: Homepage of SanctionedMedia.com, the fake payload used as a disguise by Ponmocup

Evasion method

Applicable to:

Blacklisted usernames

Currentuser, Sandbox, Honey, Vmware, Nepenthes, Snort, Andy, roo

Blacklisted computer names (Anubis)

TU-4NH09SMCG1HC, InsideTm

Blacklisted processes

vmware, vmount2, vmusrvc, vmsrvc, VBoxService, vboxtray, xenservice,
joeboxserver, joeboxcontrol, wireshark, sniff_hit, sysAnalyzer, filemon,
procexp, procmon, regmon, autoruns, atcp2log., awpta., EHSniffer., HTTP Sniffer,
EtherD., geturl., HttpAnalyzer, InjectWinSock, HTTPDebugger

Blacklisted services

vmicheartbeat, vmicvss, vmicshutdown, vmicexchange, vmci, vmdebug, vmmouse,
VMTools, VMMEMCTL, vmware, vmx86, vpcbus, vpc-s3, vpcuhub, msvmmouf,
VBoxMouse, VBoxGuest, VBoxGuest, VBoxSF, xenevtchn,
xennet, xennet6, xensvc, xenvdb

Blacklisted drivers

hgfs.sys, vmhgfs.sys, prleth.sys, prlfs.sys, prlmouse.sys, prlvideo.sys,
prl_pv32.sys, vpc-s3.sys, vmsrvc.sys, vmx86.sys, vmnet.sys

Blacklisted Product ID’s related to sandboxes

•

Anubis (76487-337-8429955-22614)

•

Joe Box (55274-640-2673064-23950)

•

CWSandbox (76487-644-3177037-23510)

Installed software names in registry

Hyper-V, VirtualMachine

Hardware description

Vbox

VMware guest to host communication channel

A check done by executing the “IN” (x86) assembly instruction with the parameter
0x564D5868 (VMXh) to connect to the VMWare I/O port

Screen resolution, color depth (amount of colors

Virtual environments often lack an actual monitor/screen or have a default

in a single pixel), and additional monitor checks

resolution (e.g. 800x600).

Number of recently opened documents

A check in the registry if the machine has had at least opened 10 files.

Number of URLs in browser history

A check in the registry if there are at least 10 URLs in the browser history.

Installed software

A check in the registry if at least one software package has been installed.

Mouse movement

Consecutive calls to the ‘GetCursorPos’ API to determine if victim is moving
the mouse.

Banned system fingerprint

If Ponmocup catches an analyst, the fingerprint of the system will immediately
be blacklisted, after which this specific fingerprint and corresponding IP can never
get infected with the malware again.

Banned IP

Ponmocup blacklists more than a 1000 IP ranges. Some of these ranges have been
put on this blacklist preemptively and some have been blacklisted because they were
observed analyzing the malware. The IP ranges on this blacklist belong to anti-virus
and threat intelligence companies as well as large banks in various countries.

Table 6: List of evasion methods

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 33

Appendix I
Targeted keywords
The following is a list of keywords that the operators of Ponmocup deemed interesting.
The keywords are used by the 14XX plug-in range (decide), as explained in paragraph 5.3.1.
achCreate

bancoherrero.com

/bb/logon

bankatlantic.web-cashplus.com

/bbw/

bankbahamasonline.com

/business/login

bankinter.com

/business/online/

bankline.natwest.com

/BusinessAppsHome.faces

bankline.rbs.com

/cb/servlet/cb/

bankline.ulsterbank.co.uk

/clkccm/

banklink.com

/cmachid.r

bankofamerica.com/smallbusiness

/cmserver/

banqueprivee1818.com

/cmwire

bbva.es

/Common/Admin

bbvanetoffice.com

/createWire

bbw/LogonStateMachineServlet.mibs

/cs70_banking/

blilk.com

/customerlink/

boursedirect.fr

/direct.bankofamerica.com

boursorama.com

/ebc_ebc1961/

boursorama.com

/fxim

business.co-operativebank.co.uk

/hbcash.exe/

business.hsbc.co.uk

/ibcorporate

business.netbankerplus.com

/IBWS/

business.santander.co.uk

/icm1/

businessaccess.citibank.citigroup.com

/icm2/

businessbanking.

/inets/

businessclassonline.

/onlineserv/cm/

business-eb.ibanking-services.com

/phcp/servlet/

businessonline.

/RsaGoIdAuthentication.aspx

businessonline.huntington.com/

/sbuser/

businessportal.mibank.com

/wcmfd/wcmpw/

bxs.com

/webcm/

caixacatalunya.com

/wire/confirm

caixacatalunya.es

/wireapproval

cajacanarias.es

/wireinitiation

cajamar.es

/wireManager

CashMgmt

/wiretransaction

cashmgt

/WireTransfer

cashmgt.firsttennessee.biz/

access.jpmorgan.com

Cashplus

adminamps.53.com

Cashplus

advisorchannel.com

cashproonline.bankofamerica.com

ameritrade.com

cmbnv.com

34 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

cmol.bbt.com

metrobankdirect.com/corporate.asp

ulsterbank.co.uk

cmserver/login_validate.cfm

mfasa.chase.com

ulsterbankanytimebanking.co.uk

commercial.hsbc.com.hk

mybusinessbank.co.uk

us.etrade.com

commercial.wamu.com

myvirtualmerchant.com

usaa.com

Compassconnect.compassbank.com

nordnet.lu

wblnk

cortalconsors.fr

nordnet.no

wcmfd/wcmpw

credentialdirect.com

nordnet.se

web2.westlaw.com

deutsche-bank.es

nwolb.com

web-access.com

direct.53.com/logon53Direct.jsp

olb.ent.com

webach

directnet.com

webcmpr.

dmv

online.citibank.com
online-business.bankofscotland.co.uk

dmv.org

PassmarkSignIn.faces

webinfocus.mandtbank.com

drivingrecords.com

pcsbanking.net

weblink.websterbank.com

ebanking-services.com

pcs-sd.net

websteronline.com

enternetbank.com/exact4web/

phxrs-opera

wellsoffice.wellsfargo.com

eregal.com

quickbooks.com

whitneybusinessnetwork.whitneybank.com

etrade.com

rbcdain.automatedfinancial.com

www.signatureny.web-access.com

exact4web

rbsdigital.com

www.treasury.pncbank.com

express.53.com

risk.nexis.com

www2.citizensbankmoneymanagergps.com

fast-trade.com

sabadellatlantico.com

www8.comerica.com

fortuneo.fr

safe.bankofamerica.com

fundsxpress.com

sanostra.es

fxpayments.americanexpress.com

scotiaitrade.com

geico.com

secure.bankofamerica.com

goldleafach.com

selfbank.es

gpsmoneymanager

siebertnet.com

hnnconhsvraps01

singlepoint.usbank.com

home1.cybusinessonline.co.uk

sitekey.bankofamerica.com

infoplus.

sitibusiness.citibank.com

inteligator.com

srvc1.jpmorgan.com

internetbanking.unfcu.org

srvc2.jpmorgan.com

invest.ameritrade.com

ss2.experian.com

itreasury.regions.com/phcp/

streetscape.com

servlet/CustomerLoginServlet

webinfocus.

svbconnect.com

lcl.fr

tioexpress.com

libertymutualbusinessdirect.com

trade.loginandtrade.com

linebourse.fr

trademonster.com

lloydslink.online.lloydsbank.com

treas-mgt.frostbank.com

logincm.aspx

treasury.pncbank.com

lppolice.com

treasurypathways.com

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 35

Appendix II
Network based indicators of compromise
Domains
The following domains appear hardcoded in Ponmocup instances and are used for C&C IP calculation, as described in paragraph 6.1.
abccornet.com

dogmationation.com

piclbumestream.com

adertisecorp.com

dynodns.org

postdone.com

affilipcorp.com

enckfeld.net

ratilovskoye.com

anexcorp.org

familyinteresting.com

recising.com

britishfederal.org

fasternation.net

searchforthat.net

changinessmen.com

freewayreg.com

sectionsfear.com

claimsreference.net

headedpicked.com

separtila.com

clickoptimiser.net

headedpicked.net

standardbay.net

contentdeliveryorg.net

highlytraditional.org

streamingadv.com

contextexpert.org

himmeding.com

ternations.com

continuatu.com

howeveraged.net

thomaslaid.net

culminaccessful.com

hydroelection.net

traffictradexpert.com

cybernan.net

illegedly.com

twicecitizens.com

defenciclovis.com

imagesharehost.com

veristats.net

descriptioned.com

leadwriting.com

virtualsearches.com

detroportans.com

meetinglimited.com

workerssan.net

directiculture.com

netdiscovery.org

yaltimate.com

directlyvast.com

picasootoolbar.com

Resolving IP’s
The following IPs are pointed to by the hardcoded domains listed above, as explained in chapter 6.
109.74.195.149
243.182.100.227
4.227.70.65
63.77.106.1
166.178.113.144
231.150.98.137
31.171.130.249
85.66.23.125
6.88.25.80
80.213.59.50
222.219.85.79
234.102.81.206
116.181.5.61
156.44.195.200
21.8.194.15
42.107.140.147
199.172.52.66
227.248.14.79

36 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

155.83.123.22
44.36.245.224
168.23.171.69
204.37.98.202
253.101.238.123
94.75.201.33
40.22.124.164
49.197.32.49
104.127.201.198
144.61.46.13
203.136.214.219
253.134.178.81
106.8.16.175
204.11.56.48
41.252.243.242
151.225.26.181
106.110.29.248
114.225.99.185

2.171.234.238
50.116.56.144
102.209.206.89
7.34.116.64
38.155.216.69
27.251.60.63
158.76.160.100
100.134.242.235
124.3.139.20
25.20.33.76
189.140.10.37
59.228.144.104
204.11.56.48
29.205.223.64
94.75.201.33
118.15.53.129
22.149.159.105

IPs used for Command and Control traffic
The following IPs are actually used for command and control traffic, as explained in chapter 6.
182.62.211.45

26.252.164.23

85.17.133.194

185.17.184.249

28.16.103.211

89.172.227.240

214.66.10.71

62.212.68.230

93.115.88.220

217.23.3.243

78.109.28.248

95.211.240.193

217.23.3.244

78.109.28.249

95.211.240.194

217.23.3.249

78.109.28.250

232.187.207.67

85.17.133.193

Snort signatures
Typical Ponmocup command and control traffic, as explained in paragraph 6.1.
alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:"FOX-SRT - Trojan - Ponmocup
HTTP Request (generic)"; flow:established,to_server; content:"Accept: */*|0d 0a|";fast_
pattern;http_header; content:"Pragma|3a| no-cache|0d 0a|";http_header; content:"CacheControl|3a| no-cache|0d 0a|";http_header; content:!"Referer|3a|";http_header;
content:"Cookie|3a| ";http_header; pcre:"/^Host\x3A[^\r\n]+?\d{1,3}\x2e\d{1,3}\x2e\d{1,3}\
x2e\d{1,3}\r\n/Hm"; content:!"Accept-Encoding|3a| ";http_header; content:!"Accept-Language|3a|
";http_header; content:!"Content-Type|3a| ";http_header; reference:url,http://blog.Fox-IT.
com/2015/12/02/ponmocup-a-giant-hiding-in-the-shadows; threshold:type limit, track by_src,
count 1, seconds 600; classtype:trojan-activity; priority:1; sid:21001533; rev:1;)
alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:"FOX-SRT - Trojan - Ponmocup
plugin-specific check-in"; content:"GET"; http_method; content:"HTTP/1.1|0d0a|Accept: */*";
distance:0; content:"Content-Type: application/x-www-form-urlencoded"; fast_pattern;
distance:0; pcre:"/Host: ([0-9]{1,3}\.){3}[0-9]{1,3}\x0d/"; distance:0; content:"User-Agent:
Mozilla/4."; distance:0; content:"Cookie: "; pcre:"/Cookie: [a-z0-9]{1,10}=[a-z0-9+/]{20,500}
(=){0,2}/i"; distance:0; urilen:<50,norm; content:!"Referer"; threshold:type limit, track
by_src, count 1, seconds 600; classtype:trojan-activity; reference:url,http://blog.Fox-IT.
com/2015/12/02/ponmocup-a-giant-hiding-in-the-shadows; sid:21001686; rev:1;)

Scanning activity of plug-in #2600, as explained in paragraph 5.3.2.
alert udp $HOME_NET $SIP_PORTS -> any any (msg:"FOX-SRT - Trojan - Ponmocup plugin #2600
(SIP scanner)"; content:"User-Agent|3a| Zoiper for Windows rev.1812|0d0a|"; threshold: type
limit, count 1, seconds 3600, track by_src; reference:url,http://blog.Fox-IT.com/2015/12/02/
ponmocup-a-giant-hiding-in-the-shadows; sid:21001493; classtype:trojan-activity; rev:1;)

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 37

Appendix III
Host based indicators of compromise
YARA signature
The following YARA signature can be used to scan for Ponmocup plug-ins in memory. This is based on the content of the PE
headers, as explained in chapter 5.3
rule Ponmocup : plugins
{
meta:
strings:

condition:

description = "Ponmocup plugin detection (memory)"
author = "Danny Heppener, Fox-IT"
$1100 = {4D 5A 90 [29] 4C 04}
$1201 = {4D 5A 90 [29] B1 04}
$1300 = {4D 5A 90 [29] 14 05}
$1350 = {4D 5A 90 [29] 46 05}
$1400 = {4D 5A 90 [29] 78 05}
$1402 = {4D 5A 90 [29] 7A 05}
$1403 = {4D 5A 90 [29] 7B 05}
$1404 = {4D 5A 90 [29] 7C 05}
$1405 = {4D 5A 90 [29] 7D 05}
$1406 = {4D 5A 90 [29] 7E 05}
$1500 = {4D 5A 90 [29] DC 05}
$1501 = {4D 5A 90 [29] DD 05}
$1502 = {4D 5A 90 [29] DE 05}
$1505 = {4D 5A 90 [29] E1 05}
$1506 = {4D 5A 90 [29] E2 05}
$1507 = {4D 5A 90 [29] E3 05}
$1508 = {4D 5A 90 [29] E4 05}
$1509 = {4D 5A 90 [29] E5 05}
$1510 = {4D 5A 90 [29] E6 05}
$1511 = {4D 5A 90 [29] E7 05}
$1512 = {4D 5A 90 [29] E8 05}
$1600 = {4D 5A 90 [29] 40 06}
$1601 = {4D 5A 90 [29] 41 06}
$1700 = {4D 5A 90 [29] A4 06}
$1800 = {4D 5A 90 [29] 08 07}
$1801 = {4D 5A 90 [29] 09 07}
$1802 = {4D 5A 90 [29] 0A 07}
$1803 = {4D 5A 90 [29] 0B 07}
$2001 = {4D 5A 90 [29] D1 07}
$2002 = {4D 5A 90 [29] D2 07}
$2003 = {4D 5A 90 [29] D3 07}
$2004 = {4D 5A 90 [29] D4 07}
$2500 = {4D 5A 90 [29] C4 09}
$2501 = {4D 5A 90 [29] C5 09}
$2550 = {4D 5A 90 [29] F6 09}
$2600 = {4D 5A 90 [29] 28 0A}
$2610 = {4D 5A 90 [29] 32 0A}
$2700 = {4D 5A 90 [29] 8C 0A}
$2701 = {4D 5A 90 [29] 8D 0A}
$2750 = {4D 5A 90 [29] BE 0A}
$2760 = {4D 5A 90 [29] C8 0A}
$2810 = {4D 5A 90 [29] FA 0A}

any of ($1100,$1201,$1300,$1350,$1400,$1402,$1403,$1404,$1405,$1406,
$1500,$1501,$1502,$1505,$1506,$1507,$1508,$1509,$1510,$1511,$1512,$1600,$1601,$1700,$1800,$1801,
$1802,$1803,$2001,$2002,$2003,$2004,$2500,$2501,$2550,$2600,$2610,$2700,$2701,$2750,$2760,$2810)
}

38 | fox-it | Ponmocup | A giant hiding in the shadows | November 2015

Registry
Registry keys used by the Ponmocup framework for information storage.
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\1
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\2
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\3
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\4
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\5
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\6
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\7
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\8
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\9
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\10
HKEY_CURRENT_USER\Software\Microsoft\Multimedia\11

Copyright © 2015 Fox-IT BV
All rights reserved. No part of this document shall be reproduced, stored in a retrieval system or transmitted by any means
without written permission from Fox-IT. Violations will be prosecuted by applicable law. The general service conditions of
Fox-IT B.V. apply to this documentation.
Trademark
Fox-IT and the Fox-IT logo are trademarks of Fox-IT B.V.
All other trademarks mentioned in this document are owned by the mentioned legacy body or organization.

fox-it | Ponmocup | A giant hiding in the shadows | November 2015 | 39

fox-it
• Was founded in 1999.
• Established one of the first Cyber Security
Operations Centers in Europe.
• Is Europe’s largest specialized cyber security
company.
• Operates in three business areas:
1

Cyber Threat Management: a solution portfolio
aimed at reducing the risks of cyber threats,
and includes: professional services, managed
security services, and technology;

2

Web and Mobile event analytics: a solution
portfolio that is aimed at reducing financial
risks in (online) payment transactions;

3

High Assurance: solutions that make trusted
communication possible to the highest
classification levels.

• Has been involved in many high-profile Incident
Response cases. Most of the cases we worked on
are secret. An approved selection can be shared
upon request.

Fox-IT

602-001-EN

Olof Palmestraat 6, Delft

t +31 (0) 15 284 79 58

Iban nl57abna0554697041

po box 638, 2600 ap Delft

f +31 (0) 15 284 79 90

kvk Haaglanden 27301624

The Netherlands

www.Fox-IT.com