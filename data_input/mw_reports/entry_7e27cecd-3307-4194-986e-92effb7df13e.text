Visiting The Bear Den
A Journey in the Land of (Cyber-)Espionage

Joan Calvet
Jessy Campos
Thomas Dupuy
1

Sednit Group
• Also know as APT28, Fancy Bear, Sofacy,
STRONTIUM, Tsar Team
• Group of attackers doing targeted attacks
since 2006
• Mainly interested into geopolitics
2

Plan
• Context
• The Week Serge Met The Bear
• The Mysterious DOWNDELPH

• Speculative Mumblings
3

What kind of group is Sednit?

CONTEXT

4

Who Is The Bear After? (1)
• We found a list of targets for Sednit
phishing campaigns:
– Operators used Bitly and “forgot” to set the
profile private
(feature now removed from Bitly)

– Around 4,000 shortened URLs during 6
months in 2015
5

Who Is The Bear After? (2)

http://login.accoounts-google.com/url/?continue=
cGFyZXBreWl2QGdtYWlsLmNvbQ==&df=UGFraXN0
YW4rRW1iYXNzeStLeWl2&tel=1

6

Who Is The Bear After? (2)
parepkyiv@gmail.com

http://login.accoounts-google.com/url/?continue=
cGFyZXBreWl2QGdtYWlsLmNvbQ==&df=UGFraXN0
YW4rRW1iYXNzeStLeWl2&tel=1

6

Who Is The Bear After? (2)
parepkyiv@gmail.com

http://login.accoounts-google.com/url/?continue=
cGFyZXBreWl2QGdtYWlsLmNvbQ==&df=UGFraXN0
YW4rRW1iYXNzeStLeWl2&tel=1

Pakistan+Embassy+Kyiv
6

Who Is The Bear After? (2)
parepkyiv@gmail.com

http://login.accoounts-google.com/url/?continue=
cGFyZXBreWl2QGdtYWlsLmNvbQ==&df=UGFraXN0
YW4rRW1iYXNzeStLeWl2&tel=1

Pakistan+Embassy+Kyiv
6

Who Is The Bear After? (3)
• Embassies and ministries of more than 40 countries
• NATO and EU institutions
• “Who’s who” of individuals involved in Eastern Europe
politics:
– Politicians
– Activists
– Journalists
– Academics
– Militaries
–…
7

The Bear Has Money
• A bag full of 0-day exploits:

CVE-2015-3043 (Flash)
CVE-2015-1701 (Windows LPE)
Apr

May

Jun

CVE-2015-2590 (Java)
CVE-2015-4902 (Java click-to-play bypass)

CVE-2015-7645
(Flash)

Jul

Aug

Sep

Oct

CVE-2015-2424 (Office RCE)

2015
8

The Bear Can Code
• Tens of custom-made software used since 2006:
– Droppers
– Downloaders
– Reconnaissance tools
– Long-term spying backdoors
– Encryption proxy tool
– USB C&C channel
– Many helper tools
–…
9

Disclaimers
• Over the last two years we tracked Sednit closely,
but of course our visibility is not exhaustive
• How do we know it is ONE group?
– We don’t
– Our Sednit “definition” is based on their toolkit and the
related infrastructure

• We do not do attribution (but we point out hints that may
be used for that)
10

THE WEEK SERGE MET THE BEAR

11

Who Is Serge?
• Code name for an imaginary Sednit target
• Serge is a government employee with access to
sensitive information

• The chain of events in Serge’s attack matches
several real cases we investigated
• We use it as a textbook case to present (a part of)
the Sednit toolkit
12

Monday, 9:30AM

13

Serge Opens an Email

14

Legitimate URL Mimicking

15

Legitimate URL Mimicking

15

Legitimate URL Mimicking

15

Legitimate URL Mimicking

15

Serge clicks on the URL, and…

16

…Serge Meets SEDKIT
• Exploit-kit for targeted attacks
• Entry-point URLs mimic legitimate URLs

• Usually propagated by targeted phishing emails
(also seen with hacked website + iframe)
• Period of activity: September 2014 - Now
17

Landing Page (1)
Reconnaissance Report Building

18

Landing Page (1)
Reconnaissance Report Building

18

Landing Page (1)
Reconnaissance Report Building

18

19

Crawling Sedkit

20

Serge is
exploited…

selected

to

be

21

… and Visits Sednit Exploits Factory
Vulnerability

Targeted Application

Note

CVE-2013-1347

Internet Explorer 8

CVE-2013-3897

Internet Explorer 8

CVE-2014-1510 +
CVE-2014-1511

Firefox

CVE-2014-1776

Internet Explorer 11

CVE-2014-6332

Internet Explorer

N/A

MacKeeper

CVE-2015-2590 +
CVE-2015-4902

Java

0-day*

CVE-2015-3043

Adobe Flash

0-day*

CVE-2015-5119

Adobe Flash

Hacking Team gift

CVE-2015-7645

Adobe Flash

0-day*

Several versions

* : At the time SEDKIT dropped them

22

… and Visits Sednit Exploits Factory
Vulnerability

Targeted Application

Note

CVE-2013-1347

Internet Explorer 8

CVE-2013-3897

Internet Explorer 8

CVE-2014-1510 +
CVE-2014-1511

Firefox

CVE-2014-1776

Internet Explorer 11

CVE-2014-6332

Internet Explorer

N/A

MacKeeper

CVE-2015-2590 +
CVE-2015-4902

Java

0-day*

CVE-2015-3043

Adobe Flash

0-day*

CVE-2015-5119

Adobe Flash

Hacking Team gift

CVE-2015-7645

Adobe Flash

0-day*

Several versions

* : At the time SEDKIT dropped them

23

… and Visits Sednit Exploits Factory
Vulnerability

Targeted Application

Note

CVE-2013-1347

Internet Explorer 8

CVE-2013-3897

Internet Explorer 8

CVE-2014-1510 +
CVE-2014-1511

Firefox

CVE-2014-1776

Internet Explorer 11

CVE-2014-6332

Internet Explorer

N/A

MacKeeper

CVE-2015-2590 +
CVE-2015-4902

Java

0-day*

CVE-2015-3043

Adobe Flash

0-day*

CVE-2015-5119

Adobe Flash

Hacking Team gift

CVE-2015-7645

Adobe Flash

0-day*

Several versions

* : At the time SEDKIT dropped them

24

… and Visits Sednit Exploits Factory
Vulnerability

Targeted Application

Note

CVE-2013-1347

Internet Explorer 8

CVE-2013-3897

Internet Explorer 8

CVE-2014-1510 +
CVE-2014-1511

Firefox

CVE-2014-1776

Internet Explorer 11

CVE-2014-6332

Internet Explorer

N/A

MacKeeper

CVE-2015-2590 +
CVE-2015-4902

Java

0-day*

CVE-2015-3043

Adobe Flash

0-day*

CVE-2015-5119

Adobe Flash

Hacking Team gift

CVE-2015-7645

Adobe Flash

0-day*

Several versions

* : At the time SEDKIT dropped them

25

Revamping CVE-2014-6332
(a.k.a. IE “Unicorn bug”)

• October 2015:
– Re-use of public PoC to disable VBScript “SafeMode”
– Next stage binary downloaded by PowerShell

26

Revamping CVE-2014-6332
(a.k.a. IE “Unicorn bug”)

• October 2015:
– Re-use of public PoC to disable VBScript “SafeMode”
– Next stage binary downloaded by PowerShell

• February 2016:
– No more “SafeMode” disabling, direct ROP-based
shellcode execution
– Around 400 lines of VBScript, mostly custom
27

28

29

VBScript Framework
• Functions:
– addToROP()
– getROPstringAddress ()
– Code_section_explorer_7 ()
– Code_section_explorer_XP()
– getNeddedAddresses ()
– addrToHex ()
–…

30

VBScript Framework
• Functions:
– addToROP()
– getROPstringAddress ()
– Code_section_explorer_7 ()
– Code_section_explorer_XP()
– getNeddedAddresses ()
– addrToHex ()
–…

Have you ever seen this somewhere?
(cuz we don’t)
30

Exploit downloads a payload
and…

31

Serge Meets SEDUPLOADER
(a.k.a. JHUHUGIT, JKEYSKW)

• Downloaded by SEDKIT
• Two binaries: the dropper and its embedded
payload

• Deployed as a first-stage component
• Period of activity: March 2015 - Now

SEDUPLOADER DROPPER
Workflow
AntiAnalysis

Payload
Dropping

Escalating
Privileges

Payload
Persistence

SEDUPLOADER DROPPER
Workflow
AntiAnalysis

Payload
Dropping

Escalating
Privileges

Payload
Persistence

SEDUPLOADER DROPPER
Workflow
AntiAnalysis

Payload
Dropping

Escalating
Privileges

Payload
Persistence

SEDUPLOADER DROPPER
Workflow
AntiAnalysis

Payload
Dropping

• CVE-2015-1701 (0-day)
• CVE-2015-2387 (
)

Escalating
Privileges

Payload
Persistence

SEDUPLOADER DROPPER
Workflow
AntiAnalysis

Payload
Dropping

Escalating
Privileges

• Windows COM object hijacking
• Shell Icon Overlay COM object
• Registry key UserInitMprLogonScript
• JavaScript code executed within rundll32.exe
• Scheduled tasks, Windows service,…

Payload
Persistence

SEDUPLOADER DROPPER
Workflow
AntiAnalysis

Payload
Dropping

Escalating
Privileges

• Windows COM object hijacking
• Shell Icon Overlay COM object
• Registry key UserInitMprLogonScript
• JavaScript code executed within rundll32.exe
• Scheduled tasks, Windows service,…

Payload
Persistence

SEDUPLOADER DROPPER
Workflow
AntiAnalysis

Payload
Dropping

Escalating
Privileges

Payload
Persistence

• Windows COM object hijacking Win32/COMpfun
• Shell Icon Overlay COM object
• Registry key UserInitMprLogonScript
• JavaScript code executed within rundll32.exe Win32/Poweliks
• Scheduled tasks, Windows service,…

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

First Stage
Report

Parsing C&C
Orders

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

First Stage
Report

Parsing C&C
Orders

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

Direct
Connection

First Stage
Report

Parsing C&C
Orders

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

First Stage
Report

Direct
Connection

SUCCESS
C&C
Successfully
Contacted

Parsing C&C
Orders

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

Direct
Connection

First Stage
Report

Via Proxy

SUCCESS
FAIL

C&C
Successfully
Contacted

Parsing C&C
Orders

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

Direct
Connection

First Stage
Report

Via Proxy

SUCCESS
FAIL

C&C
Successfully
Contacted

Parsing C&C
Orders

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

Direct
Connection

First Stage
Report

Parsing C&C
Orders

Via Proxy

Inject Into
Browsers

SUCCESS
FAIL

C&C
Successfully
Contacted

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

Direct
Connection

First Stage
Report

Parsing C&C
Orders

Via Proxy

Inject Into
Browsers

SUCCESS
FAIL

C&C
Successfully
Contacted

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

First Stage
Report

Parsing C&C
Orders

SEDUPLOADER PAYLOAD
Workflow
Network Link
Establishment

First Stage
Report

Parsing C&C
Orders

East Side Story
printf debugging

Chain of Events

Serge opens an email
leading to SEDKIT, and then
SEDUPLOADER
9:30AM

Mon

Tue

Wed

Thu

Fri

46

Monday, 10:00AM

47

…Serge meets SEDRECO
• Downloaded by SEDUPLOADER
• Backdoor with the ability to load external
plugins
• Usually deployed as a second stage backdoor
to spy on the infected computer

• Period of activity : 2012 - Now
48

Dropper
• Drops encrypted configuration
– In a file (“msd”)
– In the Windows Registry

• No configuration linked to the payload

Configuration Overview

Configuration Overview
XOR KEY

Configuration Overview
XOR KEY

FIELD SIZES

Configuration Overview (Decrypted)

Configuration Overview (Decrypted)

('600000', '600000', ‘SERGE-PC…', 'kenlynton.com',
'softwaresupportsv.com', 'mtcf', '10000', '600000', '1',
'updmanager.com', '', '', '', '', '', '', '', '', '', '')

Configuration Overview (Decrypted)

Various timeouts
('600000', '600000', ‘SERGE-PC…', 'kenlynton.com',
'softwaresupportsv.com', 'mtcf', '10000', '600000', '1',
'updmanager.com', '', '', '', '', '', '', '', '', '', '')

Configuration Overview (Decrypted)

Computer name
('600000', '600000', ‘SERGE-PC…', 'kenlynton.com',
'softwaresupportsv.com', 'mtcf', '10000', '600000', '1',
'updmanager.com', '', '', '', '', '', '', '', '', '', '')

Configuration Overview (Decrypted)

Keylogger enabled
('600000', '600000', ‘SERGE-PC…', 'kenlynton.com',
'softwaresupportsv.com', 'mtcf', '10000', '600000', '1',
'updmanager.com', '', '', '', '', '', '', '', '', '', '')

Configuration Overview (Decrypted)

('600000', '600000', ‘SERGE-PC…', 'kenlynton.com',
'softwaresupportsv.com', 'mtcf', '10000', '600000', '1',
'updmanager.com', '', '', '', '', '', '', '', '', '', '')

C&C servers

Configuration Overview (Decrypted)

('600000', '600000', ‘SERGE-PC…', 'kenlynton.com',
'softwaresupportsv.com', 'mtcf', '10000', '600000', '1',
'updmanager.com', '', '', '', '', '', '', '', '', '', '')

Operation name
(rhst, rhbp, mctf, mtqs)

Configuration Overview (Decrypted)

('600000', '600000', ‘SERGE-PC…', 'kenlynton.com',
'softwaresupportsv.com', 'mtcf', '10000', '600000', '1',
'updmanager.com', '', '', '', '', '', '', '', '', '', '')

Plugins list

Payload

Payload

Payload

Payload

Payload

Payload

Payload

Payload

Payload

Extending The Core (1)
• Plugins are DLLs loaded in the same address
space
• Plugins receive arguments from the core:

Extending The Core (1)
• Plugins are DLLs loaded in the same address
space
• Plugins receive arguments from the core:

Extending The Core (1)
• Plugins are DLLs loaded in the same address
space
• Plugins receive arguments from the core:

Extending The Core (2)

Extending The Core (2)

New command

Chain of Events

Serge opens an email
leading to SEDKIT, and then
SEDUPLOADER
9:30AM

Tue

Mon

Wed

Thu

Fri

SEDRECO deployment
10:00AM

55

Monday, 2:00PM

56

Serge Meets XAGENT
(a.k.a SPLM, CHOPSTICK)
• Downloaded by SEDUPLOADER
• Modular backdoor developed in C++ with Windows,
Linux and iOS versions
• Deployed in most Sednit operations, usually after the
reconnaissance phase
• Period of activity: November 2012 - Now
57

58

59

• Linux XAGENT, compiled in July 2015

59

• Linux XAGENT, compiled in July 2015
• ~ 18,000 lines of code in 59 classes

59

• Linux XAGENT, compiled in July 2015
• ~ 18,000 lines of code in 59 classes

• Derives from Windows version:

59

• Linux XAGENT, compiled in July 2015
• ~ 18,000 lines of code in 59 classes

• Derives from Windows version:

• XAGENT major version 2, but matches the
logic of currently distributed binaries
(version 3)
59

Such Comments

<- That’s a lot
60

main.cpp

61

main.cpp

61

main.cpp

61

main.cpp

61

main.cpp

61

main.cpp

61

Communication Workflow
XAGENT INFECTED COMPUTER
Modules

AgentKernel::run()

C&C
SERVER

AgentKernel
RemoteShell
FSModule
Keylogger

Translates messages
from modules for
the C&C server

Channel
Controller

Translates messages
from the C&C
server for modules

Unencrypted messages
Encrypted messages
62

Communication Workflow
XAGENT INFECTED COMPUTER
Modules

AgentKernel::run()

C&C
SERVER

AgentKernel
RemoteShell
FSModule
Keylogger

Translates messages
from modules for
the C&C server

Channel
Controller

Translates messages
from the C&C
server for modules

Unencrypted messages
Encrypted messages
62

Communication Workflow
XAGENT INFECTED COMPUTER
Modules

AgentKernel::run()

C&C
SERVER

AgentKernel
RemoteShell
FSModule
Keylogger

Translates messages
from modules for
the C&C server

Channel
Controller

Translates messages
from the C&C
server for modules

Unencrypted messages
Encrypted messages
62

Communication Workflow
XAGENT INFECTED COMPUTER
Modules

AgentKernel::run()

C&C
SERVER

AgentKernel
RemoteShell
FSModule
Keylogger

Translates messages
from modules for
the C&C server

Channel
Controller

Translates messages
from the C&C
server for modules

Unencrypted messages
Encrypted messages
62

Communication Workflow
XAGENT INFECTED COMPUTER
Modules

AgentKernel::run()

C&C
SERVER

AgentKernel
RemoteShell
FSModule
Keylogger

Translates messages
from modules for
the C&C server

Channel
Controller

Translates messages
from the C&C
server for modules

Unencrypted messages
Encrypted messages
62

Communication Workflow
XAGENT INFECTED COMPUTER
Modules

AgentKernel::run()

C&C
SERVER

AgentKernel
RemoteShell
FSModule
Keylogger

Translates messages
from modules for
the C&C server

Channel
Controller

Translates messages
from the C&C
server for modules

Unencrypted messages
Encrypted messages
62

Communication Workflow
XAGENT INFECTED COMPUTER
Modules

AgentKernel::run()

C&C
SERVER

AgentKernel
RemoteShell
FSModule
Keylogger

Translates messages
from modules for
the C&C server

Channel
Controller

Translates messages
from the C&C
server for modules

Unencrypted messages
Encrypted messages
62

Communication Workflow
XAGENT INFECTED COMPUTER
Modules

AgentKernel::run()

C&C
SERVER

AgentKernel
RemoteShell
FSModule
Keylogger

Translates messages
from modules for
the C&C server

Channel
Controller

Translates messages
from the C&C
server for modules

Unencrypted messages
Encrypted messages

Channel
(HTTP or emails)
62

Emails Channel (1)
Workflow
exfil@gmail.com

XAGENT INFECTED
COMPUTER
USING MailChannel

orders@gmail.com

C&C SERVER

63

Emails Channel (1)
Workflow
exfil@gmail.com

SMTPS

XAGENT INFECTED
COMPUTER
USING MailChannel

orders@gmail.com

C&C SERVER

63

Emails Channel (1)
Workflow
exfil@gmail.com

SMTPS

XAGENT INFECTED
COMPUTER
USING MailChannel

POP3S

orders@gmail.com

C&C SERVER

63

Emails Channel (1)
Workflow
exfil@gmail.com

SMTPS

POP3S

SMTPS
XAGENT INFECTED
COMPUTER
USING MailChannel

orders@gmail.com

C&C SERVER

63

Emails Channel (1)
Workflow
exfil@gmail.com

XAGENT INFECTED
COMPUTER
USING MailChannel

SMTPS

POP3S

POP3S

SMTPS

orders@gmail.com

C&C SERVER

63

Emails Channel (1)
Workflow
exfil@gmail.com

XAGENT INFECTED
COMPUTER
USING MailChannel

SMTPS

POP3S

POP3S

SMTPS

orders@gmail.com

C&C SERVER

An email-based C&C protocol needs to provide:
1. A way to distinguish C&C emails from unrelated emails
2. A way to bypass spam filters
63

Email Channel (2)
P2Scheme, a.k.a “Level 2 Protocol”

64

Email Channel (2)
P2Scheme, a.k.a “Level 2 Protocol”

base64

KEY
0

SUBJ_TOKEN ^ KEY
5

XAGENT_ID ^ KEY
12

16
64

Email Channel (2)
P2Scheme, a.k.a “Level 2 Protocol”

base64

KEY
0

SUBJ_TOKEN ^ KEY
5

XAGENT_ID ^ KEY
12

16
64

Email Channel (3)
Georgian Protocol

65

Email Channel (3)
Georgian Protocol

Georgian national ID number

65

Email Channel (3)
Georgian Protocol

Georgian national ID number

“Hello”

65

Email Channel (3)
Georgian Protocol

Georgian national ID number

“Hello”

“detailed” + timestamp

65

Bonus: XAGENT C&C Infrastructure

66

Bonus: XAGENT C&C Infrastructure

Thank you, Google search engine
66

XAGENT Proxy Server
• Python code used between April and June
2015

XAGENT Proxy Server
• Python code used between April and June
2015

• ~ 12,200 lines of code

XAGENT Proxy Server
• Python code used between April and June
2015

• ~ 12,200 lines of code
• Translates email protocol from XAGENT
into a HTTP protocol for the C&C server:
P2Protocol
P3Protocol
(over HTTP)

INBOX
XAGENT

PROXY

BACKEND
C&C SERVER

Chain of Events
XAGENT deployment
02:00PM

Serge opens an email
leading to SEDKIT, and then
SEDUPLOADER
9:30AM

Tue

Mon

Wed

Thu

Fri

SEDRECO deployment
10:00AM

68

Next three days…

69

Serge Meets
Passwords Extractors
• SecurityXploded tools (grand classic of Sednit)
– Cons: usually detected by AV software

• Custom tools, in particular a Windows Live
Mail passwords extractor compiled for Serge:

70

Serge Meets
Windows Passwords Extractors
• From registry hives
– Deployed with LPE for CVE-2014-4076

• Good ol’ Mimikatz (“pi.log”)
– Deployed with LPE for CVE-2015-1701
71

Serge Meets Screenshoter
• Custom tool to take screenshots each time the
mouse moves

72

And… Serge Meets XTUNNEL
• Network proxy tool to contact machines
normally unreachable from Internet
• Period of activity: May 2013 - Now

73

Initial
Situation
C&C SERVER

INTERNET

INTERNAL
NETWORK

COMPUTER A
(CLEAN)

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

74

Encryption
Handshake
C&C SERVER

INTERNET

INTERNAL
NETWORK

COMPUTER A
(CLEAN)

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

75

D5 47 A4 A4.3F 60 6A 0F
3B 36 04 1C.44 4A C8 BD
80 BE 7B 25.8E E6 FC F2
CD 5D 7F 3A.73 1D 59 A5
2D 35 77 F3.B2 1B DF 7D
EE 1D 1C F1.AB 91 87 87

Encryption
Handshake
C&C SERVER

T

…

INTERNET

D5 47 A4 A4.3F 60 6A 0F
3B 36 04 1C.44 4A C8 BD
80 BE 7B 25.8E E6 FC F2
CD 5D 7F 3A.73 1D 59 A5
2D 35 77 F3.B2 1B DF 7D
EE 1D 1C F1.AB 91 87 87

INTERNAL
NETWORK

T

…

COMPUTER A
(CLEAN)

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

75

D5 47 A4 A4.3F 60 6A 0F
3B 36 04 1C.44 4A C8 BD
80 BE 7B 25.8E E6 FC F2
CD 5D 7F 3A.73 1D 59 A5
2D 35 77 F3.B2 1B DF 7D
EE 1D 1C F1.AB 91 87 87

Encryption
Handshake

T

…

C&C SERVER

INTERNET

O

INTERNAL
NETWORK

D5 47 A4 A4.3F 60 6A 0F
3B 36 04 1C.44 4A C8 BD
80 BE 7B 25.8E E6 FC F2
CD 5D 7F 3A.73 1D 59 A5
2D 35 77 F3.B2 1B DF 7D
EE 1D 1C F1.AB 91 87 87

…

COMPUTER A
(CLEAN)

T

RC4 key

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

75

D5 47 A4 A4.3F 60 6A 0F
3B 36 04 1C.44 4A C8 BD
80 BE 7B 25.8E E6 FC F2
CD 5D 7F 3A.73 1D 59 A5
2D 35 77 F3.B2 1B DF 7D
EE 1D 1C F1.AB 91 87 87

Encryption
Handshake

…

C&C SERVER

INTERNET

 Offset O in T
 Proof of knowledge of T
O

INTERNAL
NETWORK

D5 47 A4 A4.3F 60 6A 0F
3B 36 04 1C.44 4A C8 BD
80 BE 7B 25.8E E6 FC F2
CD 5D 7F 3A.73 1D 59 A5
2D 35 77 F3.B2 1B DF 7D
EE 1D 1C F1.AB 91 87 87

…

COMPUTER A
(CLEAN)

T

T

RC4 key

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

75

Encryption
Handshake

O

…

C&C SERVER

INTERNET

D5 47 A4 A4.3F 60 6A 0F
3B 36 04 1C.44 4A C8 BD
80 BE 7B 25.8E E6 FC F2
CD 5D 7F 3A.73 1D 59 A5
2D 35 77 F3.B2 1B DF 7D
EE 1D 1C F1.AB 91 87 87

RC4 Key

“OK”

O
INTERNAL
NETWORK

D5 47 A4 A4.3F 60 6A 0F
3B 36 04 1C.44 4A C8 BD
80 BE 7B 25.8E E6 FC F2
CD 5D 7F 3A.73 1D 59 A5
2D 35 77 F3.B2 1B DF 7D
EE 1D 1C F1.AB 91 87 87

…

COMPUTER A
(CLEAN)

T

T

RC4 key

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

76

Encryption
Handshake
C&C SERVER

INTERNET

RC4-encrypted link

INTERNAL
NETWORK

COMPUTER A
(CLEAN)

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

77

Encryption
Handshake
C&C SERVER

TLS encapsulation
(added in 2014)

INTERNET

INTERNAL
NETWORK

COMPUTER A
(CLEAN)

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

78

Tunnels
Opening
C&C SERVER

INTERNET

INTERNAL
NETWORK

COMPUTER A
(CLEAN)

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

79

Tunnels
Opening
C&C SERVER

INTERNET

INTERNAL
NETWORK

COMPUTER A
(CLEAN)

SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

79

Tunnels
Opening
C&C SERVER

INTERNET

INTERNAL
NETWORK

COMPUTER A
(CLEAN)

Any kind of TCP-based
traffic can be tunneled!
(PsExec)
SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

79

Tunnels
Opening
C&C SERVER

INTERNET

INTERNAL
NETWORK

COMPUTER A
(CLEAN)

Any kind of TCP-based
traffic can be tunneled!
(PsExec)
SERGE’S
COMPUTER
(XTUNNEL
INFECTED)
COMPUTER B
(CLEAN)

79

Code Obfuscation (1)
• Starting in July 2015 XTUNNEL code was
obfuscated
(which is two months after the Sednit attack against
the German parliament, where XTUNNEL was used)

80

Code Obfuscation (1)
• Starting in July 2015 XTUNNEL code was
obfuscated
(which is two months after the Sednit attack against
the German parliament, where XTUNNEL was used)

• The obfuscation is a mix of classic syntactic
techniques, like insertion of junk code and
opaque predicates
80

Code Obfuscation (2)
BEFORE

AFTER

81

Code Obfuscation (2)
BEFORE

AFTER

Good toy example for automatic
desobfuscation magic?

81

Chain of Events
XAGENT deployment
02:00PM

Serge opens an email
leading to SEDKIT, and then
SEDUPLOADER
9:30AM

Tue

Mon

SEDRECO deployment
10:00AM

Wed

Thu

Fri

Information
exfiltration and
lateral movements

82

Friday, 11:00AM

83

Long Term Persistence (1)
• Special XAGENT copied in Office folder under
the name “msi.dll”

84

Long Term Persistence (2)
• system32\msi.dll is a legitimate Windows
DLL needed by Office applications

85

Long Term Persistence (2)
• system32\msi.dll is a legitimate Windows
DLL needed by Office applications
• XAGENT msi.dll exports the same function
names as the legitimate msi.dll:

85

Long Term Persistence (3)
• Each time Serge starts Office, XAGENT
msi.dll is loaded (search-order hijacking):
– Loads real msi.dll from system32
– Fills its export table with the addresses of the real
msi.dll functions
– Starts XAGENT malicious logic

86

Long Term Persistence (3)
• Each time Serge starts Office, XAGENT
msi.dll is loaded (search-order hijacking):
– Loads real msi.dll from system32
– Fills its export table with the addresses of the real
msi.dll functions
– Starts XAGENT malicious logic

• Same
technique
also
seen
with
LINKINFO.dll dropped in C:\WINDOWS
86

Chain of Events
XAGENT deployment
02:00PM

Serge opens an email
leading to SEDKIT, and then
SEDUPLOADER

Long-term
persistence
method
deployment

9:30AM

11:00AM

Tue

Mon

SEDRECO deployment
10:00AM

Wed

Thu

Fri

Information
exfiltration and
lateral movements

87

What the hell is going on here ?!

THE MYSTERIOUS DOWNDELPH

88

Discovery
September 2015

• Classic Sednit dropper
• Shows a decoy document

What Is In This Dropper?

The Ultimate Boring Component
• Delphi downloader, we named it DOWNDELPH
(slow clap)
• Simple workflow:
– Downloads a config (.INI file)
– Based on the config, downloads a payload
– Executes payload

• Persistence method: Run registry key

The Ultimate Boring Component
• Delphi downloader, we named it DOWNDELPH
(slow clap)
• Simple workflow:
– Downloads a config (.INI file)
– Based on the config, downloads a payload
– Executes payload

• Persistence method: Run registry key

Let The Hunt Begins
2013 DOWNDELPH Sample
Dropper

Helper

Bootkit Installer

DOWNDELPH

Let The Hunt Begins
2013 DOWNDELPH Sample
Dropper

Helper

Bootkit Installer

DOWNDELPH

• Infects BIOS-based systems
• Tested on Windows XP/7, 32bit/64bit
• Never been documented

Not So Boring Component

Bootkit Installation
1ST sector

MBR

First sectors before infection

Legitimate data

Bootkit Installation
1ST sector

2ND sector

Malicious
MBR

Original MBR

Hooks

Driver

(1-byte XOR)

(1-byte XOR)

(1-byte XOR + RC4)

First sectors before infection

Legitimate Data

First sectors after infection

Normal Boot Process
Windows 7 x64
Original MBR

BOOTMGR

Winload.exe

Real Mode

…

Kernel Init

Protected Mode

Infected Boot Process
Windows 7 x64
Infected MBR

BOOTMGR

Original MBR
Real Mode

…

Protected Mode

Kernel Init

Winload.exe

Infected Boot Process
Windows 7 x64
Infected MBR

BOOTMGR

Original MBR
Real Mode

…

Protected Mode

Kernel Init

Winload.exe

Malicious MBR
• Hooks INT 13h handler (low-level read/write
operations)

Malicious MBR
• Hooks INT 13h handler (low-level read/write
operations)

• Patches BOOTMGR in memory

Bootkit Workflow
Infected MBR

BOOTMGR

Original MBR
Real Mode

…

Protected Mode

Kernel Init

Winload.exe

Bootkit Workflow
Infected MBR

BOOTMGR
Hook

Original MBR
Real Mode

…

Protected Mode

Kernel Init

Winload.exe

BOOTMGR Hook
• Searches OslArchTransferToKernel() in
winload.exe to patch it
Before:

After:
kd> u winload!OslArchTransferToKernel
winload!OslArchTransferToKernel:
00000000`003381f0 e961fdd5ff
jmp

00000000`00097f56

Bootkit Workflow
Infected MBR

BOOTMGR
Hook

Original MBR
Real Mode

…

Protected Mode

Kernel Init

Winload.exe

Bootkit Workflow
Infected MBR

BOOTMGR
Hook

Original MBR
Real Mode

…

Protected Mode

Kernel Init

Winload.exe
Hook

Winload.exe Hook
• Locates MmMapIoSpace

• Saves some code in ACPI.sys resources section
(and makes the section executable)
• Hooks ACPI!GsDriverEntry

Saving Important Information
Bootkit physical address
0: kd> db rbx $$ kernel header address
4d 5a 90 00 03 00 00 00-04 00 00 00 ff ff 00 00
b8 00 00 00 00 00 00 00-40 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00-00 00 00 00 f8 00 00 00
00 74 09 00 00 b4 09 cd-21 b8 01 4c cd 21 54 68
69 73 20 70 72 6f 67 72-61 6d 20 63 61 6e 6e 6f
74 20 62 65 20 72 75 6e-20 69 6e 20 44 4f 53 20
6d 6f 64 65 2e 0d 0d 0a-24 00 00 00 00 00 00 00
8a 4a 9e 90 ce 2b f0 c3-ce 2b f0 c3 ce 2b f0 c3
c7 53 73 c3 aa 2b f0 c3-c7 53 63 c3 c5 2b f0 c3
ce 2b f1 c3 a2 2b c0 97-8f 00 00 f8 ff ff 30 fc
04 00 f2 0f 00 00 48 83-ec 28 4c c3 d4 2b f0 c3
c7 53 62 c3 cf 2b f0 c3-c7 53 64 c3 cf 2b f0 c3
c7 53 61 c3 20 cd a2 02-00 f8 ff ff ce 2b f0 c3
00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00-50 45 00 00 64 86 18 00

MmMapIoSpace address

MZ..............
........@.......
................
................
.t......!..L.!Th
is program canno
t be run in DOS
mode....$.......
.J...+...+...+..
.Ss..+...Sc..+..
.+...+........0.
......H..(L..+..
.Sb..+...Sd..+..
.Sa. ........+..
................
........PE..d...

ACPI!GsDriverEntry original
opcodes

Bootkit Workflow
Infected MBR

Original MBR

BOOTMGR
Hook

Winload.exe
Hook

ACPI.sys

Real Mode

…

Kernel Init
Protected Mode

Bootkit Workflow
Infected MBR

Original MBR
Real Mode

BOOTMGR
Hook

Winload.exe
Hook

ACPI.sys
Hook

…

Kernel Init
Protected Mode

ACPI.sys Hook
• Restores ACPI!GsDriverEntry
• Maps the bootkit physical address into virtual
address space by calling MmMapIoSpace
• Decrypts hidden driver

Bootkit Workflow
Infected MBR

BOOTMGR
Hook

Original MBR

ACPI.sys
Hook

Real Mode

DOWNDELPH

Winload.exe
Hook

“Bootkit
user-mode
component”

Bootkit Driver

Kernel Init
Protected Mode

Bootkit Workflow
Infected MBR

BOOTMGR
Hook

Original MBR

ACPI.sys
Hook

Real Mode

DOWNDELPH

Winload.exe
Hook

“Bootkit
user-mode
component”

Bootkit Driver

Kernel Init
Protected Mode

Bootkit Workflow
Infected MBR

BOOTMGR
Hook

Original MBR

ACPI.sys
Hook

Real Mode

DOWNDELPH

Winload.exe
Hook

“Bootkit
user-mode
component”

Bootkit Driver

Kernel Init
Protected Mode

Bootkit Workflow
Infected MBR

BOOTMGR
Hook

Original MBR

Winload.exe
Hook

ACPI.sys
Hook

Real Mode
“Bootkit
user-mode
component”

Bootkit Driver

Why a DLL to load another DLL ?

Kernel Init

DOWNDELPH

Protected Mode

Who Are You Bootkit?
• Missing exported variable in DOWNDELPH

Who Are You Bootkit?
• Missing exported variable in DOWNDELPH

• Code sharing with BlackEnergy
– Relocations fixing
– DLL injection calling three exports (“Entry”,
“ep_data” and “Dummy”)
–…

But It’s Not The End of The Story
2014 DOWNDELPH Samples

Dropper

Helper

Kernel Mode
Rootkit

DOWNDELPH

Not So Boring Component++

Kernel Mode Rootkit (1)
• Registered as a Windows service
• Injects DOWNDELPH into explorer.exe (APC)
• Hides files, folders and registry keys
• Relies on a set of rules:
HIDEDRV: >>>>>>>>Hide rules>>>>>>>> rules
HIDEDRV: File rules: \Device\[…]\dnscli1.dll
HIDEDRV: File rules: \Device\[…]\FsFlt.sys
HIDEDRV: Registry rules: \REGISTRY\[…]\FsFlt
HIDEDRV: Registry rules: \REGISTRY\[…]\FsFlt
HIDEDRV: Registry rules: \REGISTRY\[…]\FsFlt
HIDEDRV: Inject dll: C:\Windows\system32\mypathcom\dnscli1.dll
HIDEDRV: Folder rules: \Device\HarddiskVolume1\Windows\system32\mypathcom
HIDEDRV: <<<<<<<<XXXXX<<<<<<<< rules
HIDEDRV: <<<<<<<<Hide rules<<<<<<<< rules

Kernel Mode Rootkit (2)
How It Works

• Two implementations of the hiding ability:
– SSDT hooking
– Minifilter driver

Implementation Minifilter

Implementation Minifilter

Implementation Minifilter

Implementation Minifilter

Who Are You Rootkit?
• Never documented (to the best of our
knowledge)
• PDB paths:
d:\!work\etc\hi\Bin\Debug\win7\x86\fsflt.pdb
d:\!work\etc\hideinstaller_kis2013\Bin\Debug\win7\x64\fsflt.pdb
d:\new\hideinstaller\Bin\Debug\wxp\x86\fsflt.pdb

Who Are You Rootkit?
• Never documented (to the best of our
knowledge)
• PDB paths:
d:\!work\etc\hi\Bin\Debug\win7\x86\fsflt.pdb
d:\!work\etc\hideinstaller_kis2013\Bin\Debug\win7\x64\fsflt.pdb
d:\new\hideinstaller\Bin\Debug\wxp\x86\fsflt.pdb

Who Are You Rootkit?
• Never documented (to the best of our
knowledge)
• PDB paths:
d:\!work\etc\hi\Bin\Debug\win7\x86\fsflt.pdb
d:\!work\etc\hideinstaller_kis2013\Bin\Debug\win7\x64\fsflt.pdb
d:\new\hideinstaller\Bin\Debug\wxp\x86\fsflt.pdb

To Summarize
• Seven different samples (!) of DOWNDELPH over
the past three years
• One C&C server was up for two years
• Persistence methods:
– Bootkit able to infect from Windows XP to Windows 7
– Rootkit

• So, WHY such advanced persistence methods for
such a simple component?
• DOWNDELPH downloaded SEDRECO + XAGENT in
a few cases, so SEDNIT related for sure

SPECULATIVE MUMBLINGS

116

Call For Speculation
• The diversity of Sednit software is impressive
(DOWNDELPH, bootkit, XAGENT, SEDKIT…)
• Diversity is good for their operations, as it
makes detection and tracking harder
• How did they
ecosystem?

created

this

software

117

Sednit Development Process (1)
Developers Role

• Binaries are often compiled specifically for a
target, after it has been infected

XAGENT SMTP logins/passwords

118

Sednit Development Process (1)
Developers Role

• Binaries are often compiled specifically for a
target, after it has been infected

XAGENT SMTP logins/passwords

• Main

software

evolve

regularly

(XTUNNEL,

SEDUPLOADER, XAGENT…)

118

Sednit Development Process (1)
Developers Role

• Binaries are often compiled specifically for a
target, after it has been infected

XAGENT SMTP logins/passwords

• Main

software

evolve

regularly

(XTUNNEL,

SEDUPLOADER, XAGENT…)

Developers are part of the team,
not outsiders paid for a one-time job
118

Sednit Development Process (2)
Software Design

• Different Sednit
techniques:

software

share

some

– RC4 keys built as concatenation of a hardcoded
value and a randomly generated value
(XAGENT, DOWNDELPH, SEDUPLOADER)

– Hardcoded “tokens” in network messages
(XAGENT, SEDUPLOADER, SEDRECO)

119

Sednit Development Process (2)
Software Design

• Different Sednit
techniques:

software

share

some

– RC4 keys built as concatenation of a hardcoded
value and a randomly generated value
(XAGENT, DOWNDELPH, SEDUPLOADER)

– Hardcoded “tokens” in network messages
(XAGENT, SEDUPLOADER, SEDRECO)

The same developers may be
behind this variety of software
119

Sednit Development Process (3)
Programming Errors

Linux XAGENT
Communications termination

120

Sednit Development Process (3)
Programming Errors

Linux XAGENT
Communications termination

120

Sednit Development Process (3)
Programming Errors

Linux XAGENT
Communications termination

120

Sednit Development Process (3)
Programming Errors

Linux XAGENT
Communications termination

120

Sednit Development Process (3)
Programming Errors

XTUNNEL report message

121

Sednit Development Process (3)
Programming Errors

XTUNNEL report message

Developers do not have a code
review process (“hackish” feeling)
121

Sednit Development Process (4)
Seeking Inspiration

• SEDUPLOADER employed novel persistence
methods also found in crimeware, and shares
code with Carberp
• DOWNDELPH bootkit code bears
similarities with BlackEnergy code

some

122

Sednit Development Process (4)
Seeking Inspiration

• SEDUPLOADER employed novel persistence
methods also found in crimeware, and shares
code with Carberp
• DOWNDELPH bootkit code bears
similarities with BlackEnergy code

some

Developers have ties with the
crimeware underground
122

Sednit Development Process (5)
Having Fun

123

Sednit Development Process (5)
Having Fun

Developers are not working in a
formal environment…
123

Mumblings Summary
Sednit has some in-house skilled developers,
working with little supervision, and those guys
have ties with crimeware underground

124

Conclusion
• Sednit activity increased a lot during the last
two years (targeted attacks with a LOT of
targets)
– Heard about the DNC hack last week?

• Sednit toolkit in constant evolution, moar fun
to come!

125

That’s All Folks!
• Feel free to poke us:
{calvet,campos,dupuy} .at. esetlabs.com

• Whitepaper coming soon!...
(“dans deux mois”)

126