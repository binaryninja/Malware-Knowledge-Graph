Introducing DevOpt: A Multifunctional Backdoor Arsenal
zscaler.com/blogs/security-research/introducing-devopt-multifunctional-backdoor-arsenal

Summary
In recent years, malware attacks have become increasingly sophisticated, and attackers are
always finding new ways to exploit vulnerabilities and steal sensitive data. To stay ahead of
these threats, security researchers must constantly monitor the landscape and identify new
threats as they emerge. In this article, we'll take a closer look at the findings of a recent
study conducted by Zscaler's ThreatLabz team, which uncovered a new backdoor built
using Free Pascal that has the ability to steal data from infected systems. We'll explore the
techniques used by this malware, as well as the tactics employed by cybercriminals to
entice users into downloading malicious payloads. By understanding these threats, we can
take steps to protect ourselves and our systems from the dangers of malware attacks.

Introduction
Zscaler ThreatLabz has recently unearthed a new backdoor called 'Devopt'. It utilizes hardcoded names for persistence and offers several functionalities, including keylogging,
stealing browser credentials, clipper, and more. Multiple versions of the backdoor have
surfaced in just the last few days, indicating that it is still in development. In this blog post,
we will delve into the specifics of this new backdoor and its workings. Additionally, we will
offer tips on how to safeguard yourself against such attacks.

Key Takeaways:
Zscaler ThreatLabz uncovered a new backdoor and named it DevOpt based on the
name of the persistence malware
Discovered on a Russian website promising monetary rewards, victims are lured into
downloading malicious payloads containing DevOpt malware
The malware is currently still in development and is receiving continous improvement
updates designed to make it a more potent and effective tool for attackers and threat
for defenders
DevOpt has advanced capabilities to function as a keylogger, stealer, grabber, and a
clipper along with persistence mechanisms.

Campaign:

1/14

While on the hunt for new malware, the ThreatLabz research team at Zscaler came across
a newly discovered backdoor that was created using Free Pascal. This backdoor is
particularly dangerous as it has the ability to steal data from infected systems.
Zscaler's ThreatLabz research team remains vigilant in tracking new malware threats.
During a recent investigation, we discovered a backdoor that uses Free Pascal and is
capable of stealing data from infected systems. Additionally, we came across a Russian
website where users were offered financial rewards for completing a task that unwittingly
involved downloading malware. Further analysis revealed that the downloaded malware
had an archive icon, giving the impression of a compressed file and luring users into
double-clicking it, which then executed the malware. This discovery underscores the
lengths to which cybercriminals will go to lure users into downloading malicious payloads,
using tactics such as offering financial incentives. It's worth noting that the malware's
downloading URL pattern generally follows this structure: wdfilesdownload[.]siteme[.]org/arxiv[digit].exe.

Fig 1. - Russian Website(Translated to english) enticing users into downloading malicious
payloads.

Technical Analysis:
Two versions of the backdoor have been discovered in the development stage. The first
version, which lacks obfuscation to hide its strings, is roughly 20 MB in size and contains a
Graphic User Interface not found in the newer variant, which is approximately 2 MB in size.
The second version uses encoded integer-based strings for its functionality.
The older version uses plain text HTTP protocol, while the newer variant searches for
OpenSSH DLLs in the infected system to establish encrypted HTTPS connections to its
command and control. To establish network connections, the backdoor requires several

2/14

DLLs: libcrypto-1_1.dll, libeay32.dll, libssl-1_1.dll, libssl32.dll, and ssleay32.dll. If the
malware is unable to locate these DLLs, it becomes inactive and will not infect the system
further.
Encoded String

Decoded Strings

Description

5494-4756-75446970-9430-82829348-9430-7544

C:\\Users\\

String to
access
infected
system Users
Directory

7544-5576-82829430-8774-95129102-9184-7544

\\Desktop\\

String to
access
infected
system
Desktop
Directory

7544-5576-91028118-9594-89388282-9020-95129430-7544

\\Documents\\

String to
access
infected
system
Documents
Directory

7544-5576-91029758-9020-88569102-7954-82009430-7544

\\Downloads\\

String to
access
Infected
system
Downloads
Directory

8200-8282-96769102-9184-95123444-3772-82829840-8282

devopt*.exe

Create a copy
of itself in the
Startup folder
with
devopt(random
2 digit).exe
name.

3/14

7544-7134-86109020-8774-82829922-6068-82829512-3772-86109020-8610

\\WinkeyJet.ini

Create
configuration
file with
WinkeyJet.ini
name.

8528-9512-95129184-9430-47563854-3854-89389676-8200-36908774-3690-95129594-8856-79543772-9430-86109512-8282-89388282-3772-91029348-8446-3854

https[:]//mvd-k-tula[.]siteme[.]org/

Command and
Control
domain.

7544-5330-91849184-5576-79549512-7954-75446724-9102-79548938-8610-90208446-7544-63148610-8118-93489102-9430-91028364-9512-75447134-8610-90208200-9102-97589430-7544-68069512-7954-93489512-2624-63148282-9020-95947544-6560-93489102-8446-93487954-8938-94307544-6806-95127954-9348-95129594-9184-7544

\\AppData\\Roaming\\Microsoft\\Windows\\Start
Menu\\Programs\\Startup\\

Startup
directory path.

4/14

6314-9102-100048610-8856-88567954-3854-43463772-3936-26243280-7134-86109020-8200-91029758-9430-26246396-6888-26244428-3772-41004838-2624-93489676-4756-40183936-4264-37723936-3362-26245822-8282-81188774-9102-38544100-3936-40183936-3936-40183936-4018-26245740-8610-93488282-8364-91029840-3854-40183936-4264-3772-3936

Mozilla/5.0 (Windows NT 6.2; rv:104.0)
Gecko/20100101 Firefox/104.0

User Agent
used for
network
requests.

8856-8610-94309512-8282-90208282-9348-37729184-8528-9184

listener.php

Send collected
data as
listener.php

The earlier version of the backdoor required user interaction by clicking on the Extract
button, whereas newer versions run silently in the background without any need for user
interaction.

Fig 2. - Earlier version of malware requiring user interaction
Based on the aforementioned observation, it can be concluded that the Threat Actor is
adding more features to the backdoor and making it stealthier.

Additional Analysis:
After analyzing the malware, our observations revealed that it contains numerous
capabilities. The following functionalities were observed:

5/14

Persistence:
Persistence refers to a malware's capability to remain active on a system even after a
reboot or shutdown. This can be achieved by adding entries to the Windows Registry or by
creating scheduled tasks. Once a malware establishes persistence, it can continue to
operate in the background and carry out malicious activities undetected by the user.
Upon closer observation, researchers noticed that the malware replicated itself in the
Startup folder, enabling it to initiate automatically whenever the computer is powered on.
Further observations of different versions revealed that it duplicates itself with a name
devopt[random 2 digits].exe under the following path:
C:\Users\User\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup.

Fig 3. - Persistence mechanism

Clipper:
A clipper malware is created to pilfer confidential data from victims. Once it is installed on a
victim's device, it can record the clipboard data, which can potentially be used to steal other
sensitive information like login credentials, credit card numbers, or other financial data.
Researchers noticed that the malware generates a file called 'clippa.dan' in the C:\User\
[User] directory, which logs all the information copied to the clipboard.

Fig 4. - Clipper logging data from the system

Stealer:
A stealer malware is created to pilfer sensitive information, such as login credentials, credit
card details, and other personal data. Once it is installed on a victim's device, it can monitor
the user's activity and steal sensitive information.
The malware generates two files, namely 'cdck.bin' and 'bdck.bin,' in the C:\User\[User]
directory, which steal the credentials, cookies, history, and version information of the two
specific browsers, respectively.
1. Chrome browser data collected from infected system:
[C:\Users\User\AppData\Local\Google\Chrome\User Data\Default\Network\Cookies]

6/14

[C:\Users\User\AppData\Local\Google\Chrome\User Data\Default\History]
[C:\Users\User\AppData\Local\Google\Chrome\User Data\Default\Login Data]
[C:\Users\User\AppData\Local\Google\Chrome\User Data\Last Version]
2. Yandex data collected from infected system:
[C:\Users\User\AppData\Local\Yandex\YandexBrowser\User
Data\Default\Network\Cookies]
[C:\Users\User\AppData\Local\Yandex\YandexBrowser\User
Data\Default\Network\History]
[C:\Users\User\AppData\Local\Yandex\YandexBrowser\User Data\Default\Ya
Passman Data]
[C:\Users\User\AppData\Local\Yandex\YandexBrowser\User Data\Default\Ya Autofill
Data]

Keylogger:
Keylogger malware is specifically designed to capture every keystroke made by a user on
their device. This can be used to steal sensitive information like login credentials, credit
card details, and other personal data.
In this case, the malware creates a file named ‘Kebba.dan’ in the C:\User\[User] directory
to log the keystrokes of the user.

Fig 5. - Keylogger logging keystrokes

Grabber:

7/14

Fig 6. - Grabber enumerating the Directories for stealing file contents
Grabber malware is created to illicitly obtain files and other data from an infected device. It
targets text, Word, Excel, and RTF files stored in the Document, Download, or Desktop
directories, and saves the stolen data in a file named “grb.bin” located at C:\User\[User]
directory.

Fig 7. - Grabber File contents stealing data

Dropped text file
In previous versions of this backdoor, researchers observed that it drops a file called
‘unpacked.dt’ in the ‘data’ folder of the current directory. This file is likely designed to
confuse malware analysts because it appears to be an encoded malicious payload, but in
reality, it contains randomly generated alphanumeric strings. In newer versions of the
backdoor, a similar file named ‘0.txt’ is dropped in the current directory, which contains
random strings that are hardcoded into the malware itself.

8/14

Fig 8. - Generating random alphanumeric strings for unpacked.dt file

Configuration File:
The researchers noted the presence of a configuration file named "Winkeyjet.ini" that was
dropped in the Users directory. This file contains information about the compromised
system, such as the name of the operating system, a unique Device_ID, and the version
number (Version) that represents the major version information of the compromised
system. Additionally, the file includes the malware's hardcoded own version (OwnVer). The
configuration file also specifies the Command and Control (CnC) server, which is
responsible for providing instructions to the malware once it has been successfully installed.

Fig 9. - Configuration file generated recording the device and version information

Additional investigation has uncovered that certain malwares that are still in the early stages
of development are displaying a message box that contains the text "putin Xyilo", which is
a slogan that ridicules Russian President Vladimir Putin.
9/14

Fig 10. - Msgbox displayed in underdeveloped versions of malware

Network Communication:
Establishing a connection with the Command and Control (CnC) starts with the malware
sending a "create" request. Upon recognizing the request, the CnC responds with a "200
OK" message.
After establishing the connection, the malware sends a command request to the CnC,
which in turn responds with a SYNC command. Upon receiving the SYNC command, the
malware executes the given command and sends a "SYNCRONIZED" response back to the
CnC to indicate successful completion.

Fig 11. - Network communication steps

Commands:
Below are the encoded string commands used by the observed malware:
Encoded
String

Decoded
Strings

Description

10/14

6806729863965494

SYNC

Command to check connection between CnC and Malware. We
observed in some variants malware send the ‘SYNCRONIZED’
response along with the version of the malware.

557659866724

DIR

Command to collect file information of the given directory. It can
collect file name, directory name, size and modified date.

656069706888

PUT

Command to write collected information in file. It will give the
response ‘HAD WRITTEN’ if the file is already present else ‘NOT
WRITTEN’.

6724565853305576

READ

Command to read collected information from stored files and
send data to CnC.

5658721656585494

EXEC

To execute commands sent from CnC and after successful
execution it sends ‘EXECUTED’ response.

5576672462326806

DRLS

Command to collect Drive information (HDD, CDROM,
RAMDISK, Network and Removable) of the infected system.

6560672462326806

PRLS

Command to collect the Process list of infected systems.

The previous version of the malware did not include the DRLS and PRLS commands for
gathering drive and process information, respectively.

Conclusion
Based on the observations made during the malware analysis, it is evident that the malware
in question is a sophisticated and multifunctional threat. The malware is capable of
performing various malicious activities such as stealing confidential information, logging
keystrokes, stealing files, and establishing persistent access to the victim's system.

11/14

It is also evident that the threat actor behind the malware is continuously improving the
malware by adding new features, making it stealthier, and using various techniques to
evade detection. The malware uses encoded strings for its commands and drops files with
misleading names to deceive malware analysts.
Furthermore, the malware communicates with a Command and Control server to receive
instructions and send stolen data. The server's IP address and other details are hardcoded
into the malware.
Overall, the findings highlight the need for robust security measures to protect against
advanced and evolving malware threats. It also emphasizes the importance of regular
updates and security patches to mitigate the risks associated with these threats.
As cyber threats continue to evolve and become increasingly complex, it is critical to remain
alert and take proactive measures to protect against them. The discovery of this new
backdoor is a testament to the ever-changing tactics of attackers and underscores the
importance of ongoing monitoring and research. Zscaler's ThreatLabz team is dedicated to
staying on top of these threats and sharing their findings with the wider community. It is
essential to stay informed and take necessary precautions to safeguard against malware
attacks. Remember to keep your software up-to-date, use strong passwords, and be wary
of suspicious emails or messages.

Zscaler Sandbox Coverage
Zscaler's multilayered cloud security platform detects indicators, as shown below:

12/14

Fig 12. - DevOpt Backdoor Zscaler sandbox report
The following threat names are detected by Zscaler's multilayered cloud security platform
for identifying malicious payloads:
Win32.Backdoor.DevOpt

MITRE ATT&CK Techniques:
Tactic

Technique ID

Technique Name

Execution

T1129

Shared Modules

Defense Evasion

T1027

Obfuscated Files or Information

Persistence

T1037.005
T1547.001

Startup Items
Registry Run Keys / Startup Folder

13/14

Discovery

Collection

T1057

Process Discovery

T1082

System Information Discovery

T1083

File and Directory Discovery

T1005
T1115

Data from Local System
Clipboard Data

Credential Access

Command and Control

T1003

OS Credential Dumping

T1555.003

Credentials from Web Browsers

T1539

Steal Web Session Cookie

T1056.001

Keylogging

T1095

Non-Application Layer Protocol

T1071

Application Layer Protocol

Indicators of Compromise (IOCs):
db14d40d780853f80b93e21e92617680

Old Variant

94df2e4aa0f432ef992893d7b994ce84
391c894616dd0e8b372b801cbbc0a790

New Variant

e42198e7c0647238b999a2b2133daac2
mvd-k-tula[.]siteme[.]org

Command and Control Domain

mvd-k-tula[.]ru
wdfiles-download[.]siteme[.]org/arxiv5.exe

Malicious Source Url used for distribution

14/14