Trend Micro Incorporated
Research Paper
2012

Detecting APT
Activity with Network
Traffic Analysis

Nart Villeneuve and
James Bennett

Contents
About This Paper................................................................................................................................... 1
Introduction............................................................................................................................................ 1
Detecting Remote Access Trojans.................................................................................................... 3
GhostNet......................................................................................................................................... 3
Nitro and RSA Breach..................................................................................................................4
Detecting Ongoing Campaigns.......................................................................................................... 5
Taidoor............................................................................................................................................. 5
IXESHE............................................................................................................................................. 5
Enfal aka Lurid............................................................................................................................... 6
Sykipot............................................................................................................................................. 7
Will Adversaries Adapt?......................................................................................................................8
Network-Based Detection Challenges..............................................................................................8
Trojan.Gmail....................................................................................................................................8
Trojan.Gtalk..................................................................................................................................... 9
Conclusion..............................................................................................................................................11
Trend Micro™ Deep Discovery in Focus..........................................................................................12
How Deep Discovery Works.......................................................................................................12
What Deep Discovery Detects...................................................................................................13

PAGE ii | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

About This Paper

Introduction

Today’s successful targeted attacks use a combination
of social engineering, malware, and backdoor activities.
This research paper will discuss how advanced detection
techniques can be used to identify malware command-andcontrol (C&C) communications related to these attacks,
illustrating how even the most high-profile and successful
attacks of the past few years could have been discovered.

Targeted attacks or what have come to be known as
“advanced persistent threats (APTs)” are extremely
successful. However, instead of focusing on the attack
methods and effects to improve network defenses, many
seem more concerned with debating whether they are
“advanced” or not from a technical perspective. On one
hand, some believe that the threat actors behind these
campaigns have mythical capabilities both in terms of
operational security and the exploits and malware tools
they use. In fact, they do not always use zero-day exploits
and often use older exploits and simple malware. Some,
on the other hand, view the threats as pure hype conjured
up by marketing departments even though they cannot
explain why high-value targets worldwide suffer from
repeated, successful, and long-term compromises.

Trend Micro™ Deep Discovery advanced
threat protection solution utilizes the
techniques described in this paper and
many more to detect malware and attacker
activities undetectable by conventional
security solutions. See details in the final
section.

While initial reports had a tendency to treat the cyberespionage networks they uncovered as an “attack” or a
“singular set of events,” it is becoming increasingly clear
that most targeted attacks are in fact part of ongoing
campaigns. They are consistent espionage campaigns—a
series of failed and successful attempts to compromise a
target over time—that aim to establish persistent, covert
presence in a target network so that information can be
extracted as needed. Careful monitoring and investigation
can help security researchers learn from the mistakes
attackers make, allowing us to get a glimpse into malicious
operations. In fact, we can track campaigns over time
by relying on a combination of technical and contextual
indicators. This paper focuses on using this threat
intelligence to detect APT activity with network traffic
analysis.

PAGE 1 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

While new executable files that cannot be detected
without new file signatures can be routinely created with
automated builders and embedded in documents designed
to exploit vulnerabilities in popular office software, the
traffic malware generated when communicating with a
C&C server tends to remain consistent.1 This is likely due
in part to the considerable amount of effort required to
change a C&C protocol, including code changes in both
the malware and C&C server. By increasing awareness,
visibility, and information sharing, however, details of
these campaigns are beginning to emerge. A significant
portion of these ongoing campaigns can be consistently
detected with the aid of network indicators. While
detecting this kind of traffic requires prior knowledge
or threat intelligence, network detection can effectively
defend against known threats. Network traffic can also
be correlated with other indicators in order to provide
proactive detection.2 In addition, proactive detection of
unknown threats can be further extended by extrapolating
methods and characteristics from known threat
communication behaviors to derive more generic and
aggressive indicators.

In fact, most of the campaigns documented in highly
publicized reports, including GhostNet and Nitro, and the
RSA breach, employed malware with consistent indicators
that can be routinely detected by analyzing the network
traffic produced as they communicate with C&C servers.
Moreover, activity related to other less-known but longrunning campaigns such as Taidoor, IXESHE, Enfal (aka
“Lurid”), and Sykipot can also be consistently detected at
the network level.
Despite being widely known and easy to detect, the
malware used in these campaigns continue to effectively
compromise targets worldwide. This paper reviews
several such cases and describes the network detection
techniques that can uncover them.

Although some APT activities will continue to leverage
never-before-seen malware, a significant number of
ongoing APT campaigns can still be consistently detected
with network indicators. While C&C domain names and
IP addresses will continue to change, making it difficult
to maintain a defense posture by blocking them alone,
network patterns are less subject to change.3

1

http://www.joestewart.org/csc07/defending-against-data-exfiltratingmalware.odp
2 http://www.sans.edu/student-files/projects/JWP-Binde-McReeOConnor.pdf
3 Some techniques for building intelligence around IP addresses (found
in common ranges) and domain names (co-hosting on the same IP
address, registered by the same email address) exist but those are
beyond the scope of this research paper.
PAGE 2 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

Detecting Remote Access Trojans
GhostNet
The GhostNet C&C infrastructure was active in 2007 but
was terminated after it was publicly disclosed in 2009.4
The “Tracking GhostNet” report documented successful
intrusions into diplomatic entities worldwide, along with
the Dalai Lama’s office, international organizations, and
news media. The GhostNet campaign involved two malware
components. The first-stage malware was dropped by
malicious documents and connected to C&C servers via
HTTP on port 80. While the malware accessed a variety
of C&C servers, it also used specific and consistent URL
parameters that can be detected.

Figure 1: PHP version of a GhostNet request to a C&C server

Figure 2: ASP version of a GhostNet request to a C&C server

Details describing how the GhostNet malware operated
were published twice in 2008.5 Simple pattern matching
of URL paths within network traffic would have detected
the malware beaconing to a C&C server. While the
significance of this malware was not fully understood until
the entire cyber-espionage network was exposed, it is
understandable that creating intrusion detection system
(IDS) rules based on such paths was probably not a high
priority for defenders at that time.

Figure 3: Gh0st RAT, the second-stage malware used by the
GhostNet attackers

IDS rules to detect Gh0st RAT have been in existence
since at least 2008 and continue to be widely used.7 In
fact, the payload of a recent attack that delivered a Java
exploit (i.e., CVE-2012-0507) through strategic website
compromises, including human rights sites, was Gh0st
RAT.8 While this attack maintained the signature “Gh0st”
header, other attacks leveraged a modified Gh0st RAT.
A variant in which the “Gh0st” header has been replaced
with “LURK0” was recently used in targeted attacks.9
Despite the modifications, however, Gh0st RAT can
still be consistently detected via the presence of the
five-character header followed 8 bytes later by a zlib
compression header. In addition, since ports 80 and
443 are often used for Gh0st RAT traffic protocol-aware
detection, triggering an alert if the protocol on port 80 is
not HTTP can help detect this kind of traffic.

Deep Discovery can detect the specific
“Gh0st” and “LURK0” headers as well as
generically detect this kind of communication
by following the previously mentioned header
structure.

The second-stage malware the GhostNet attackers
deployed was the infamous Gh0st RAT.6 This well-known
remote access Trojan (RAT) produces easily identifiable
network traffic, which started with a “Gh0st” header.

4 http://www.nartv.org/mirror/ghostnet.pdf
5 http://www.datarescue.com/laboratory/trojan2008/index.html
and http://www.wired.com/images_blogs/threatlevel/files/mcafee_
security_journal_fall_2008.pdf
6 http://www.wired.com/images_blogs/threatlevel/files/mcafee_
security_journal_fall_2008.pdf

7 http://www.shadowserver.org/wiki/pmwiki.php/Calendar/20081211
8 http://community.websense.com/blogs/securitylabs/
archive/2012/05/11/amnesty-international-uk-compromised.aspx and
http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategicweb-compromises-trusted-websites-serving-dangerous-results/
9 http://www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.
pdf and http://blogs.norman.com/2011/security-research/invisible-ynka-code-signing-conundrum

PAGE 3 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

Nitro and RSA Breach
The Nitro attacks were documented in an October 2011
report on a series of attacks that began in July 2011
against companies in the chemical and motor sectors
as well as human rights nongovernmental organizations
(NGOs).10 The attacks continued through December 2011
with the attackers actually using the report documenting
their activities as bait.11 The malware used in that case was
PoisonIvy, a widely available RAT.12

Detecting simply based on a request of 256 bytes will
yield false positives. This can, however, be combined
with protocol-aware detection. While the default port for
PoisonIvy is 3460, it is most commonly seen used on ports
80, 443, and 8080 as well. This traffic can generically
be detected by looking for a 256-byte outbound packet
containing mostly non-ASCII data on the ports PoisonIvy
attackers commonly use. This helps reduce false positives
but still broadly covers PoisonIvy variants as long as they
use the said challenge request.

PoisonIvy was also used in the RSA breach albeit by
different actors.13 While the attack against RSA, which was
part of a campaign against many other organizations as
well, leveraged a zero-day Adobe Flash Player vulnerability
delivered via a Microsoft Excel spreadsheet, its ultimate
payload was simply PoisonIvy.14
The network traffic generated by PoisonIvy begins with
256 bytes of seemingly random data after a successful
TCP handshake. These bytes comprise a challenge request
to see if the “client” (i.e., the RAT controller) is configured
with password embedded in the “server” (i.e., the victim).

Figure 5: Most commonly used ports by PoisonIvy samples found
in Japan from 2008 to 2012

Figure 4: 256-byte challenge request from the RSA PoisonIvy
sample

10 http://www.symantec.com/content/en/us/enterprise/media/security_
response/whitepapers/the_nitro_attacks.pdf
11 http://www.symantec.com/connect/blogs/nitro-attackers-have-somegall
12 Ironically, PoisonIvy was found to have vulnerabilities, which were
used to shed light on the operations of certain threat actors (see
https://media.blackhat.com/bh-eu-10/presentations/Dereszowski/
BlackHat-EU-2010-Dereszowski-Targeted-Attacks-slides.pdf).
13 http://blogs.rsa.com/rivner/anatomy-of-an-attack/
14 http://krebsonsecurity.com/2011/10/who-else-was-hit-by-the-rsaattackers/, http://blogs.gartner.com/avivah-litan/2011/04/01/rsasecurid-attack-details-unveiled-they-should-have-known-better, and
http://www.f-secure.com/weblog/archives/00002226.html

As shown in Figure 6, after the challenge response is
received, the client (i.e., controller) then sends 4 bytes
specifying the size of the machine code that it will send.
This value has consistently been “D0 15 00 00” for all
samples we analyzed for this version of PoisonIvy. This
makes a great additional indicator on top of the logic
previously described and significantly increases the
confidence level of the detection.

PAGE 4 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

Detecting Ongoing Campaigns
Taidoor
The Taidoor campaign has been actively engaging in
targeted attacks since at least 2008.16 Taidoor is typically
configured with three hard-coded C&C servers and three
ports. Communication with a C&C server is done over
HTTP. Content is protected using RC4 encryption. The
initial request to a C&C server follows the format, /{5
characters}.php?id={6 random numbers}{12 characters}.

Figure 6: Initial communication between a PoisonIvy server and
client

PoisonIvy also makes use of “keep-alive” requests that
are 48 bytes long. These requests appear to be always of
the same length but their content differed depending on
the “password” with which the PosionIvy client/server is
configured. The default password, “admin,” is consistently
detected.15

Figure 8: Taidoor network traffic

The last set of 12 characters refers to the victim’s MAC
address, which is encrypted using a custom algorithm that
basically increases the values in the address by 1. This
is also used as encryption key. Taidoor traffic has been
consistent since 2008 and is easily detectable.

Deep Discovery detects this communication
as previously specified.
Figure 7: 48-byte keep-alive request from the RSA PoisonIvy
sample

Deep Discovery takes all of the
aforementioned approaches to generic and
specific PoisonIvy detection, assigning the
appropriate severity rating depending on the
confidence level of the detection.
RATs such as Gh0st and PoisonIvy are widely available
and frequently used by APT actors but the traffic these
produce is easily detectable. In the Nitro and RSA cases,
the traffic was standard and easily detectable. These
attacks were, however, extremely successful.

15 A variety of IDS rules available from http://emergingthreats.net/
covers various PoisonIvy keep-alive requests, including the default
admin request.

IXESHE
The IXESHE campaign has been active since at
least 2009.17 Upon installation, the malware starts
communicating with one of three C&C servers that can
be configured via three ports, usually 80, 443, and 8080.
Network communications transpire over HTTP and follow
the format, /AWS[Numbers].jsp?[Custom Base64 Blob]. A
custom Base64 alphabet is used to encode content.

Figure 9: IXESHE network traffic
16 http://www.symantec.com/content/en/us/enterprise/media/
security_response/whitepapers/trojan_taidoor-targeting_think_tanks.
pdf and http://www.trendmicro.com/cloud-content/us/pdfs/securityintelligence/white-papers/wp_the_taidoor_campaign.pdf
17 http://www.trendmicro.com/cloud-content/us/pdfs/securityintelligence/white-papers/wp_ixeshe.pdf

PAGE 5 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

Another instance of malware that is very similar to
that used in the IXESHE campaign was used in a sister
campaign that produces very similar network traffic
but slightly different file paths—“AES[numbers].jsp,”
“CES[numbers].jsp,” and “DES[numbers].jsp.”

A newer version of the malware connects in a similar way,
/cgi-bin/CMS_SubitAll.cgi.

Figure 10: IXESHE AES network traffic

Figure 12: New Enfal variant’s network traffic that posts the
victim’s details to the C&C server

In some cases, compromised servers are hosted on target
organizations’ networks after successful infiltration. This
means that network defenses placed at the perimeter
will not detect standard IXESHE network traffic because
communication occurs internally. The attackers can
communicate through an alternate means with the
internal C&C server in order to avoid detection.

In addition, we uncovered samples of the original version
of Enfal that operate in a nearly identical way apart from
using different file paths. In effect, Enfal was simply
modified to connect to different file paths on the C&C
server. Instead of the traditional POST request to /cg[a-z]bin/Owpq4.cgi, these samples access /8jwpc/odw3ux.

Deep Discovery can detect both variations
of this communication but deployment and
visibility are factors to consider when dealing
with internally planted C&C servers.

Enfal aka Lurid
Enfal, aka the “Lurid downloader,” has been used in
targeted attacks as far back as 2006 and continues to
actively attack targets worldwide.18 Several versions of
the Enfal malware exist but the communication between a
compromised host and a C&C server remains consistent.
Older but still active versions of the malware make several
consistent requests, including /cg[a-z]-bin/Owpq4.cgi.

Figure 13: Original Enfal variant’s network traffic that posts the
victim’s details to the C&C server

Enfal, however, makes more than one connection to the
C&C server. It also polls a file to see if any command has
been specified. Consistencies in Enfal’s connection to
the C&C server in order to receive commands, however,
continue to allow detection of the malware’s network
traffic.

Figure 14: Enfal network traffic that checks if commands have
been specified
Figure 11: Enfal network traffic that posts the victim’s details to
the C&C server

18 http://www.trendmicro.com/cloud-content/us/pdfs/securityintelligence/white-papers/wp_dissecting-lurid-apt.pdf, http://www.
secureworks.com/research/threats/sindigoo/, http://events.ccc.de/
congress/2007/Fahrplan/attachments/1008_Crouching_Powerpoint_
Hidden_Trojan_24C3.pdf, http://isc.sans.org/presentations/
SANSFIRE2008-Is_Troy_Burning_Vanhorenbeeck.pdf, http://isc.sans.
edu/diary.html?storyid=4177, http://www.nartv.org/mirror/shadowsin-the-cloud.pdf, http://wikileaks.org/cable/2009/04/09STATE32025.
html, and http://cablesearch.org/cable/view.php?id=08STATE116943

Enfal makes requests for files that contain any command
that the attackers want the compromised computers to
execute.

Figure 15: New Enfal variant’s network traffic that checks if
commands have been specified

PAGE 6 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

These requests can be detected because they follow a
specific format that includes two directories, followed
by the hostname and MAC address of the compromised
computer. This consistent pattern is still detected despite
modifications made to Enfal.

Deep Discovery detects these Enfal
communications using the various methods
previously described as well.

Sykipot
The Sykipot campaign, which has been known by many
names over the years, can be traced back to 2007 and
possibly even 2006.19 The campaign became better
known after the discovery of a zero-day exploit (i.e.,
CVE-2011-2462) targeting U.S. Department of Defense
(DOD) smartcards.20 While older versions of Sykipot
malware communicated with a C&C server over HTTP,
newer versions have been seen using HTTPS, perhaps
because requests made to the C&C server consistently
use the format, /kys_allow_get.asp?name=getkys.kys, and,
therefore, detectable.

In July 2012, new versions of the Sykipot malware were
detected. These connected via HTTPS with a different URL
path documented by Alienvault, GET/get.asp?nm=index.
dat&hnm=[HOSTNAME]-[IP-ADDRESS]-[IDENTIFIER].22
The SSL certificate on the server, however, remained one
that could be detected using an already publicly published
Snort rule.

Deep Discovery specifically detects the
SSL certificate Sykipot malware uses. In
addition, generically detecting suspicious
SSL certificates has proven quite useful at
proactively detecting zero-day malware,
including the recently discovered Gauss
malware. Looking for default, random, or
empty values in SSL certificate fields and
restricting such detections to only certificates
supplied by hosts outside an organization’s
monitored network provides a great balance
of proactive detection with manageable false
positives.

Figure 16: Sykipot network traffic

By 2008, Sykipot malware began communicating over
HTTPS, making them impossible to detect based on URL
path because that content was encrypted. Despite this
transition, however, the malware remained detectable at
the network level due to the use of consistent elements
within the Secure Sockets Layer (SSL) certificate.21

19 http://blog.trendmicro.com/the-sykipot-campaign/
20 http://labs.alienvault.com/labs/index.php/2012/when-the-apt-ownsyour-smart-cards-and-certs/
21 http://labs.alienvault.com/labs/index.php/2011/are-the-sykipotsauthors-obsessed-with-next-generation-us-drones/

22 http://labs.alienvault.com/labs/index.php/2012/sykipot-is-back/

PAGE 7 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

Will Adversaries Adapt?

Network-Based Detection Challenges

There is a consistent need to weigh the risks of revealing
enough information about APT campaigns to alert the
public and allow defenders to take corrective action and
giving the threat actors behind attacks an understanding
of what is known about their operations and the
opportunity to adapt. Information about these campaigns
can be effectively used without pushing threat actors to
adapt and evade detection. They have, for instance, made
the following changes:

Two key factors pose challenges to network-based
detection—encryption and the cloud. The use of SSL
encryption evades detection based on patterns in URL
parameters and HTTP headers. The use of legitimate
services in the cloud, meanwhile, evades attempts to
simply block access to known “bad” locations. Together,
these two factors make detecting APT activity challenging.

• Targeted attacks that have been using Gh0st RAT
utilize modified versions wherein the “Gh0st” header
has been replaced by other five-character strings such
as “LURK0.” This means that IDS rules that only match
the “Gh0st” header can be evaded.
• IXESHE attackers have used internal compromised
machines as C&C servers. This means that network
defenses placed at the perimeter will not detect
standard IXESHE network traffic because such
communication occurs internally.
• Enfal/Lurid users have begun changing the names of
the files on their C&C servers. Generic patterns that
allow for continued detection, however, still work.

The use of these techniques is certainly not new. Such
techniques have been extensively used in typical criminal
operations. In the past, Twitter, Tumblr, Google Apps,
Google Groups, and Facebook have all been used as
malware C&C channels.23 It is not surprising, therefore,
that APT attackers have also been using such services as
C&C channels.

Trojan.Gmail
In October 2010, contagiodump.blogspot.com posted a
sample of a targeted attack that leveraged a conference
on nuclear issues in South Korea.24 The email from a
spoofed email address associated with the conference had
a malicious PDF attachment.

• Sykipot users have switched from utilizing HTTP to
encrypted HTTPS communications. This means that
pattern matching based on the consistent URL path
Sykipot uses can be evaded. Newer versions of Sykipot
malware have also been seen using different URL
paths.
Although there have been some minor variations, the APT
campaigns and malware discussed in this paper have been
largely consistent over a number of years despite detailed
accounts in a variety of papers and reports. The changes
that have been made do affect network-based detection
but indicators that work despite these changes still exist,
albeit the possibility of generating more false positives.
Continued monitoring of these campaigns, however,
provides threat intelligence that can be effectively used to
begin detecting the modifications made by the attackers.

23 http://asert.arbornetworks.com/2009/08/twitter-based-botnetcommand-channel, http://asert.arbornetworks.com/2009/11/maliciousgoogle-appengine-used-as-a-cnc, http://blog.unmaskparasites.
com/2009/11/11/hackers-use-twitter-api-to-trigger-malicious-scripts,
http://www.symantec.com/connect/blogs/trojanwhitewell-what-syour-bot-facebook-status-today, and http://www.symantec.com/
connect/blogs/google-groups-trojan
24 http://contagiodump.blogspot.ca/2010/10/oct-08-cve-2010-2883-pdfnuclear.html

PAGE 8 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

After execution, the malware logs in to a Gmail account
using the information supplied in syschk.ocx. The traffic
between the compromised computer and Gmail is SSLencrypted on port 443. This means that at the network
level, one can only observe encrypted traffic between the
host and Google’s servers.

Figure 17: Targeted email attack sample posted on contagiodump.
blogspot.com

The PDF attachment exploits an Adobe Reader
vulnerability (i.e., CVE-2010-2883) and drops a piece of
malware onto the target’s system that then creates two
files, namely:

Using Burp Proxy, however, one can analyze traffic
between the malware and Gmail. The malware logs in to
the Gmail account and sends an email whose content is
encrypted to another Gmail address. The content appears
to be the same as that of the file, form.ocx, which contains
a unique ID the malware assigns, the hostname and IP
address, the default home page of the default browser,
and a list of the programs installed in the computer. It then
connects to fuechei.chang.drivehq.com and downloads an
additional file called “rename.ocx,” which then renames
syschk.ocx to syschk.ocx1.25
This type of malware poses challenges to traditional
network defenses because its C&C traffic is both encrypted
and sent to a trusted source.

Trojan.Gtalk

• C:\WINDOWS\system32\syschk.ocx
• C:\WINDOWS\system32\form.ocx
It also modifies the system’s Internet Explorer (IE)
browser (i.e., C:\Program Files\Internet Explorer\
iexplore.exe) so it runs every time the browser is opened.
Prior to exploitation, the MD5 hash of iexplore.exe is
b60dddd2d63ce41cb8c487fcfbb6419e. After exploitation,
this becomes 10eb6a3001376066533133a3d417c3b9.

Trojan.Gtalk was discovered and documented by CyberESI
in December 2011.26 This piece of malware uses a legitimate
program called “gloox,” a Jabber/XMPP client, to utilize
Gtalk as a C&C mechanism. Since Gtalk communication is
encrypted by default, the C&C communication is encrypted
at the network level. In addition, this malware uses
another layer of encryption so the content transmitted
between a victim and the attacker is protected. Trojan.
Gtalk has been used as both a first- and a second-stage
malware component.
The sample we analyzed was used as part of a multistage
component. The initial sample we discovered was an .EXE
file that opened a .PDF file after execution.

Figure 18: IE certificate before and after modification
25 Analysis of this malware when it was first discovered in 2010 is
available in http://www.nartv.org/2010/10/22/command-and-controlin-the-cloud/.
26 http://www.cyberesi.com/2011/12/15/trojan-gtalk/
PAGE 9 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

Various layers of encryption, along with the use of
Google’s Gtalk servers, make detection at the network
level challenging. Usual mechanisms such as matching
based on strings in URL paths or blocking domains and
IP addresses do not apply in this case. By abusing trusted
infrastructure, attackers are able to effectively conceal
their activities from network-based detection. The fake
.PNG file downloaded, which contains the Base64-encoded
URL, can, however, be detected as it is still requested using
plain HTTP.

Deep Discovery can detect such suspiciously
malformed images.
Figure 19: Decoy .PDF file opened after execution

The malware then connects to a server and requests for
the file, facebook.png, which contains Base64-encoded
commands to download additional components.

Figure 20: Request to download facebook.png

One of the commands contained within facebook.png
instructs the compromised computer to download date.gif,
a fake .GIF file that actually contains a version of Trojan.
Gtalk that has been encrypted with the Rijndael algorithm.

Figure 21: Decoded Base64 command to download Trojan.Gtalk

Once decrypted and executed, Trojan.Gtalk uses embedded
credentials to log in to an account and send and receive
communication from accounts on its contact list. The
malware receives encrypted messages, decodes and
executes these, then communicates results back to the
Gtalk account that issued the commands.

PAGE 10 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

Conclusion
The ability to detect APT activity at the network level
is heavily dependent on leveraging threat intelligence.
A variety of very successful ongoing campaigns
can be detected at the network level because their
communications remain consistent over time.
Modifications made to malware’s network communications
can, however, disrupt the ability to detect them. As such,
the ongoing development of threat intelligence based on
increased visibility and information sharing is critical to
developing indicators used to detect such activity at the
network level.
Trend Micro has also included more generic techniques
in Deep Discovery, which have proven useful. While these
indicators may generate false positives, they will still
help detect previously unknown malicious activity at the
network level:
• Protocol-aware detection: Many of the RATs used
in targeted attacks use HTTP/HTTPS ports to
communicate, often because only these ports are
open at the firewall level. This means that detecting
any non-HTTP traffic on port 80 or any non-HTTPS
traffic on port 443 flags potentially malicious traffic
for further investigation. While not conclusive, such
alerts can provide direction as to where to focus
investigative resources.

• Timing and size: Since malware typically “beacon”
to C&C servers at given intervals, monitoring
consistent intervals for Domain Name System (DNS)
requests or requests to the same URL will help.28 As
more APT campaigns move from HTTP to HTTPS
communications, as Sykipot did, communications may
still be detected by analyzing traffic based on the
“volume of transferred data, timing, or packet size.”29
Such requests can then be further investigated.
As adversaries adapt, more general methods can be
implemented to detect suspicious behaviors. While this
may result in an increase in false positives, enterprises
that are consistently targeted by APT activity may wish
to explore such options. Multiple ongoing APT campaigns,
however, can be consistently detected at the network
level. While exploits and binaries may be modified to
avoid detection, network traffic tends to remain constant.
In such a case, it is possible to detect APT activity by
leveraging threat intelligence in network traffic analysis.

• HTTP headers: Many targeted campaigns use HTTP
for C&C communication but send requests using
application programming interface (API) calls that can
often be distinguished from typical browsing activity.
Analyzing HTTP headers can be a useful generic way
to detect malware communications.27
• Compressed archives: Attackers have been known to
use password-protected, compressed archives such
as .RAR files to exfiltrate data from compromised
networks. While it may generate a high level of false
positives, detecting such files that leave the network is
trivial.

27 http://sector.ca/sessions2011.htm#Rodrigo%20Montoro

28 http://www.splunk.com/web_assets/pdfs/secure/Splunk_for_APT_
Tech_Brief.pdf
29 https://anonymous-proxy-servers.net/paper/wpes11-panchenko.pdf
PAGE 11 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

Trend Micro™ Deep Discovery in Focus
Deep Discovery delivers the networkwide visibility, insight,
and control needed to detect and identify targeted attacks
in real time. It provides in-depth analysis and actionable
intelligence to immediately remediate threats and prevent
further damage.
Deep Discovery’s proven approach provides the best
detection with the fewest false positives by identifying
malicious content, communications, and behavior across
every stage of the attack sequence. Through detection and
in-depth analysis of both advanced malware and evasive
attacker behaviors, Deep Discovery provides enterprises
and government organizations a new level of visibility and
intelligence to combat APTs and targeted attacks across
the evolving computing environment.

• Advanced Threat Scan Engine
• Combines traditional antivirus file scanning with
new aggressive heuristic scanning techniques to
detect both known and unknown malware and
document exploits
• Trend Micro Smart Protection Network
• A global threat intelligence and reputation service
that correlates 16+ billion URL, email, and file
queries daily
• Virtual Analyzer
• A virtualized threat sandbox analysis system that
uses customer-specific configurations to detect
and analyze malware

How Deep Discovery Works
Deep Discovery uses a three-level detection scheme to
perform initial detection, simulation and correlation, and,
ultimately, a final cross-correlation to discover “lowand-slow” and other evasive activities discernible only
over an extended period of time. Specialized detection
and correlation engines provide the most accurate and
up-to-date protection aided by global threat intelligence
from the Trend Micro™ Smart Protection Network™
infrastructure and our dedicated threat researchers. The
result is a high detection rate, low false positives, and indepth incident reporting information designed to speed up
the containment of an attack.

As a result, Deep Discovery is able to detect malicious
content and identify suspect communications.

Deep Discovery detects APTs through network traffic
analysis and correlation using the following core
technologies:
• Network Content Inspection Engine
• A deep packet inspection engine that performs
port-agnostic protocol detection, decoding,
decompression, and file extraction across
hundreds of protocols

PAGE 12 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS

What Deep Discovery Detects
Attack Detection

Detection Methods

Malicious content

• Document exploits
• Drive-by downloads
• Zero-day and known malware

• Embedded file decoding and
decompression
• Suspicious file sandbox simulation
• Browser exploit kit detection
• Malware (e.g., signature and
heuristic) scanning

Suspect communications

• C&C communication for all types of
malware—bots, downloaders, data
stealers, worms, backdoors, RATs,
and blended threats

• Destination (e.g., URL, IP address,
domain, email, Internet Relay Chat
[IRC], and channel) analysis via
dynamic blacklisting and whitelisting
• Smart Protection Network URL
reputation checking
• Communication fingerprinting rule
use
• Comparison with suspicious and
known malicious SSL certificates

Attack behaviors

• Malware activity (e.g., propagation,
downloading, and spamming)
• Attacker activity (e.g., scanning,
brute-forcing, and service
exploitation)
• Data exfiltration

• Rule-based heuristic analysis
• Identification and analysis of the
use of hundreds of protocols and
applications, including HTTP-based
applications
• Behavior fingerprinting rule use

TREND MICRO™

TREND MICRO INC.

Trend Micro Incorporated (TYO: 4704; TSE: 4704), a global cloud security
leader, creates a world safe for exchanging digital information with its Internet content security and threat management solutions for businesses
and consumers. A pioneer in server security with over
20 years’ experience, we deliver top-ranked client, server and cloudbased security that fits our customers’ and partners’ needs, stops
new threats faster, and protects data in physical, virtualized and cloud
environments. Powered by the industry-leading Trend Micro™ Smart Protection Network™ cloud computing security infrastructure, our products
and services stop threats where they emerge—from the Internet. They are
supported by 1,000+ threat intelligence experts around the globe.

10101 N. De Anza Blvd.
Cupertino, CA 95014
U.S. toll free: 1 +800.228.5651
Phone: 1 +408.257.1500
Fax: 1 +408.257.2003
www.trendmicro.com

©2012 by Trend Micro, Incorporated. All rights reserved. Trend Micro and the Trend Micro t-ball logo are trademarks or registered trademarks of Trend Micro, Incorporated. All other product or company
names may be trademarks or registered trademarks of their owners.

PAGE 13 | DETECTING APT ACTIVITY WITH NETWORK TRAFFIC ANALYSIS